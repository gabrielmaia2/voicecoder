Proceedings of the 2000 6TH IEEE International Workshop on
Cellular Neural Networks and their Applications (CNNA 2000)
DISTRIBUTION STATEMENT A Approved for Public Release Distribution Unlimited
Dipartimento Elettrico Elettronico e Sistemistico Universitä degli Studi di Catania Catania, Italy May 23-25,2000
20010817 074
IEEE
IEEE 00TH8509

REPORT DOCUMENTATION PAGE

Form Approved OMB No. 0704-0188

Public reporting burden for this collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources,

gathering and maintaining the data needed, and completing and reviewing the collection of information. Send comments regarding this burden estimate or any other aspect of this

collection of information, including suggestions for reducing this burden to WashingtöfTHeädquarters Services, Directorate for Information Operations/?„".d Reports, 1215 Jefferson

Davis Highway, Suite 1204, Arlington, VA 22202-4302, and to the Office of Management and Budget, Paperwork Reduction Project (0704-0188), Washington, DC 20503.

1. AGENCY USE ONLY (Leave blank)

2. REPORT DATE

3. REPORT TYPE AND DATES COVERED

23 May 2000

Conference Proceedings

4. TITLE AND SUBTITLE 6th Intl. Workshop on Cellular Neural Networks & Applications

5. FUNDING NUMBERS F61775-00-WF055

6. AUTHOR(S) Conference Committee

7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES)
Universita di Catania Viale Andrea Doria 6 Catania 95125 Italy

8. PERFORMING ORGANIZATION REPORT NUMBER
N/A

9. SPONSORING/MONITORING AGENCY NAME(S) AND ADDRESS(ES)
EOARD PSC 802 BOX 14 FPO 09499-0200
11. SUPPLEMENTARY NOTES

10. SPONSORING/MONITORING AGENCY REPORT NUMBER
CSP 00-5055

12a. DISTRIBUTION/AVAILABILITY STATEMENT Approved for public release; distribution is unlimited.

12b. DISTRIBUTION CODE A

13. ABSTRACT (Maximum 200 words)
The Final Proceedings for 6th Intl. Workshop on Cellular Neural Networks & Applications, 23 May 2000 - 25 May 2000
This is an interdisciplinary conference. Topics include basic theory of cellular nonlinear spatiotemporal phenomena, physical implementations (VLSI, Optical, Nanotechnology), CNN computers, biologically inspired intelligent robots, and sensor networks for data fusion and real time control.

14. SUBJECT TERMS

EOARD, Computational Mathematics

17. SECURITY CLASSIFICATION OF REPORT
UNCLASSIFIED NSN 7540-01-280-5500

18. SECURITY CLASSIFICATION OF THIS PAGE
UNCLASSIFIED

15. NUMBER OF PAGES

462 16. PRICE CODE

19, SECURITY CLASSIFICATION OF ABSTRACT

N/A 20. LIMITATION OF ABSTRACT

UNCLASSIFIED

UL
Standard Form 298 (Rev. 2-89) Prescribed by ANSI Std. 239-18
298-102

Proceedings of the 2000 6TH IEEE International Workshop on
Cellular Neural Networks and their Applications (CNNA 2000)
Dipartimento Elettrico Elettronico e Sistemistico Universitä degli Studi di Catania Catania, Italy May 23-25,2000
IEEE
IEEE00TH8509 ffi W ll-fitf

Copyright and Reprint Permission: Abstracting is permitted with credit to the source. Libraries arc permitted tö photocopy beyond the limit of U.S. copyright law for private use of patrons those articles in this volume that carry a code at the bottom of the first page, provided the per-copy fee indicated in the code is paid through Copyright Clearance Center, 222 Rosewood Drive, Danvers, MA 01923. For other copying, reprint or republication permission, write to IEEE Copyrights Manager, IEEE Operations Center, 445 Hoes Lane, P.O. Box 1331, Piscataway, NJ 08855-1331. All rights reserved. Copyright ©2000 by the Institute of Electrical and Electronics Engineers, Inc.
IEEE Catalog Number O0TH8509 ISBN 0-7803-6344-2 Library of Congress Number 00-01526

CNNA 2000
ßth JEEE international Workshop on Cellular Neural Networks and their Applications
Catania, 23-25 May 2000, Catania
ACKNOWLEDGEMENT
The Organizing and Scientific Committee wish to thank the following for their contribution to the success of this conference:
• IEEE Circuit and Systems Society • European Office of Aereospace Research and Development, Air Force
Office of Scientific Research, United States Air Force Research Laboratory • Office of Naval Research Europe • Universitä degli Studi di Catania • Regione Siciliana • Ministero degli Affari Esteri, Direzione Generale per la Promozione e la
Cooperazione Culturale, Roma • ST Microelectronics, Catania • Yamaha Motor Europe • Accent • Azienda Provinciale Turismo, Catania

Foreword

This volume of the Proceedings of the Sixth International Workshop on Cellular Neural Networks and their Applications contains all the contributions to CNNA2000. The Symposium has been organized by the Department of Electrical, Electronic and System Engineering of the Universita degli Studi di Catania and by the Soft Computing Group of ST Microelectronics. The Symposium is co-sponsored by the IEEE Circuits and System Society.
In this volume many excellent contributions regarding the various areas of CNN Technology, including research and development, are included. People from more than 20 countries world-wide will present their latest results concerning theoretical aspects, applications, and hardware implementation. Particular attention has been paid to new trends of research, beyond traditional real-world applications, in an attempt of leading a path for the
CNN research of the new millenium. The University of Catania, one of the oldest of Italy, founded in 1434, is very happy
to host the symposium, together with the Administrative council, the Academic Senate, and the Dean of the Engineering Faculty, and warmly greeting the attendees to the symposium. It is a great honour for all of us to have the opportunity to celebrate Prof. Leon O. Chua, conferring him the Laurea ad Honorem, with a ceremony which will be held after the
Plenary Session, during the first day of the symposium. CNN research and applications span a great variety of fields and has raised
increasing attention from scientists and engineers coming from different research areas. In particular, Catania has become a relevant pole in CNN research, involving both academic and industrial research teams, as the System and Control Group of the Electric, Electronic and System Department, the Soft Computing Group of ST Microelectronics, and the National Research Council (CNR), which impressively develops applications devoted to the monitoring of Etna volcanic eruptions. In this framework, Cellular Neural Networks are
widely treated in an undergraduate course. A short course in CNN, held by the last year students, will parallel the conference
with the aim of presenting the fundamentals of CNN Technology to the younger students. The Organizing Committee of CNNA2000 is glad to host also the Nonlinear Dynamics of Electronic Systems Workshop, NDES2000, joined to CNNA2000 as in Seville, 1996.
The Conference site is located within the University Campus, to promote the fascinating subjects of CNN Technology to students, researchers, and people not yet
involved in this field. We are very grateful to the IEEE Circuits and Systems Society (CAS), the Office of
Naval Research Europe (ONR), ST Microelectronics (Catania site), Accent, Yamaha Motors Europe, Universita degli Studi di Catania, Regione Siciliana, Ministero degli Affari Esteri (Roma) who sponsored this Symposium, and to the Scientific Committee.
My special thanks are to the students of the Adaptive Systems course and to the IEEE Student Branch of Catania, who kindly supported the organization of the events.
I cannot conclude this foreword without reminding the continuous encouragement of my students and alumni, who contributed with their works to the growth of the University of
Catania as a relevant research pole of the Mediterranean area.

Catania, May, 2000

Luigi Fortuna

Scientific Committee:

L.O. Chua

USA

V. Cimagalli

Italy

A.S. Dimitriev

Russia

G. Guzelis

Turkey

M. Hasler

Switzerland

J. Herault

France

J.L. Huertas

Spain

S. Jankowski

Poland

J.A. Nossek

Germany

J. Pineda de Gyvez USA

V. Porra

Finland

A. Rodriguez-Vazquez Spain

T. Roska

Hungary

B. Sheu

USA

M. Tanaka

Japan

V. Tavsanoglu

UK

J. Vandewalle

Belgium

Conference Organization:
CNNA2000 Dipartimento Elettrico Elettronico e Sistemistico Facolta di Ingegneria, Universita di Catania, Viale Andrea Doria, 6 - 95125 Catania, Italy fax: +39 095 339535 e-mail: gmarlet@dees.unict.it, lfortuna@dees.unict.it

Organising Committee:

L. Fortuna P. Arena L. Carnimeo M. Gilli L. Occhiplnti G. Palumbo F. Sargeni

University of Catania, General Chair University of Catania Politecnico di Bari Politecnico di Torino STMicroelectronics, Catania University of Catania University of Rome 'Tor Vergata"

Co-sponsored by:
IEEE Circuits and Systems Society Universita degli Studi di Catania ACCENT Regione Siciliana Office of Naval Research Europe ST Microelectronics Catania Yamaha Motor Europe Ministero Affari Esteri, Direzione Generale per la Promozione e la Cooperazione Culturale, Roma

TABLE OF CONTENTS

Lectio Magistralis
L.O. Chua "Universal CNN Cells"

Session Theory I

I. Petras, T. Roska

i

"Application of Direction Constrained and Bipolar Waves for Pattern Recognition"

P. Szolgay, T. Hidvegi, Z. Szolgay, P. Kozma

9

"A Comparison of the Different CNN Implementations in Solving the Problem of

Spatiotemporal Dynamics in Mechanical Systems"

C.Rekeczky,B. Roska, E. Nemeth, F. Werblln

15

"Neuromorphic CNN Models for Spatio-Temporal Effects Measured in the Inner and

Outer Retina of Tiger Salamander"

V.Mladenov, H.Hegt

21

"On Waves and Recovering in One-dimensional Autonomous CNNs"

L. Goras, T. Teodorescu, A. Maiorescu

27

"Phase Influence on Mode Competition in Turing Pattern Formation"

V.G.Yakhno

33 (

"Dynamics of Autowave Processes in Neuron-Like Systems and CNN Technology"

Session Applications I

D. Monnin, L. Merlat, A. Köneke, J. Herault

39

"Straightforward Design of Robust Cellular Neural Networks for Image Processing"

I.V. Nuidel, V.G.Yakhno

45

"Modelling of Extraction of Image Fragments in the Forms of Crosses and Rhombuses in

the Simulated Receptive Fields"

L. Czüni, T. Sziränyi

51

"Motion Segmentation and Tracking Optimization with Edge Relaxation in the Cellular

Nonlinear Network Architecture"

M.Tanaka,Y.Tanji,M.Onishi,T.Nakaguchi

57

"Lossless Image Compression and Recontruction by Cellular Neural Networks"

V. Tavsanoglu, E. Saatci

63

'Teature Extraction for Character Recognition Using Gabor-type Filters Implemented by

Cellular Neural Networks"

B.E. Shi

69

"Subthreshold Implementation of a 2D CNN Gabor-type Focal Plane Filter"

Plenary Session

T. Roska

73

"Analogic Computing: System Aspects of Analogic CNN Sensor Computers"

VII

Demo Session

A. Zarändy, S. Espejo, P. Földesy, L. Kek, G. Linan, C. Rekeczky, A. Rodriguez-

79

Väzquez, T. Roska, I. Szatmari, T. Sziränyi, P. Szolgay

"CNN Technology in Action"

Session Poster I

M. Mori, M. Matsuyama, Y. Tanji, M. Tanaka

83

"CNN Image Compression and Reconstruction Based on Non-Orthogonal Wavelet Transform"

N.K. AI-Ani, T. Kacprzak

87

"Time-Varying Cellular Neural Network Based Morphological Image Processing"

M. Brendel, T. Roska

93

"Adaptive Image Sensing and Enhancement Using the Adaptive Cellular Neural Network Universal Machine"

A. Gacsädi, P. Szolgay

99

"An Analogic CNN Algorithm for Following Continuously Moving Objects"

V. Gäl, T. Roska

105

"Collision Prediction via the CNN Universal Machine"

L. Orzo

j j j

"Optimal CNN Templates for Deconvolution"

A. Zanela, S. Taraglio

117

"A Cellular Neural Network Stereo Vision System for Autonomous Robot Navigation"

A. Loncar, R. Kunz, R. Tetzlaff

J23

"SCNN 2000 - Part I: Basic Structure and Features of the Simulation System for Cellular Neural Networks"

R. Kunz, A. Loncar, R. Tetzlaff

129

"SCNN 2000 - Part II: The Simulation Control System"

M. Balsi

135

"Regularization-Based Continuous-Time Motion Detection by Single-Layer Cellular

Neural Networks"

G. Grassi, G. Acciani

141

"Heteroassociative Memories via Globally Asymptotically Stable Discrete-Time Cellular Neural Networks"

C. Amenta, P. Arena, S. Baglio, L. Fortuna, D. Richiusa, M.G. Xibilia, L. Vullo

147

"SC-CNNs for Sensor Data Fusion and Control in Space Distributed Structures"

P. Arena, L. Bertucco, R. Caponetto, L. Fortuna, G. Nunnari, D. Porto

153

"Autowaves in Noninteger Order CNNs"

L. Bertucco, G. Fargione, G. Nunnari, A. Risitano

159

"A Cellular Neural Networks Approach for Non-Destructive Control of Mechanical

Parts"

Session Advanced Theory

D. Bälya, B. Roska, E. Nemeth, T. Roska, F. Werblin

165

"A Qualitative Model-Framework for Spatio-temporal Effects in Vertebrate Retinas"

VIII

A. Loncar, R. Tetzlaff

171

"Cellular Neural Networks with Nearly Arbitrary Nonlinear Weight Functions"

M. Hänggi, R. Dogaru, L.O. Chua

177

"Physical Modeling of RTD-Based CNN Cells"

R. Dogaru, M. Hänggi, L.O. Chua

183

"A Compact Universal Cellular Neural Network Cell Based on Resonant Tunneling

Diodes: Circuit Design, Model and Functional Capabilities"

M. Hänggi, L.O. Chua, R. Dogaru

189

"A Simple RTD Based Circuit for Boolean CNN Cells"

W.C.Yen,C.Y.Wu

195

"The Design of Neuron-Bipolar Junction Transistor (vBJT) Cellular Neural Network

(CNN) Structure with Multi-Neighborhood-Layer Templates"

Session Hardware I

G. Lilian, S. Espejo, R. Donunguez-Castro, A. Rodriguez-Vazquez

201

"The CNNUC3: An Analog I/O 64 x 64 CNN Universal Machine Chip Prototype with 7-

Bit Analog Accuracy"

A. Dupret, J.O. Klein, A. Nshare

207

"A Programmable Vision Chip for CNN Based Algorithms"

Cs. Rekeczky, T. Serrano-Gotarredona, T. Roska, A. Rodriguez-Vazquez

213

"A Stored Program 2nd Order/3-layer Complex Cell CNN-UM'

G. Lilian, P. Foldesy, A. Rodriguez-Vazquez, S. Espejo, R.Dominguez-Castro

219

"Realization of Non-Linear Templates Using the CNNUC3 Prototype"

M. Salerno, F. Sargeni, V. Bonaiuto

225

"Design of a Dedicated CNN Chip for Autonomous Robot Navigation"

A. Paasio, J. Paakkulainen, J. Isoaho

229

"A Compact Digital CNN Array for Video Segmentation System"

Session Theory II

N.K. Al-Ani, T. Kacprzak

235

"Application of Time-Varying Cellular Neural Network for Optimal Solutions"

R. Kunz, R. Tetzlaff

241

"Evolutionary Learning Strategies for Cellular Neural Networks"

P.P. Civalleri, M. Gilli

247

'Template Design Methods for Binary Cellular Neural Networks"

A. Dabrowski, Z. Galias, M. Ogorzalek

253

"Phase Synchronization Phenomena in generalized CNN Composed of Chaotic Cells"

A. Slavova

259

"CNN Model for Hyperbolic Equations with Hysteresis"

Plenary Session

A. Rodriguez-Vazquez

265

"State-of-the-Art and Prospections for VLSI Mixed-Signal Implementations"

IX

Session Poster II

A. Zarandy, M. Csapodi, T. Roska

267

"20 usec Focal Plane Image Processing"

M. Salerno, F. Sargeni, V. Bonaiuto, S. Taraglio, A. Zanela

273

"Design and Test of a Board for CNN-Based Stereo Vision"

M. Perko, I. Fajfar, T. Tuma, J. Puhan

277

"Low-Cost, High-Performance CNN Simulator Implemented in FPGA"

P. Földesy, G. Linän, A. Rodrfguez-Väzquez, S. Espejo, R. Dominguez-Castro

283

"Object Orientated Image Segmentation on the CNNUC3 Chip"

P. Földesy, G. Llnan, A. Rodriguez-Vazquez, S. Espejo, R. Dominguez-Castro

289

"Structure Reconfigurability of the CNNUC3 for Robust Template Operation"

P. Palazzari, M. Coli, R. Rughl

295

"Massively Parallel Processing Implementation of the Toroidal Neural Networks"

C.Y. Wu, C.H. Cheng

301

"The Design of Cellular Neural Network with Ratio Memory for Pattern Learning and

Recognition"

A. Porebska

309

'The Impact of the Rule Structure on the Algorithm of 2D Cellular Automata Implementation"

E. Gatt, J. MicaUef, E. Chilton

315

"An Analog VLSI Time-Delay Neural Network Implementation for Phoneme Recognition"

A. Kananen, A. Paasio, K. Halonen

321

"Overlapping Issues in Designing Large CNNs"

V.M. Preciado, D. Guinea, J. Vicente, M.C. Garcia-Alegre, A. Ribelro

327

"Automatic CNN Multi-Template Tree Generation"

M. Branciforte, G. Giustolisi, V. Nlcotra, G. Palumbo

333

"VLSI Implementation of a Double-Layer Single Cell RD-CNN for Motion Control"

P. Arena, L. Fortuna, M. Frasca

339

"Extended SC-CNN Implementation of the Hindmarsh-Rose Neuron"

L. Fortuna, M. Branciforte, S. Strazzuso, M.G. Xlbilia

345

"A 2-D Conveyor Belt Driven by a RD-CNN"

Session Applications II

K. Wiehler, M. Perezowsky, R.-R. Grigat

351

"A Detailed Analysis of Different CNN Implementations for Real-Time Image

Processing System"

K.R. Crounse, C. Wee, L.O. Chua

357

"Linear Spatial Filter Design for Implementation on the CNN Universal Machine"

P. Lopez, M. Balsl, D.L. VUarino, D. Cabello

363

"Design and Training of Multilayer Discrete Time Cellular Neural Networks for

Antipersonnel Mine Detection Using Genetic Algorithms"

X

M. Brucoli, D. Cafagna, L. Carnimeo "A New Synthesis Procedure of Cellular Optimal Linear Associative Memories for Robot Vision Systems"
S. Taraglio, A. Zanela, A. Pellecchia 'The Longitudinal Motion Stereo problem: A CNN Approach"
V.M. Preciado, D. Guinea, J. Vicente, M.C. Garcia-Alegre, A Ribeiro "Genetic Programming of a CNN Multi-Template Tree for Automatic Generation of Analogic Algorithms"
Session Theory III A.G. Radvänyi "On the Rectangular Grid Representation of General CNN Networks"
I. Szatmari 'The Implementation of a Nonlinear Wave Metric for Image Analysis and Classification on the 64 x 64 I/O CNN-UM Chip"
M. Laiho, A. Paasio, K. Halonen "Structure of a CNN with Linear and Second Order Polynomial Feedback Terms"
K. Yokosawa, Y. Tanji, M. Tanaka "CNN with Multi-Level Hysteresis Quantization Output"
A.S. Kuznetsov, V.D. Shalfeev "Stationary Spatial Patterns in CNN of Bistable Cells with Nonlinear Couplings"
A.S. Kuznetsov, V.D. Shalfeev "Dynamics of a CNN with Variable Number of Couplings"
Session Hardware II V.M. Brea, DX. Vilarifio, D. Cabello "A DTCNN Circuit Proposal for Pixel-level Snakes"
S. Jankowski, A. Wielgus, W. Pleskacz, B. Buczynski, M. Wisniewski "IC Design of 8x8 Digital CNN with Optoelectronic Interface"
A. Paasio, K. Halonen "Cellular Nonlinear Network Implementation for Nonlinear B-Template"
C. Baldanza, F. Bisi, M. Bruschi, L Dantone, S. Meneghini, M. Rizzi, M. Zuffa "A Cellular Neural Network for Peak Finding in High-Energy Physics"
A. Marongiu, V. Cimagalli "m-Dimensional DT-CNN Implementation via Nested Lower Dimensional Architecture"
Late Papers L. Bertucco, A. Fichera, G. Nunnari, A. Pagano "A Cellular Neural Networks Approach to Flame Image Analysis for Combustion Monitoring"
Author Index

369 375 381
387 395 401 407 413 419
425 431 437 443 449
455
461

XI

2000 6™ THP.P. International Workshop on Cellular Neural Networks and Their Applications Proceedings
Universal CNN Cells
Leon 0. Chua Department of Electrical Engineering
and Computer Sciences University of California, Berkeley
Berkeley, CA94720 USA
0-7803-6344-2/00/$10.00 ©2000 IEEE

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Application of Direction Constrained and Bipolar Waves for Pattern Recognition
Istvän Petras1 and Tamäs Roska1,2
'Analogical and Neural Computing Laboratory, Computer and Automation Institute, Hungarian Academy of Sciences, Kende u. 13-17, H-llll Budapest, Hungary 'Electronics Research Laboratory, College of Engineering, University of California at Berkeley, Berkeley, CA 94720, USA
E-mail: petras@lutra.sztaki.hu, roska@lutra.sztaki.hu

ABSTRACT: Direction constrained and bipolar waves are introduced Their possible applications for direction selective curvature and concavity detection as well as region segmentation are shown. A CNN algorithm frame for feature-based object decomposition is
presented Algorithms are tested on the 64x64 CNNUM chip.

1 Introduction

Cellular Neural Networks (CNN)[1][21, the CNN paradigm [3] and the analogic computer, the CNN Universal Machine

[4], provide a new computational approach to spatiotemporal computing in particular image processing. The recent implementation of the CNN Universal Machine (CNN-UM) architecture, an analog visual microprocessor [5], exhibits

trillion operations per second in a single chip. Contrary to usual digital Computing, the application of the CNN paradigm and

analogic algorithms require a completely different way of thinking. Instead of sequentially repetitively executed arithmetic

and logic instructions, the CNN analogic programs consist of the combination of logic and spatiotemporal analog

operations. This analog operation - defined by a template - performs complex computational tasks in a single dynamic wave

or process.

.

In this paper new propagating wave types are described in section 2 and some of their applications are presented in

section 3. Algorithms are tested on the new 64x64 CNNUM chip [5] in the CADETWin [6] and CCPS environment [7].

2 Special Propagating Waves
In section 2.1 a binary propagating wave is introduced, which propagates along a predefined direction and the propagation stops when a certain convex hull of the object is filled. The convexity is interpreted only into the direction of propagation. In section 2.2 a wave type is described that propagates symmetrically, but black and white waves spread simultaneously. When two differently colored waves bump they annihilate each other.
The input and the initial state of the network are the same in the case of both wave types.
2.1. Direction constrained wave
Trigger waves, which have symmetric generator template matrix, were discussed in detail in [8]. In this section a direction selective trigger-like wave is proposed. The propagation starts from those black pixels around which there is a properly oriented, L shaped pixel configuration (see Fig. 2) and propagates parallel; therefore, the wavefront has a straight edge shape. The angle of the direction of the normal vector of the propagating wavefront is denoted by a. Fig. 1 shows the interpretation of a.

0-7803-6344-2/00/S10.00 ©2000 IEEE

Lines limiting the region of propagation

Figure 1: Direction constrained wave propagation. The Black area is the initial object. Symbol ais the angle of the normal vector of the propagation, ß denotes the angle of the relevant boundary of the object. Y,J2are the angles of the lines which bound the region that will be füled. The filled area is denoted by gray color.

Figure 2: The result of the concavity filler template in a 3x4 sized window, a=26.56°. The stable pixels are denoted by black. Gray color denotes those pixels that are to be turned into black in the next step. Propagation occurs if there is a properly oriented, L shaped pixel configuration around a white pixel.

Propagation occurs if K < ß< y, and K < a+rtf2 < y,. This rule can be transformed into pixel level: those white pixels will be black which have black neighbours to north-west, south-west, south and white neighbour to north-east. Of course, this pixel configuration depends on the direction, which is expressed by a.

Figure 3: The result of the concavity filler
template in a 10x10 sized window, a=26.56°. Gray color denotes those pixels that are to be turned into black.

Figure 4: The Result of the concavity filler template., a=26.56 °

Inequalities and templates for other directions can simply be produced by geometrical rotation and mirroring. In Fig. 2 and Fig. 3 the result of a concavity filler template can be seen when a=26.56°.

Passible a values and related A-template design

As a result eight different templates can be produced. Possible a values are: a= arctan(±0.5)+k2rc, a= arctan(±2) +k2rt, k=0.. 1.
The following template generates propagation for the a=26.56 ° (arctan -0.5) direction:

l o r

"0 0 0"

0 2 0 , B= 0 2 0 z=2

1 10

0 0 0

This type of wave can fill regions where the tangents of object boundary points are within a prescribed range. This means that the concave segments of the object can be filled depending on the orientation of the concavity. The effect of the

template can well be observed in Fig. 4. The concavity template (which can be found in the CNN Software Library [10]) produces similar, but direction independent result.
2.2. Bipolar waves
All cells of a CNN-UM that compute a wave - except the cells changing in the wave front - are in one of the stable states: they are either black or white. However, there is a third, unstable state - the zero level -, which can be applied in computation. Thus, in the same structure two different wave types can be initiated: black waves starting from black patches and white waves triggered by white patches. Other empty areas are set to zero. When two, similarly colored waves collide, they join. But when two different waves collide, annihilation occurs. See Fig 5.

Figure 5: Transients of bipolar waves. When two different waves collide, annihilation occurs.
One possible template for this is:

0.3 0.3 0.3

0 0 0"

0.3 0.8 0.3 , B = 0 1 0

0.3 0.3 0.3

0 0 0

z = 0

Since the speed of propagation of the black and the white waves are the same, the annihilation will occur half way between two different patches. The boundary where the annihilation occurs will be a line (Fig. 6).

Figure 6: Waves of two patches. The annihilation zone divides the distance of the initial patches into two equal parts.
If more than two different patches are present, a continuous boundary consisting of line segments will be formed. Thus, if two point sets are given the region boundary can be approximated (Fig. 7).
H Figure 7: Bipolar waves when three points are present. The annihilation zone consists of two line segments.

2.3. Curvature and concavity based object decomposition
One of the characteristic features which human recognition seems to be based on is the local curvature of objects. Several objects can well be described by the positions and relations of their curvature locations. During his experiment, Fujita [8] found that in monkeys' inferotemporal cortex, there are neurone cells which are sensitive exclusively to specific complex shapes and patterns. This recognition is not a kind of template matching, but a much more robust process which can tolerate wide range changes of illumination and viewing angle of objects. The CNN operation presented in section 2.1 is suitable for detection of differently oriented arc segments. Since the curvature is a scale invariant property, it can be an effective descriptor of objects. Here a CNN algorithm frame for object classification is presented, where feature-based decomposition is applied first and then the resulting images are filtered by logic operations.
1. Apply the direction selective concavity filler template to the initial black and white images. Do this for all desired directions of arcs by applying the appropriately transformed template.
2. Subtract the original image from all of the result images and remove small patches and single pixels. 3. Form logic combinations of the result images of the previous step, which contain at this point only patches at the
locations of selected concavities. By logic combination, direction selectivity can be improved. 4. Classify the patches by distance. As a result we get images on which patches are left that have specified distance
and orientation compared to each other. 5. Make logic combination of the result images of the previous step. 6. Compose logic OR of each image. The result is a binary feature vector.
Steps 4 and 5 are not always necessary. The distance classification can be accomplished by applying the variants of shadow templates for projecting shadows of prescribed length into appropriate directions. If two images are given that contain patches, let the transient of shadow template run until it reaches the desired length in the first image. Then make logic AND of the two images. The result contains patches which fall into the selected direction and are not farther from the patches in the first image than the length of the projected shadow. The shadow template variants can be found in [10].
This algorithm skeleton is used for some applications which are presented in the following section.
3 Applications
In the following sections some applications of the formerly described methods and algorithm are presented. All the applied templates can be found in [10]. The algorithms were implemented in the new CADETWin and CCPS environment.
3.1. Geon detection by analogic algorithm
By applying some of the previously described algorithm steps to two geons similar to the ones presented by Fujita [9] similar result can be reproduced on the 64x64 CNNUM chip. An earlier CNN algorithm for this geon detection problem is presented in [11]. The flowchart of the algorithm can be seen in Fig 8. The basic idea is to select those objects in which an L and a horizontally mirrored L shape can be found close to each other. Closeness is evaluated by increasing the size of the patches and then composing the logic AND of the two images containing the patches. If two L shaped patterns are close enough to each other the intersection of them is not empty.
3.2. Hand orientation detection on the 64x64 CNNUM chip
The algorithm's main steps are the same as in section 2.3 but the distance classification steps are left out. The input image is grabbed from a camera and then it is thresholded. After that concave regions falling into four directions are located by the template proposed in section.2.1. Then the direction selectivity is improved by logic combinations of the four images. Afterwards the original image is subtracted from the images and the small patches are removed. Finnaly binary decisions are made, based on whether the images contain black pixels or not. By more complex logic decision, more precise classification can be accomplished. Application of distance classification can further improve the accuracy of the detection.

Concavity 153°
±±
Concavity 26°

J__L
^J
Patchmaker -
Patchmaker -
_L_L
*| Logdir |

I ANP|-

Figure 8: Selection of those objects which are similar to a flipped T. The text boxes contain the names of the applied templates and logic operations. All the operations are run on the 64x64 CNNUM chip.

Input

Orientation classes

Figure 9: Hand orientation detection by the 64x64 CNNUM chip. The dotted input line of Logdif symbolises the signal source from the black and white input images. The text boxes contain the names of the applied templates and logic operations.
3.3. Texton segmentation The method is very similar to the one presented in section 3.1. At first the different textons are detected by the algorithm mentioned previously in section 2.3. Then a composite image is created from the two resulting images containing the two texton sets with different a color. The region boundary is detected by bipolar waves described in section 2.2.

Concavity
26° ~l.
Concavity 153"
- Concavity 333°

1 Hr- ■ ••••
J' Patch

maker

■

i

|ANDf-J

H Logdlf
+
Patch maker

•••
r •••■■

■ ■
ANDU

Patch
maker ~U
t
.1

T
••• _J

T^

1
■
1'subtract h-

*
Bipolar wave

1

t>

Figure 10: Texton segmentation. The text boxes contain the names of the applied templates and logic operations. The final image contains the regions.

4 References
[1] L.O. Chua and L. Yang, "Cellular Neural Networks: Theory", IEEE Trans, on Circuits and Systems, (CAS), Vol.35. pp. 1257-1272,1988.
[2] L.O. Chua and L. Yang, "Cellular neural networks: Applications", IEEE Trans, on Circuits and Systems, (CAS), Vol.35, pp. 1273-1290,1988.
(3] L.O. Chua and T. Roska, "The CNN paradigm", IEEE Trans, on Circuits and Systems I: Fundamental Theory and Applications, (CAS-I), Vol.40, No. 3, pp. 147-156, 1993.
[4] T.Roska and L.O.Chua, The CNN universal machine: an analogic array computer, IEEE Trans, on Circuits and Systems II: Analog and Digital Signal Processing Vol. 40, No. 3, pp. 163-173,1993.
[5] S. Espejo, R. Dominguez-Castro, G. Linan, A. Rodriguez-Vazquez, "A 64x64 CNN Universal Chip with Analog and Digital I/O", Proceedings of 5th IEEE International Conference on Electronics, Circuits and Systems, (ICECS'98), pp. 203-206, Lisboa, 1998.
[6] P. Szolgay, K. Läszlö, L. K6k, T. Kozek, L. Nemes, I. Petras, Cs. Rekeczky, I. Szatmäri, Ä. Zarändy, S. Töld and T. Roska, "The CADETWin Application Software Design System - A Tutorial", European Conference on Circuit Theory and Design - ECCTD'99, Design Automation Day proceedings, (ECCTD'99-DAD), Stresa, Italy, 1999, in print.
[7] Ä. Zarändy, T. Roska, P. Szolgay, S. Zöld, P. Földesy and I. Petras, "CNN Chip Prototyping and Development Systems", European Conference on Circuit Theory and Design - ECCTD'99, Design Automation Day proceedings, (ECCTD'99-DAD), Stresa, Italy, 1999, in print
[8] Cs. Rekeczky and L.O. Chua, "Computing with Front Propagation: Active Contour and Skeleton Models in Continuous-Time CNN", lournal of VLSI Signal Processing Special Issue: Spatiotemporal Signal Processing with Analogic CNN Visual Microprocessors, (JVSP Special Issue), Kluwer, 1999 November, in print.
[9] I. Fujita, K. Tanaka, M. Ito and K. Cheng, "Columns for visual features of objects in monkey inferotemporal cortex", Nature 360, pp. 343-346, 1992.
[10] CNN Software Library (Templates and Algorithms) Version 7.3, Edited by T. Roska, L. K£k, L. Nemes, Ä. Zarändy, and P. Szolgay, DNS-CADET-15, Computer and Automation Institute, Hungarian Academy of Sciences, Budapest, 1999.
[11] K: LOTZ, Ä. ZARÄNDY, T. ROSKA, J. HAMORI, An Analogic Phenomenological CNN Algorithm to Model the Mouth Detection Task of the Inferotemporal Cortex Discovered by I. Fujita, in Proc. NOLTA'95, International Symposium on Nonlinear Theory and AppI, Vol.2, pp. 717-722, Las Vegas, 1995.

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

A comparison of the different CNN implementations in solving the problem of spatiotemporal dynamics in mechanical systems Extended abstract
Peter Szolgay, Timdt Hidvegi, Zsöfia Szolgay* , Peter Kozma*
Analogical and Neural Computing Laboratory. Computer and Automation Institute, Hungarian Academy of Sciences, P.O.B.63, H-1502 Budapest, Hungary, Phone :+36Ü698265, Fax:+3612698264, E-mail:szolgay@sztaki.hu + Department of Mechanics, TU Budapest, H-llll, Miiegyetem rkp. 1-5, Budapest, Hungary
++ Image processing and Neurocomputing, University of Veszprem, H-8500 Egyetemu. 10, Veszprem Hungary
ABSTRACT: The targe computing power of the Cellular Neural Networks (CNNs) is used here to compute the transient response of a mechanical vibrating system. A basic question is how an inhomogeneous mechanical system can be computed by using different CNNUM implementations. How complexity to time transformations were used in different CNNUM implementations, namely in software, in emulated digital CNN chip and in analog chip.

1. Introduction

The continuous mechanical vibrating systems whose dynamical behavior is described by a partial differential equation, can be modeled by cellular neural networks and the limits of this approach is discussed as well [8],[9],[10]. The motion of a continuos mechanical vibrating system is described by the Lame equation [8]:

div (gradu) + kgrad (divu) = q/G (d 2u/dt2),

(1)

where u(x,t) denotes the displacement field which is a function of space (x) and time (t) (k, q and G are material
parameters; u and x e R^). Due to the fact that in a CNN the processing elements are arranged in a geometrically ordered form and they are discrete, the spatially continuous problem has to be discretized in space by using the Finite Element Method (FEM) or the Finite Difference Method (FDM). The spatially discretized system is described by a set of ordinary
differential equation

MÜ+DÜ+KU=F

(2)

with initial conditions: C/(0) = U0 and t/(0) = U0 . U(t) is the displacement vector of the discrete nodes. The displacement of the ith node is defined by three consecutive elements of U representing the displacement in x, y and z directions, hi (2) MJK and D are the mass, stiffness and the damping matrices, respectively, and F is the external load or force vector. The second order ODEs of a discretized mechanical system can be implemented on CNN as two-coupled-layer. In case of a linear mechanical vibrating system with one degree of freedom, the following two-coupled-layer CNN can
be used:

dv>xij(t)/dt=-vlxij(t)+ZA21y.ki ^yU+ZBUy;*, v'uki

kUNr(ij)

kleNJij)

(3)

d^xi/dt =ZA,2ij.üv1yki. kleN/ij)

It is supposed that the linear part of f(v,qj) is used, i.e./fVxly)=vx,y and
000 y^-OlO
000

0-7803-6344-2/00/S10.00 ©2000 IEEE

fa the case of a system with one degree of freedom the displacement of the (ij)-th node is v2™, the velocity is v xjj and the external force acting at the node (ij) of the structure is v™. It is modeled by a two-layer CNN. The boundary conditions are given as an additional input to a CNN cell.
In the A21 template the elements of A2,=M-'K and in the B'' template the elements of B1 '»M'1 can be found
according to (2).
The damping component is an additional template C (where the template elements are defined by C=M_1D if the
system is linear). The two questions considered here are the accuracy of the solution and how to solve the inhomogeneous problems. This type of problems will be analyzed in connection with a task described in paragraph 2. The computing power of an analog input, dual (analog and logical) output CNNUM |6], [7] is 1012 (tera)operations/second. The parameter accuracy of the chips is 8 bits but the computation is more accurate. The basic question, how can be a second order dynamical system implemented in an analog array of first order cells. The ODEs of (3) have to be discretized in time but the templates will be space-variant and this is difficult problem in simulation and not solvable on an analog CNN Universal Machine chip (CNNUM). To overcome this problem the mechanical system have to be decomposed to homogeneous parts with a given boundary conditions discussed in paragraph 3.

2. The mechanical system

The longitudinal vibrations of a N*l long beam is considered where each 1 long part has a different cross-section. The equation of the motion of the beam is as follows:

Piüi -EiU" = 0

(4)

where ft and Ej are material parameters and are constant values on a given part of the beam. The u denotes the longitudinal displacement.
The solution supposed to have a following form:

Ui=Ui(x)T(t)
i

Figure 1. A steplike beam with different A, cross-sections

The boundary conditions are as follows:
(i) u,(0H>.
(ii)U,(l)=U2(l),
(iii) A,CT|(1)= A2a2(l) and from this A,U',(1) = A2U'2(1),
(iv)o2(21) = 0.
The initial condition of the dynamical system is defined by an initial displacement of the most right point of the beams.
The coupling of the beams defined by the boundary conditions, that means

U2=ai(a2ui+u'i)F

(5)

10

where ai,a2 are constant values. The a i and a2 are computed from me boundary conditions al=l/(tg2ßl+ctgßl) a2=tg2ßl where 1 is the length of a beam segment and the ß is given by tg2ßl+ctgßl=A2/Al[tg2ßl - tgßl]
By using a spatial discretization on beam segment 1
pü -E(uh-ij-2ui,+ Ui.ijyh2= 0 (6)
The templates of the 1st beam are derived from (6) by using the well-known approximation to the spatial partial derivatives with h uniform grid size:
A2,= E/(ph2)[l -2 1],
The (4) and (5) have to use in spatial discretization on beam segment 2. It is a slightly more complicated to derive the templates of the CNN model. The main parameters of the beam are as follows 1=1 m, R= 0.06 m, E=2 10' N/m2, p=78O0 kg/m3, o=6.5 10" kg/m4 andh=0.05m.
3. Implementation issues of a second order ODEs on CNN
The analysis problem outlined in paragraph 2 have been solved by the CADETWin software simulator [4], by the CASTLE emulated digital CNN chip [ 11 ] and by the 64*64 CNNUM [5], [6].
Two basic problems discussed in this paragraph are as follows: (i) How can we map a set of second order ODEs on different CNN implementations; (ii) How can we solve the problem of inhomogenious structures of mechanical vibrating systems
The CADETWin software simulator is a multilayer CNN simulator where the method given in (3) can be followedThe second order ODEs were implemented by two coupled layer CNN array. An analogic CNN algorithm was developed in a high level Alpha language to define the operation of the multilayer CNN. The simulator can process only homogeneus structures (where the templates are space invariant). The fixed state option provides to process an inhomogeneus structure sequentially. The CASTLE, an emulated digital CNN chip supports of using space variant templates and by this analysis of inhomogeneous mechanical structures as well. The computation on CASTLE chip can be done on 6 bits and on 12 bits allowing a trade off precision for speed. The computing speed of a single processor cell is 24ns/cell/iteration with 12 bit variable precision and making an accuracy - processing speed transformation. The CASTLE chip is now in the testing phase by using the CCPS '99 [5]. By using the CCPS'99 [5] the 64*64 CNNUM chip [6] can be programmed in Alpha. The transient of the second order ODEs of (6) can be computed by two one dimensional layers which were implemented on the two dimensional chip sequentially. The capability of stopping analog transient on the chip has been used. By using the fixed state option, in a similar way as in the software solution, inhomogeneous physical structures can be analyzed.
4. Conclusions
A comparison of accuracy and processing method will be given on the different CNNUM implementations (the software, the emulated digital chip and the analog chip) by using a simple continuous mechanical vibrating system. The different CNNUM implementations have been analyzed how to compute a second order ODE and how to process the inhomegenity of a physical system. To overcome the problem outlined in paragraph 2 there is an other way as well namely to form a second order cell array or by using two coupled layers of standard CNN cells. The complex cell CNNUM chips now in design phase.
11

1 -s

0 7S

05 -

o

0 25

-8 o

S -0 25.

-05

-075

08

OB

04

time (sec)

° 2

0 0

>^0ml0üt'
material points

figure 2. 7%e displacement results the beam structure by using the CADETWin in AMC
5. Acknowledgments This work has been supported by Research Grants of the Hungarian Academy of Sciences at the Computer and Automation Institute, Budapest, the National Institute of Technology (OMFB) (Grant No . 98-97-47-9615) Budapest, Hungary and the National Research Fund of Hungary (Grant No. T02609).
References
[1] L.O.Chua and L.Yang, "Cellular neural networks: Theory.Applications", IEEE Trans, on CAS, Vol.35, pp. 1257-1290, 1988.
[2] T.Roska and L.O.Chua," The CNN Universal Machine: An Analogic Array Computer" IEEE Trans, on CAS-II, Vol.40,pp.l47-156, March 1993
[3] T.Roska, L.O.Chua and A.Zarändy, Language.Compiler and Operating system for the CNN Supercomputer, UCB/ERL M93/34 Berkeley, 1993.
[4] P. Szolgay, K. Läszlö, L. Kek, T. Kozek, L. Nemes, I.Petras, Cs. Rekeczky, I. Szatmäri, A. Zarandy, S. Zöld, T.Roska, 'The CADETWin Application Software Design System - a Tutorial", Proc. of ECCTD99, pp. 5868, Stresa, 1999.
[5] A.Zarandy, T.Roska, P.Szolgay, S. Zöld, P. Földesy, I.Peträs , "CNN chip prototyping and development system", Proc. of ECCTD99, pp. 69-81, Stresa, 1999.
[6] G. Linan, R. Dominguez-Castro, S. Espejo, A Rodriguez-Vazquez, " Design of a large-complexity analog I/O CNNUC, Proc. of ECCTD99, pp. 42-57, Stresa, 1999
[7] J.M.Cruz and L.O.Chua, "Pinout and operation manual of Analog-input Dual(Analog/Logic)-output 16*16 CNN universal chip", UC Berkeley, 1996.

12

[8] P. Szolgay, G.Vörös and Gy. Eröss," On the applications of the Cellular Neural Network (CNN) paradigm in mechanical vibrating systems", EEEE Transactions on Circuits and Systems Vol.40,pp. 222-227,1993.
[9] P.Szolgay, T Szabö, "On the detection of critical frequencies of a tool machine", Proc of IEEE CNNA'96, Seville, 1996
[10] P.Szolgay, I. Sälyi, Zs. Szolgay," Toward the application of an analog input dual output CNNUM chip in transient analysis of mechanical vibrating systems", Proc. of the IEEE INES97, Budapest, 1997.
[11] P.Keresztes, A. Zarandy, T.Roska, P. Szolgay, T.Bezak, T. Hidvegi, P. Jonas, A. Katona, " An emulated digital CNN implementation", J. of VLSI Signal Processing, Vol. 23, pp. 291-303, (1999)
13

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings
NEUROMORPHIC CNN MODELS FOR SPATIO-TEMPORAL EFFECTS MEASURED
IN THE INNER AND OUTER RETINA OF TIGER SALAMANDER
Csaba Rekeczky*, BotondRoska, Erik Nemetk*, and Frank Werblin*
'Analogical and Neural Computing Laboratory, Computer and Automation Institute, Hungarian Academy of Sciences, H-l 111 Budapest, Kende u. 13-17, Hungary
^Vision Research Laboratory, Department of Molecular and Cell Biology, University of California at Berkeley, Berkeley, CA 94720, USA
ABSTRACT: In this paper, a vertebrate retina model is described based on a cellular neural network (CNN) architecture. Though largely built on the experience ofprevious studies ([5], [11], [14]-[15], [17]-[18]) the CNN computational framework is considerably simplified: first order RC cells are used with space-invariant nearest neighbor interactions only. All nonlinear synaplic connections are monotonic continuous functions of the pre-synaptic voltage. Time delays in the interactions are continuous represented by additional first order cells. The modeling approach is neuromorphic in Us spirit relying on both morphological and pharmacological information. However, the primary motivation lies in fitting the spatio-temporal output of the model to the data recorded from biological cells (tiger salamander). In order to meet a low complexity (VLSI) implementation framework some structural simplifications have been made and large neighborhood interaction (neurons with large processes), furthermore the inter-layer signal propagation are modeled through diffusion and wave phenomena. This work presents novel CNN models for the outer and some partial modelsfor the inner (light adapted) retina.
Introduction
A cellular neural network (CNN, [l]-[5]) based vertebrate retina model is discussed synthesized from morphological, pharmacological and physiological measurements. Contrary to a number of previous studies this work puts the focus on reproducing the spatio-temporal patterns of different biological cell layers in a low complexity CNN implementation framework instead of a phenomenological modeling of various retinal functionality (e.g. [17]-[18]). Trying to exactly determine the level of abstractness of the presented model, we can enunciate that following a neuromorphic approach either the cell level dynamics or the aggregate dynamics of a neural network is modeled. In this sense, the current work can be regarded as a continuation and extension of the comprehensive study by Jacobs et al. [15] since the motivation and the methodology used are similar. On the other hand, relying on recent physiological recordings from all discussed retinal cell types made possible to go beyond preceding results and create novel models for the outer and inner retina in a simplified CNN framework.
There are several strong arguments to justify why the CNN computational framework was chosen. The retinal cells are organized into layers, process analog signals and interact locally. Similarly, a CNN is composed Of planar arrays of mainly identical dynamical elements and the program of the entire network is determined by the strength (weights) of the local interactions. In this work the primary motivation was to built a retinal model on a level of abstraction that also defines a realizable physical architecture in the foreseeable future using an existing technology (VLSI, optical or quantum implementation). The main inter-cell interactions in the inner and outer retina are shown in Fig. 1.

Figure 1 Inter-cell interactions in the outer and inner plexiform layer, (left) schematic of the outer retina containing a cone photoreceptor, a horizontal and a bipolar cell, (right) schematic of the inner retina with bipolar cells, narrow field and wide field amacrine cells (ganglion cells that are driven by both bipolar terminals are not shown).

0-7803-6344-2/00/$10.00 ©2000 IEEE

15

The primary motivation of this study lies in building a neuromorphic network that can reproduce the spatiotemporal patterns recorded (see a qualitative approach focusing on functionality in [21]). However, if this is completed in a computational framework that defines a feasible physical architecture then biological-modeling efforts might gain an engineering profit. In the course of this work we tried to balance these two criteria and applied some restrictions to the CNN implementation framework to bring the models within the scope of the existing technologies.
According to the above reasoning the CNN computational framework is defined as follows: a) the base units arefirst order linear RC cells b) all inter-cell interactions are space-invariant and within a layer restricted to the nearest neighbors c) the synaptic characteristics are monotonic continuous functions d) the time delay in the interactions is continuous
The CNN retina model has been decomposed into functionally different sub-models in order to exactly identify the processing stages present and at the same time minimize the number of layers necessary for the implementation (see Fig. 2).
INPUT: Light

Cone-Horizontal models Bipolar models

3 Neuron Disinhibitory Pathway Trigger events Wide-field activity
Ganglion models

OUTPUT to LGN
Figure 2 Decomposition of the CNN retina model into functionally different sub-models. The main building blocks of the outer plexiform layer (OPL) and the inner plexiform layer are shown (IPL). The OPL receives the light input and excites the IPL through the ON and OFF pathway. The IPL generates the final retinal output forwarded to the LGN (optic tectum of a salamander).

/. Observation, measurement, and estimation ofthefeature parameter set v(m)(x,t)

(IB) Fourier decomposition

SALAMANDER RETINA

new parameter setting

Simplex and combinatorial optimization

F = F(£^ E'J*i = VX. II AE I %

II. Model synthesis and optimization through parameter tuning
Figure 3 Flowchart of the modeling approach. Fourier decomposition of the spatio-temporal data was used to estimate the feature parameters (Fourier coefficients). The error function was calculated as a weighted squared difference of the feature parameters and a combined simplex-combinatorial search was employed tuning the model parameters.

16

The outer plexiform layer (OPL) is divided into the Cone-Horizontal and Bipolar blocks. The first one receives the light input and forwards a processed signal to the latter one. The Bipolar ON and OFF pathways are treated differently in the Bipolar sub-models. The main block of the inner plexiform layer (IPL), driven by the ON and OFF pathway of the outer retina, is the three-neuron disinhibitory pathway ([16], 3NDP: makes assumptions on connectivity and interactions of the bipolar terminals, narrow-field and wide-field amacrine cells). Trigger events corresponding to spatio-temporal changes at the bipolar terminals and the wide-field activity have been developed as independent sub-models. The block of the Ganglion models contains the interactions of the bipolar terminals and different amacrine cells with the ganglion cells. This block receives input signals from the 3NDP sub-model and generates the final retinal output forwarded to the LGN (optic rectum of a salamander). Synthesis, analysis and validation of a neuromorphic CNN model goes through several steps as shown in Fig. 3.
Spatio-temporal Patterns in the Outer Retina
In this section the outer retina will be discussed, more specifically the focus is put on the interaction of cones, horizontal cells and bipolar cells in the outer plexiform layer (OPL). Relying on I-V curve measurements (Fig. 4) and perforated patch clamp spatio-temporal recordings the modeling experiments lead to the following
conclusions: (a) A second order nonlinear approximation seems essential to reproduce the underlying dynamics of all
measured cell responses. (b) There is no evidence supporting the hypothesis of a feedforward synoptic connection from the horizontal
to the bipolar cells, since abolishing this interaction can closely approximate all bipolar cell recordings. (c) At a light adapted state examined the horizontalfeedback to the cones has a minimal influence in shaping
the spatio-temporal cone responses suggesting that the observed biasing and antagonistic effect of the horizontal cells influencing the bipolar output is mediated through a modulated synapse (the horizontal cells "modulate" the cone-bipolar and possibly the cone-horizontal transferfunctions instead of directly affecting the cone membrane potential).

Cone l-V curves at different times

Bjpolar_ON l-Vcurves at tfrfferent times
-■—•aomaad1 -•— '«msBtf ~A 'S0ms«f -▼— 75 m»?

voltage (m\fl

-110 -100 -so

Voltage(mV)

Figure 4 Some measured I-V curves in the outer plexiform layer (recorded by Botond Roska). (le&) measured I-V curves at different times for the cone photoreceptors, (right) measured I-V curves at different times for bipolar ON cells (the curves are very similar for the OFF cells). Observe that both characteristics are nonlinear and changing in time above -40 mV. No recorded data is available for the horizontal cells since those cannot be clamped to a constant reference potential due to their large spatial extension.
There is no clear evidence for a feedforward synaptic connection from horizontal cells to bipolar cells. Though two recent reports ([7], [8]) suggest that the pathway might exist this has not been generally accepted in neurobiology [9]. It seems that there is enough evidence that the feedback pathway is sufficient to account for all antagonistic effects (see a summary in [11]). Contrary to some previous approaches (e.g. [14]-[15]]), in the current modeling experiments the feedforward pathway was completely ruled out in all network configurations and the spatial interaction was reduced to the nearest neighbors and monotonic continuous synaptic characteristics. We have shown that the spatio-temporal patterns of the simulation closely fit to the recorded data if second order nonlinear cell models are used corresponding to the measured I-V curves.
Fig. 5 illustrates the base model of the outer plexiform layer. Each biological cell layer is mapped onto a CNN layer that consists of first or second order cells. Typical values for the cell membrane resting potentials (£ra,) are given that determine the initial state values of all CNN cells (vc(0), vH(0), vB(0)). Solid lines represent excitatory, dashed lines inhibitory chemical synapses. The corresponding reversal potential (£,) values are shown at the arrows of the synapses (in a CNN model the a priori knowledge of the reversal potential values and the expected dynamic range of the cell membrane potential determines whether an interaction is excitatory or

17

inhibitory, i.e. whether the signal transfer is positive or negative, respectively). The inter-layer electrical coupling

is marked by a circle and the strength is reflected by the value of the space constant (A.). In a light adopted retina it is assumed that the rods are saturated and "silent" therefore in the photoreceptor layer only the cones are modeled. The cones receive the light input and make excitatory connection to the horizontal and bipolar cells. In

general it has been assumed that the cones receive a direct feedback inhibitory signal from the horizontals (gHC * 0) and there is no feedforward inhibition from the horizontal to the bipolar cells (gm = 0). All post-synaptic conductance functions (g) are monotonic (either decreasing or increasing) functions of the pre-synaptic potential (see the details in [19]).

OPL

Input: Light

Cone

-40

Horizontal

-35

Bipolar

-SO

Figure S The base model of the outer plexiform layer (OPL). Each biological cell layer is mapped onto a CNN layer that consists of first or second order (two mutually coupled first order) cells. Some conclusions and conjectures of the modeling experiments are also illustrated: (i) the forward pathway, from the horizontal cells to the bipolar cells, can be ruled out (dashed line gHB) and (ii) the horizontal feedback is rather a transfer function modulation (see the dashdotted lines) than a direct effect on the cone membrane potential (dashed line gHc)-

Ceil responses In time (-r: Sim. ~b : meas)

Can responses In üme (

Cell responses In time (-r: slm, ~b: meas) 1
0.5
0
-0.5

(c)

(d)

Figure 6 Comparison of the model output to the measured data for all four cell types of the outer retina (temporal

responses are shown from three neighboring cells located in the middle of the stimulus: red solid lines: simulation;

dashed blue lines: measurement, recorded by Botond Roska). All cell models are of second order and there is a slight

feedback from the horizontal cells to the cones, (a) cone, (b) horizontal (average of the first two cells), (c) bipolar ON,

(d) bipolar OFF.

Comparison of the model output to the experimental data suggests that the second order models are detailed enough to closely match the spatio-temporal transients observed in the physiological recordings. A temporal comparative analysis for the entire OPL composed of second order cells is demonstrated in Fig. 6. See further spatio-temporal recordings and simulation results in [19].

18

Wide-field Activity in the Inner Retina
In this section a CNN model of the so-called wide-field activity is discussed observed in the wide-field amacrine cells of the inner retina. The schematic of the interactions in the inner plexiform layer is shown in Fig. 1. Wide-field amacrine cells fire one spike at ON and OFF followed by a slow decay in response. Wide-field cells have long processes (up to 500 |im) and contain glycine (see a morphological, pharmacological and physiological correlation in [12]). These amacrine cells have a transient response since they receive excitatory inputs (from the bipolar terminals) near their somas and generate action potentials that propagate along the processes [13]. Neurotransmitter (glycine) release is a function of the changing presynaptic potential (it integrates the spiking) and generates a transient lateral inhibition, a "cloud" of activity, in the inner plexiform layer [10]. We have shown how the initiation and propagation of this activity can be properly modeled in the CNN framework [19].
Wide-field activity
fgTl
-80

/ < £l

(a)

(b)

Figure 7 (a) A three-layer CNN model of the wide-field amacrine cell activity. The model is excited by trigger

signals of both bipolar terminals (up). Consequently, trigger waves will be generated on the first and second layer (the

output of the first layer represents the wide-field activity). The third layer controls the spatio-temporal properties of

the trigger-waves (tj < T2 « T3) with a smoothly and slowly changing output signal. A proper mutual coupling in

between the second and third layer ensures that the spatial extension and the duration of the generated wide-field

activity can be programmed without spoiling a unique feature of the model, i.e. it is capable of resetting itself without

any external control, (b) Wide-field activity simulation results: a snapshot of 16 frames shown in 3D (left-to-right,

up-to-down). Observe that the pattern is constrained both in space and time. The model exhibits a quick collapse

from the center and a slow deactivation from the contour.

As mentioned earlier by wide-field activity we mean the integration of the action potentials along the widefield amacrine cell processes. A nearest neighbor CNN model of the wide-field activity, described by Jacobs et al. [15], uses two layers for action potential generation (the simplified Hodgin-Huxley model must be at least of second order), four layers to model the electrical coupling between the compartments and an additional layer to integrate the action potentials. Action potential generation is solved by nonlinear templates, while the electrical coupling between the compartments is implemented by space-variant linear templates. The approach taken is truly neuromorphic, since exploring both the anatomical and physiological observations a biologically faithful model was designed. However, this model exceeds the complexity of the CNN framework set in the introduction since seven layers are used and space-variant programming of the network is necessary. Focusing on the output of the model one may realize that from signal processing point of view only a proper generation of a broadly extended transient lateral inhibition (the cloud of activity) is important. Here we will demonstrate that a significantly simplified three-layer CNN model based on space-invariant templates can reproduce this activity pattern, constrained both in space and time.
Physiological recordings suggest a simple characterization of the spatio-temporal wide-field activity: it is a traveling wave with a nearly constant amplitude that initiates at a bipolar terminal (around the soma of the widefield amacrine cell) and activates the inner retinal regions up to a distance of 500 Jim (the maximum length of the amacrine cell processes) for a period less than 200 msec (150 msec is a typical value [16]). In [15] the timing is solved by explicitly modeling the action potentials and the spatial limit is introduced through space-variant templates that can describe the branched processes within a layer. In the current approach we present an entirely different solution (see Fig. 7(a)). Imagine that a "trigger event" initiates traveling waves on two separate layers, but the wave-fronts expand at a different speed. The quicker layer interacts with a third (control) layer that in turn solves the spatio-temporal timing of trigger waves through a continuous control of the activation threshold of all cells in both the first and second layer (details can be found in [19]). This model is regenerative, it returns to its initial state therefore re-triggering is also possible (Fig. 7(b)).

19

Within the framework set in the introduction, sub-models (Fig. 2) generating spatio-temporal trigger events and the corresponding wide-field amacrine cell activity (relying on the above described base model) were designed. In addition, a three-neuron serial pathway [16] of the inner plexiform layer was also synthesized [19] as a partial inner retina model (ganglion cells are not included). The output of these modeling blocks can be combined to form various ON, OFF and ON-OFF ganglion cell responses and makes it possible to study the global functional properties of retinal "image processing" ([19], [21]).
Conclusions
We have designed and analyzed novel CNN based models of the outer and inner retina based on morphological, pharmacological and physiological information. Compared to previous studies, a significantly simplified neuromorphic computational framework was used and a methodology developed that optimizes the network parameters fitting the output of the model to the recorded data (spatio-temporal patterns).
References
[I] L. O. Chua and L. Yang, "Cellular Neural Networks: Theory and Applications", IEEE Tram, on Circuits and Systems, Vol. 35, pp. 1257-1290, Oct. 1988.
[2] L. 0. Chua, and T. Roska, "The CNN Paradigm", IEEE Trans, on Circuits and Systems, Vol. 40, pp.147-156, March 1993.
[3] T. Roska and L. O. Chua, "The CNN Universal Machine", IEEE Trans, on Circuits and Systems, Vol. 40, pp. 163-173, March 1993.
[4] T. Roska and L. O. Chua, "Cellular Neural Networks with Non-linear and Delay-type Template Elements and Nonuniform Grids", Int. Journal of Circuit Th. andAppI., Vol. 20, pp. 469-481, 1992.
[5] F. S. Werblin, T. Roska, and L. O. Chua, "The Analogic CNN Universal Machine as a Bionic Eye", International Journal of Circuit Theory and Applications, Vol. 23, pp. 541-569, 1995.
[6] Cs. Rekeczky, T. Roska, and A. Ushida, "CNN-based Difference-controlled Adaptive Nonlinear Image Filters", International Journal of Circuit Theory and Applications, Vol. 26, pp. 375-423, 1998.
[7] W. A. Hare and W. G. Owen, "Spatial Organization of the Bipolar Cell's Receptive Field in the Tiger Salamander Retina", Journal of Physiology, 421, pp. 233-245, 1990.
[8] S. M. Wu, "Feedforward lateral Inhibition in Retinal Bipolar Cells: Input-Output Relation of the Horizontal Cell Depolarizing Bipolar Cell Synapse", Proc. Natl. Acad. Sei., 88, pp. 3310-3313, 1991.
[9] E. A. Kandel, J. A. Schwartz, and T. M. Jessell (editors), Essentials of Neural Science and Behavior, Prentice Hall International Inc., 1995.
[10] F. S. Werblin, "Synaptic connections, receptive fields, and patterns of activity in the tiger salamander retina", Investigative Ophthalmology and Visual Science, 32, pp. 459-483, 1991.
[II] F. S. Werblin, "Retinal Design: Using Physiological Measurements to Design a Complete Functional Real-time Retinal model", MCB164, Department of Molecular and Cell Biology, Division of Neurobiology, University of California at Berkeley, Spring 1994.
[12] Y. Yang, P. D. Lukasiewicz, G. Maguire, F. S. Werblin, and S. Yazulla, "Amacrine Cells in the Tiger Salamander Retina: Morphology, Physiology and Neurotransmitter Identification". Journal of Comparative Neurology, 312, pp. 19-32, 1991.
[13] P. B. Cook and F. S. Werblin, "Spike Initiation and Propagation in Wide-field Transient Amacrine Cells of the Salamander Retina", Journal ofNeitroscience, 14, pp. 3852-3861, 1994.
[14] J. Teeters, A. Jacobs, and F. S. Werblin, "How Neural Interactions Form Neural Responses in the Salamander Retina", Journal of Computational Neuroscience, Vol. 4, pp. 5-27, 1997.
[15] A. Jacobs, T. Roska, and F. S. Werblin, "Methods for Constructing Physiologically Motivated Neuromorphic Models in CNNs", International Journal of Circuit Theory and Applications, Vol. 24, pp. 315-339, 1995.
[16] B. Roska, E. Nemeth, and F. S. Werblin, "Response to Change is Facilitated by a Three-Neuron Desinhibitory Pathway in Tigger Salamander Retina", The Journal ofNeuroscience, Vol. 18, pp. 3451 -3459, May 1998.
[17] T. Roska, J. Hämori, E. Labos, K. Lotz, L. Orz6, J. Takacs, P. L. Venetianer, Z. Vidnyanszky, and A. Zarändy, "The Use of CNN Models in the Subcortical Visual Pathway", IEEE Trans, on Circuits and Systems-I: Fundamental Theory and Applications, Vol. 40, No. 3, pp. 182-195, March 1993.
[18] K. Lotz, A. Jacobs, J. Vandewalle, F. Werblin, T. Roska, Z. Vidnyanszky, and J. Hämori, "Some Cortical Spiking Neuron Models Using CNN", International Journal of Circuit Theory and Applications, Vol. 24, pp. 301-314, 1996.
[19] Cs. Rekeczky, B. Roska, E. Nemeth, M. Wang, T. Roska, and F. Werblin, "The Network Behind Dynamic Spatiotemporal Patterns: Building Low-complexity Retinal Models in CNN Based on Morphology, Pharmacology and Physiology", DNS-7-I998, Technical Report, ANCL-HAS, Budapest, October 1998.
[20] A. Bouzerdoum and R. B. Pinter, "Shunting Inhibitory Cellular Neural Networks: Derivation and Stability Analysis", IEEE Transactions on Circuits and Systems, Vol. 40, pp. 215-221, 1993.
[21] D. Bälya, T. Roska, B. Roska, and F. Werblin, "A Qualitative Model for Spatio-temporal Effects in Vertebrate Retinas", in Proc of CNNA'2000.
20

2000 6™ TERR International Workshop on Cellular Neural Networks and Their Applications Proceedings
On Waves and Recovering in One-dimensional Autonomous CNN's
Valeri Mladenov and Hans Hegt
Mixed-signal Microelectronics Group, Dpt. of Electrical Engineering, Eindhoven University of Technology, P.O. Box 513,5600 MB Eindhoven, The Netherlands, fax: +31 40 245 5674, e-mail: v.mladenov@tue.nl; j.a.hegt@tue.nl
ABSTRACT: Traveling waves and recovering in one-dimensional autonomous CNN's are considered. The reactiondiffusion CNN is made ofsecond order cells coupled to each other by linear resistors. Several CNN cells based on piecewise linear resistor are proposed. This is an extension of previous research in this area, where a first order cell was considered. Making the cells more complicated, recovering can be observed. This model is more close to the nerve transmission mechanism predicted by the FitzHugh-Nagumo equation and can be used to study this phenomenon.
1. Introduction
The problem of wave propagation in electronic systems is considered by many authors [1-6]. This process exists in systems of coupled excitable cells and such systems can be described by a so-called reaction-diffusion mechanism [7,8]. This mechanism plays an important role in neurophysiology and cardiophysiology where especially wave propagation phenomena are of special interest. The most widely used mathematical model of excitation and propagation of impulses in nerve membranes is the FitzHugh-Nagumo equation. In [9] has been shown that this equation can be unified under the umbrella of one-dimensional CNN's, where the cells are a degenerate case of Chua's circuits. Cellular Neural Networks are dynamical nonlinear circuits having mainly locally recurrent circuit topology, i.e. a local interconnection of simple circuits called cells. Each CNN is defined mathematically by its cell dynamics and synaptic law, which specifies each cell's interaction with its neighbors.
Several circuit realizations based on Chua's circuits, and their dynamics have been investigated in [1-6]. The circuit realization consisting of a chain of identical Chua's circuits (or degenerated ones) can be viewed as a one-dimensional CNN, where each cell is represented by a Chua circuit. In [9] authors propose autonomous CNN's as a universal and convenient substrate for modeling these phenomena.
The simplest circuit realization is presented in [10,11]. The equations describing the system studied have similar properties as the Nagumo equation. The author shows that for the first order nonlinear cell wave propagation and its failure are possible. He analyzes the reason why wave propagation failure can occur and determines analytically the critical value of the coupling resistor. In [12,13] the wave propagation in this system is applied for data processing. However, this realization does not exhibit recovering. For a model of nerve conduction to be realistic there must be a mechanism to return to the zero initial state, so that the nerve may again be excited by a next stimulus.
Here we propose an extension of the cell given in [10-13] in order to cover the recovering process. The dynamical properties of the proposed CNN are investigated and the influence of different parameters is considered. This model is more close to the nerve transmission mechanism predicted by the FitzHugh-Nagumo equation and can be used to study these phenomena. In the next section we make a brief review of traveling waves and propagation, whereas in section 3 recovering in one-dimensional CNN's is described. Conclusions are given in section 4.
2. Traveling waves and propagation
In this section we present several circuit realizations of a one-dimensional CNN model of the discrete piecewise linear FitzHugh-Nagumo equation. The advantage of the model is that besides the wave propagation phenomena it can retrieve the initial zero state.
The simplest circuit realization of an autonomous CNN model is given in [10-12]. The authors use a chain of N resistively coupled simple cells composed of a linear capacitor and piecewise nonlinear resistor. The k-th cell and the connections with its neighbor cells is given in Fig. 1.
The characteristic of the applied piecewise nonlinear resistor is depicted in Fig. 2. The piecewise linear function is given by

0-7803-6344-2/00/S10.00 ©2000 IEEE

21

uk-1 "•

R VWW"

-wRvw-

"k+1

Cd= |tf<uk>

Figure 1: One-dimensional array of resistively coupled circuits suggested in [10-12].

f-0.25«,, «,-<0.2

/(u,) = jo.25u,-0.1, 0.2<u,£0.8

(0

-0.5«, +0.5, u, >0.8

Pi»c*wi9* linear characteristic of th« rton-lin«ar resistor

2 -01 0 01 02 0.3 04 05 06 07 08 09 1 11 1.2

Figure 2: Piecewise linear resistor considered in [10-12].
As in [10-12], the regions appearing in (1) will be referred to as {1}, {2} and {3} for u <0.2,0.2 <,u <,Q.8 and u >0.8 respectively. The slopes of function/^ in each of the three regions will be denoted as
m =— ,

where the superscript r indicates the corresponding region. The dynamics of the above model can be described by a set of N first order differential equations

,dut dt

= rf(«^,-2«t+«ttl) + /(«A),

* = 1,2,...,JV

(2)

where d = — is the conductance of the coupling resistors. Because C can be treated as a time scaling parameter, set C= 1. R
In [10-12] the author considers zero flux boundary conditions, yielding u, =«0 and uN =uNt] and investigates the
dynamic behavior of the model. He proves that in the case of traveling wave propagation a heteroclinic orbit does exist in the associate continuous system and analyses the reason why wave propagation failure can occur. Furthermore, the author determines the critical value of the coupling resistor.

22

As was mentioned before, this model suffers of missing a recovering mechanism. That means that, in the case of traveling wave propagation when all cells are excited, there is no internal mechanism to retrieve the cells in the zero initial state. Because of this, the cells could not be excited again and the model is not appropriate for detailed modeling of
the nerve transmission mechanism. In this paper, we consider an autonomous CNN model described by the following system of equations

du^ ut

=

rf(«t_,-2«t+«4+,)

+

/(«t)-wi,

* = l,2,...,tf

(3)

dt v * *

where f(ut) is given by (1). Normally e ->0 and wh k=],2,...,N become slow variables with respect to uh k=l,2,...,N. The considered model is a discrete version of the FitzHugh-Nagumo equation [7], [9]. This is a more realistic model of nerve conduction because of the presence of slow variables wh k=],2....,N, which give an internal mechanism for recovering. We introduce several circuit realizations of the basic cell. The k-th cell and the connections with its neighbors for the different realizations are given in Figure 3a, 3b and 3c. In these cases (p(uk) are different piecewise linear
functions such that the resulting nonlinear function/fa^) in (3) is the same as given by (1).

«

VWVk—

—WW

*-

R0 = co

—^*< f<1^—, uk Cr " |TKV

Rl

1

VWA

Figure 3a

R -WWr-

-WMr Ro
"Co
r

-WWV-

-WW\r-

C^=

Figure 3c

-wRwv-
gt,'<ul<)

Figure 3b

Figure 3: Several circuit realizations of the presented autonomous CNN for a discrete version of the piecewise linear FitzHugh-Nagumo equation.

It should be pointed out again that when £ ->0,ut, t=/,2,...,Ware fast variables wfc k=],2,...,N are slow variables [1], [14]. Exploring the idea of different time scales [ 1 ], [ 14], one can observe that in the beginning of the transient after the first cell is excited the influence of wh k=l,2,...,N is negligible and equations (3) can be approximated by equations (2). Hence all considerations in [10-12] for wave propagation and its failure are applicable. In the case of propagation for a relatively large time, the influence of the slow variables wh k=l,2,...,N becomes considerable and may cause the return the system into the zero initial state.

23

3. Recovering in one-dimensional autonomous CNN's
In this section we will prove that the recovering is possible. In fact, we will prove the existence of solitary waves (see fig. 4c). Without the variables wh k=l,2,...,N, traveling waves are possible (see fig. 4a.) [10-12]. In the case of our model, the influence of the new (slow) variables wt , k=l,2,...,N, consists of the "transformation" of the traveling wave into a solitary wave. This "transformation" takes a relatively long time due to the fact that variables wh k=l,2,...,N arc "slow". During this time the cells are in excited mode and thereafter in unexcited mode (recovering).
First of all we will find the equilibrium points of system (3) and will prove their stability. The equilibrium points of the system considered are the solutions of the corresponding system of algebraic equations, when the right side of (3) is set to zero. One can observe that for b<8 this system has the unique equilibra (ut wh)=0, k=l,2 N . This is the case of interest for recovering. For b>8 the system has three equilibrium points and this does not guarantee the expected dynamics. To prove the stability of the equilibrium points, we will use the technique described in [15]. Here we will point out some basic steps. The main idea, used in [15], is to separate the spatial and temporal information after which the general form of the solution of (3) can be found as
hi

•2 _

(«>

W*(0 = 2A (U)w,(0,* = 1,2 N

1=1

where the N space dependant orthonormal functions <t>N (i, k) are spatial eigenfunctions of the discrete Laplacian

V 20„ (i, k) = fo„ (i, k +1) + <,„ (i, k -1) - 2<t>N (i, *)] = -pfyN (i, k)

(5)

Here with k are denoted the numbers of the cells and i is the summation index. Taking into account the zero flux boundary conditions [15]

=

4sin'

fff(i-l)> N

MU) = ex|//^-(i-lX*-l)

The following N pairs (i=],2 TV) of linear differential equations can be obtained by substituting (4) into (3)

du, = (m

-

pi

2d)u—i -

— wi +

const:

*

(6)

aw: — —

~eu, -ebw:

dt

where const,' depends on the working region (const/ =0, const,1 =-0.1 and const' =0.5 ) and ut and wk are spectra of

ukand wt with respect to the orthonormal basis {<j>N(i,k), i = \,2,...,N, k = \,2,...,N}.

The roots of the following equation give the temporal eigenvalues of system (6) A2 +(eb + pfd -m')X + (p?d£b + £-m'cb) = 0

If the cells are in the regions {1) or (3}, ni<0 (equilibrium point is in region {1}), the eigenvalues have negative real parts, i.e. the system is stable.

To prove the existence of solitary waves we assume ut+1 + uk_l - 2uk = h2 —- and thus (3) is transformed into 312

— ddut = dh 2

3 " a^

+

/Jr(y,>'s)-

(7)

— = e(«-Mv) dt Introducing the moving coordinate [1, 3, 6, 10, 11, 12] £ = t-kh, h > 0 and rewriting (7) with respect to this

coordinate we get

w = v

v=v w

>-

w = e(u-bw)

(8)

dh2

24

where the dot denotes differentiation with respect to \ Note that \ is the coordinate moving along the array with a

velocity llh. Solitary waves of the model considered correspond to nonconstant solutions of (8) wich satisffy the condition

Urn («(£), v(O,»-«)) = 0

W

Condition (9) is satisfied by the homoclinic orbits ([6], [ 16]) of system (8). This wave system has a unique equilibrium
point (u,v,w)=(0,0,0) for b<8. The characteristic equation related to this equilibrium point is -l}+(\/K-eb)X1+(eb/K-m/K)A+(E/K-Ebm/K) = 0,

where K = 1 / dh1 and m = -2-i!fl. For region {1}, in which this equilibrium point is located, m=-0.25 and it is easy to du
observe that the solution of this equation yields one positive real eigenvalue and two eigenvalues with negative real parts (because of the sign configuration of the coefficients). The equilibrium can be either saddle or saddle focus [16], with onedimensional unstable manifold and two-dimensional stable manifolds. This is connected with a homoclinic orbit [16], which results in a solitary wave.

Simulation results of the dynamic behavior of models (2) and (3) are given in Figure 4. The traveling wave for model (2) for N=15, C=l, d=0.2 and ^=150 is given in Fig. 4a. (Fig. 3 from [12]). The solitary wave for model (3) with the same value of the parameters N, C, d, tr„ and £ = 0.0001, b=l is given in Fig. 4b. It is easy to observe the coincidence of the behavior of both models for tfi„=150. Fig. 4c shows the dynamic behavior of model (3), for tto=1500. The recovering process (solitary wave) retrieves the zero initial state of the system.

4. Conclusion
In this paper, the traveling wave and recovering in a one-dimensional autonomous CNN are considered. The reactiondiffusion CNN is made of second order cells coupled to each other by linear resistors. Several CNN cells based on piecewise linear resistor are proposed. This is an extension of previous research in this area, where a first order cell was considered. Making the cells more complicated, the recovering can be observed. This mechanism is inherent to real nerves and thus the model helps to simulate and analyze more realistically its behavior.

5. References
[1] V.Perez-Munuzuri, V-Perez-Villar, L.O.Chua: "Travelling wave front and its failure in a one-dimensional array of Chua's circuits", J. Circuits and Comp., Vol. 3, No.l, pp. 211-215,1993. [2] A.P.Munuzuri, V.Perez-Munuzuri, M.Gomez-Gesteria, L.O.Chua, V-Perez-Villar: "Spatiotemporal structures in discretely-coupled arrays of nonlinear circuits: a review". Int. Journal Bifurcation and Chaos, Vol. 5, No. 1, pp. 17-50, 1995. [3] V.LNekorkin, L.O.Chua: "Spatial disorder and wave fronts in a chain of coupled Chua's circuit", Int. Journal Bifurcation and Chaos, Vol. 3, No. 5, pp. 1281-1291,1993. [4] V.LNekorkin, V.B.Kazantsev, L.O.Chua: "Chaotic attractors and waves in a one-dimensional array of modified Chua's circuits", Int. Journal Bifurcation and Chaos, Vol. 6, No. 7, pp. 1295-1317,1996. [5] V.LNekorkin, VE.Kazantsev, M.G.Velarde: "Travelling waves in a circular array of Chua's circuits", Int. Journal Bifurcation and Chaos, Vol. 6, No. 3, pp. 473-484, 1996. [6] V.LNekorkin, V.B.Kazantsev, M.F.Rulkov, M.G.Velarde, L.O.Chua: "Homoclinic orbits and solitary waves in a onedimensional array of Chua's circuits", IEEE Trans. Circuits and Systems, Part I, Vol. 42, No. 10, pp. 785-801,1995. [7] J.P.Keener: "Propagation and its failure in coupled systems of discrete excitable cells", SIAM J. Appl. Math., Vol. 47, pp. 556-572, 1987. [8] T.Roska, L.O.Chua, D.Wolf, T.Kozek, R.Tetzlaff, F.Puffer: "Simulating nonlinear waves and partial differential equations via CNN - Part I: Basic techniques", IEEE Trans. Circuits and Systems, Part I, Vol. 42, No. 10, pp. 807-815, 1995. [9] L.O.Chua, M. Hasler, G.S.Moschytz, J.Neirynsk: "Autonomous cellular neural networks: a unified paradigm for pattern formation and active wave propagation", IEEE Trans. Circuits and Systems, Part I, Vol. 42, No. 10, pp. 559-577, 1995. [10] D.M.W.Leenaerts: "Wave propagation and its failure in piecewise linear Nagumo equations", Proc. European Conf. Circ. Theory and Design, Budapest, pp. 342-347,1997.

25

[11] D.M.W.Leenaerts: "On traveling waves in a one-dimensional array of resistively coupled cells", Proc. Int Symp NOLTA'97, Honolulu, pp. 257-260, 1997.
[12] D.M.W.Leenaerts: "Data processing based on wave propagation". To appear in International Journal of Circuit Theory and Applications 1999.
[13] D.M.W.Leenaerts, K.Doris: "Data processing using nonlinear wave propagation: the meta-stable state", Proc. Int. Symp. NOLTA'99, Hawaii, pp. 637-641, 1999.
[14] P.Ortoleva, J.Ross: "Theory of propagation of discontinuities in kinetic systems with multiple timescales: Fronts, front multiplicity, and pulses", J. Chem. Phys., Vol. 63, pp. 3398-3408, 1975.
[15] L. Goras, L.O.Chua: "Turing Patterns in CNN - Part II: Equations and Behaviors", IEEE Trans. Circuits and Systems, Part I, Vol. 42, No. 10, pp. 612-626, 1995.
[16] Yu. A. Kuznetsov: "Elements of Applied Bifurcation Theory", Springer-Verlag, New-York, Berlin, Heidelberg, 1995.

Nagumo model

Fit2Hugh-Nagumo model

1-, 08.
|D6-
1
50402■o,

1 I« I^'T 35 ^ 1fi0^'1J 5** ^1
time
Figure 4a

cell number

;):</> »<*cr.ivf.i:*i

120 135'l50*lri5 tim»
Figure 4b

cellrtumbei

T-^XU:ji-i'fh^-

läS «,:
Figure 4c Figure 4: Simulation results of the behavior of models (2) and (3): a) the traveling wavefor model (2) for N=15, C=l, d=0.2andtfl„=150; b) the solitary wave for model (3) for N=l 5, C=l, d=0.2, 1^=150, £ = 0.0001, b=l; c) the solitary
wavefor model (3)forN=15. C-l, d=0.2, tfl„=1500, E = 0.0001,ft=/
26

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Phase Influence on Mode Competition in Turing Pattern Formation
Liviu Gora$, Tiberiu Teodorescu, Andrei Maiorescu

Abstract Within linear theory, Turing patterns in CNN's can be viewed as the consequence of a competition between unstable spatial modes. The aim of this communication is to show that the final pattern might depend on the relative position (phase) of the competing modes - a result that cannot be
explained using the mode decoupling linear theory.

INTRODUCTION

The two-grid coupled Cellular Neural Networks (CNN's) architecture [1-11] has been shown to be capable to produce Turing patterns on the basis of a mechanism similar to that proposed by Turing [14]. Composed of identical cells identically coupled by means of two homogeneous resistive grids, such CNN's exhibit an unstable homogeneous equilibrium point, which corresponds to a stable one for an isolated cell. The pattern is one of the stable equilibrium points towards which the network emerges. The linearized equations
governing the dynamics of the array have the form:

du (t) -ji2

=

Y(fuu,i-rf¥va)

+

DHV2, us

dt

(1)

dva(t) ^(guUij+gvV^ + D^Vy dt

where/„ /„ g„ gv refer to the linearized two-port resistive characteristics (elements of the Jacobian matrix

of f(u,v) and g(u,v) of the nonlinear equations), D„ and Dv are the diffusion coefficients and V is the discrete Laplacian. The Turing conditions [3-8], that have been shown to be only necessary for discrete-

arrays, are:

L + Sv < 0

Lg, - /.& > o

(2)

DJU + Dugy > 0

(A,/„ " Dugvf + 4DuDJvgu > 0
Within linear theory, Turing Patterns in CNN's are dependent on the following aspects:
a - fulfillment of Turing conditions,

b - dispersion curve,

c - initial conditions,

d - biasing sources signal [3] Beside, the shape of the nonlinear characteristic of the cell resistor influences the pattern as well but this is an aspect that cannot be consider within the above theory. However, it has been shown that the results of the linear theory fit well with the simulations mainly for ID arrays. In such cases, the final pattern can usually be predicted taking into consideration the above aspects, which means that the nonlinearity (f„(u) in most cases - as shown in Fig.l.) plays mainly the role of limiting the growing process of the unstable
spatial modes.

fu(u) A

Fig. 1: A typical cell non-linear characteristic

0-7803-6344-2/00/S10.00 ©2000 IEEE

27

Using the decoupling technique, i.e., the change of variable

"/(')= X <t>u(m,i)am(t)

(3)

i=0,l,.. .,M-1, where the functions <t> u (m, i) are dependent on the boundary conditions as shown in [5]
In terms of the new variables, the dynamics of the CNN is described by the following set of pairs of decoupled linearized equations

«»(0 v»(0

.feu cv

Du 0 0 D„

uB(t) +7 v«(0.

0

(4)

The general form of the transient expressed in terms of the decoupled variables [9]

»m(t) = am(im,um(0),vm(0))e "> + bm(£m,um(0),vm(Q))e "^ +/,(em) (5)
[vm(t) = cm(im,um(Q),vm(0))e ""I +dm(im,üm(0),vm(0))e m2 + f2(i„) where X^i and X^ are the roots of the characteristic equations
X2m +X*[k* CD. +Dv)-Y(fu +gv)]+DuD¥ki (6)
-y(Dvf„ + Dugv)k* +(fugv -fvgu) = 0 and fi and fi are [9]

/l(£m) =

-rQgy-ftmPy)

(If« - *»C« )(3Sv - 4»v) - /VvS«

(7)

/2(e»)

=

(Tfu

fju -klDu\ygv-klDv)-y2fvgu

^ '

The time domain solution of the 1-D linearized CNN equations is thus

M-l

k (

x (

»i(0 = X(a«>(e»>'u'»(0)'Vj0))e mi +bm(Em,fim(0),vm(0))e m2 +f1(Em))0M(m,i)

M-l

x ,

x t

(8)

vi(0 = 2>„,(em.üm(0)>vm(0))c m' + dm(em,um(0),vm(0))e "^ +f2(Em))<I>M(m,i)

.271 .

For ring boundary conditions, the orthogonal basis of functions is: <J>M(nu)=e M and the corresponding

eigenvalues,

k2m

= 4sin2 —. M

The dispersion curve represents the real part of the temporal eigenvalues versus the spatial eigenvalues. A typical dispersion curve is represented in the figure below:

28

.-, 1

%i

Re(t eigenvalue)

_/r~j~

M

/ II t / I i •;•:
.• :

v

-"' ! 1

i,

i

i

'

i

i

modes ;:::;:

Fig. 2: A typical dispersion curve
For the situation in the figure, there are two "active" modes: 4 and 5. We say that they are "inside" the dispersion curve, i.e. they have eigenvalues with positive real parts. When using non-homogeneous spatial bias current sources, the "spatial signal" made by bias current sources influence the solution. We stress the fact that the functioning point is before entering the non-linear part of each cell's characteristic.

PHASE INFLUENCE ON MODE COMPETITION

For initial conditions consisting of two pure spatial modes the technique of decoupling the differential equations predicts a race between the spatial modes which depends on their weight in the initial conditions and on the magnitude of the (positive) real parts of the corresponding temporal modes. The relative position of the two spatial modes is irrelevant within the linear theory. This statement is true as far as the amplification conditions for one mode are much more favourable than for the other one (in terms of amplitude ratio and eigenvalue real parts) [10-13]. However, when the competition is "tight", it has been found that the relative position (phase) of the two competing modes can influence the final pattern. The simulations have been done with the following parameters:

ID

fu

fv

gu

gv

gamma

du

dv

size

50

0.4

1

-0.25

-0.5

1

1

10

Parameters deduced from the dipersion curve:

peak

kl

k2 Dvcrit kcrit

0.14864® 0.01492 0.33508 3.2725 0.1236

0.09325

m=l(TN) 0.0096® 0.0158

m=2(IN) 0.1401® 0.0628

m=3(IN) 0.1371® 0.1404

m=4(IN) 0.0705® 0.2474

The phase influences the final pattern in the non-linear way. That means we cannot say anything regarding the final pattern taking into account only the evolution in the linear part when we are talking about the
influence of the phase. In order to prove the above-mentioned statements, we seed the network with the sum between mode 3 of amplitude 0.1 and phase pi/10 and mode 2 of amplitude 0.0905. The initial state, the evolution of the initial state to the final pattern and the final pattern are represented in the figure below. From the table it can be easily seen that mode 2 has the biggest real part for the temporal eigenvalue. Despite this, mode 3 will "win" the competition in the non-linear part. This is because of the influence of the phase:

29

Mt

\ \ \

: : !

\ // :N '

\\ /: :

,! 1

:\

I t

: \■\

1

- ^Ä?5^

U.yj.%.
\J-\J. .\l

Fig. 3: Initial state, Evolution to the final pattern, final pattern

In the second experiment, we seed the network with mode 3 and 2 of the same amplitude. The phase of the
mode 3 is now pi/54. The result is that mode 2 will win the competition for phase smaller or equal than this value:

wmsm*

....

\ \ \

' 1

1 \/

aj,mi

■

iggBjgmmmmmmmmmmmmmmmmmsm

1

1

\

' ' r-< —i

Fig. 4: Initial state, Evolution to the final pattern, final pattern

Moreover, the position of the "breaking points" in the cell's characteristic does matter.
The left "breaking point" in the non-linear part of the cell's characteristic is -1 and the right "breaking point" is changed from 1 to 10. The phase of the mode 3 is zero in the following experiment:
mam

Fig. 5: Initial state, Evolution to the final pattern, final pattern We change the phase to pi/5500. The result can be seen in the figure below:

i

r\

P i\

\

\

/ /

\\ /:/

', •t-j

'": .... ""■*

~1
""■

■""(

JB t> % » «

Fig. 6: Initial state, Evolution to the final pattern, final pattern From the Fig. 6 (final pattern) it can be seen that mode 2 distorted "wins" the competition.

30

Then we eliminate the distortion of the winner (mode 2) by changing the phase of the mode 3 to pi/10:

■I 1 4 i i \ 1 1-jL.ä
:IWi

M ■

^'^*

1 i : I !A : i
-t-^i...XL

Fig. 7: Initial state, Evolution to the final pattern, final pattern
In the next four experiments, we will emphasize another important aspect: it is possible to obtain a new different pattern corresponding to a different mode from the mode(s) with which we seed the network. The importance of the phase will be stressed, too. We will seed the network with a sum between modes 1 and 4 with different amplitudes. First, we use amplitude of 0.3 for mode 1 and 0.01 for mode 4. The phase is zero. Mode 2 will win the competition. Remark: in the initial spectrum composition: there wasn't mode 2 at all. This is up to the nonlinearity.

! fix! I ! £j\!

44vi i m I I
-i ntj -j/t | | ||
1? ■ ^■■■■^■■■H"'ii1"'X'"JiJ-"'i,,,*iiV;,T,ii !

Fig. 8: Initial state, Evolution to the final pattern, final pattern
Then we change the amplitude of mode 1 to 0.2. The rest will be unchanged. Another mode that wasn't present in the initial spectrum wins the competition: mode 3:

",...'-..

'ii -~

%

-.

~'

¥|T\

«c \ \\

• U

^\ \v_ .

/// / /

;:::■:::::#£
■Uli •■•-. lllllilllli^iiiiiiliiii:

Fig. 9: Initial state, Evolution to the final pattern, final pattern
By slightly changing the amplitude of mode 1 to 0.1968, we obtain the pattern corresponding to the mode 4:

IM

9- f* w*^ av- :

A

/ i

fa* BS ":;;:a*:;$"ft*:mS;:**::*

H ntr; h tw
iVi- t-w-! :Wi i-y-

Fig. 10: Initial state, Evolution to the final pattern, final pattern

31

Mode 3 can be obtained by changing the phase of mode 4 from 0 to pi/10:
\ li'lvA
'i ■ \ ■ \ M' >■
Fig. 11: Initial state, Evolution to the final pattern, final pattern
CONCLUDING REMARKS In this work we have experimentally proved that the phase in a second order cell CNN can be crucial in the mode competition for Turing Pattern formation. For these situations the prediction of the final pattern according to the previous works based on mode decoupling techniques cannot be obtained. Moreover, new modes, other then the ones seeded into the network can appear as winners in the final pattern.
References [I] L. O. Chua, L. Yang, "Cellular Neural Networks: Theory", IEEE Trans. Circuits Syst., vol. 35, no 10, pp. 1257-1272, October 1988. [2] L. O. Chua, L. Yang, "Cellular Neural; Networks: Applications", IEEE Trans. Circuits Syst., vol. 35, no 10, pp 1273-1290, October 1988. [3] V. P. Munuzuri, M. G. Gesteira, A. P. Munuzuri, L. O. Chua, V. P. Villar, "Sidewall Forcing of Hexagonal Turing Patterns: Rhombic Patterns", Memorandum No. UCB/ERL M94/35, April 1994. [4] L. Gora$, L. O. Chua, D. M. W. Leenaerts, 'Turing Patterns in CNN's-Part I: Once Over Lightly", IEEE Trans. Circuits Syst, vol.42, pp. 602-611, October 1995. [5] L. Goras, L O. Chua, 'Turing Patterns in CNN's - Part II: Equations and Behaviors", IEEE Trans. Circuits Syst, vol.42, pp. 612-626, October 1995. [6] L. Goras, L. O. Chua, L. Pivka, 'Turing Patterns in CNN's Part III: Computer Simulation Results", IEEE Trans. Circuits Syst, vol.42, pp. 627-636, October 1995. [7] D. M. W. Leenaerts, L. Goras, L. O. Chua, "On the Properties of Turing Patterns in a Two-Cell CNN", Proceedings of the International Symposium on Signals, Circuits and Systems, SCS'95, Iasi, 19-21 October 1995. [8] L. Goras, L. O. Chua, Turing Patterns in CNN's Based on a New Cell, Proceedings of the Fourth International Workshop on Cellular, Neural Networks and Their Applications, Seville, Spain, June 24-26, 1996 [9] T. Teodorescu, V. Maiorescu, "Using Different Bias Current Sources for Controlling Turing Patterns", ECCTD'99 Proceedings, September, 1999, Stresa, Italy [10] L. Goras, L. O. Chua, Turing Patterns in CNN's Based on a New Cell, Proc. of the Fourth International Workshop on Cellular, Neural Networks and Their Applications, CNNA'96, pp. 103-108, Seville, Spain, June 1996. [II] L. Goras, L. O. Chua, On the Influence of CNN Boundary Conditions in Turing Pattern Formation, Proc. of the European Conference on Circuit Theory and Design, ECCTD, Budapest, 1997. [12] T. Teodorescu, L. Goras, On the Dynamics of Turing Pattern Formation in ID CNN's, Proceedings of the Int. Symposium on Signals, Circuits and Systems, SCS'97, Ia$i, October 1997. [13] L. Goras, T Teodorescu, " On CNN Boundary Conditions in Turing Pattern Formation", Proc. of the Fifth International Workshop on Cellular, Neural Networks and Their Applications, CNNA'98, pp. 112117, London, UK, 14-17 April, 1998. [14] A. M. Turing, "The Chemical Basis of Morphogenesis", Phil. Trans. Roy. Soc. Lond. B 237, pp.37-72, October 1952.
32

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Dynamics of autowave processes in Neuron-like systems and CNN technology.
V. G. Yakhno
46 Ul'yanov Street, 603600 Nizhny Novgorod Institute of Applied Physics, Russian Academy of Sciences
E-mail: yakhno@appl.sci-nnov.ru
ABSTRACT: The most typical basic models of neuron-like media which describe both dynamics of homogeneous systems and hierarchic levels of recognition of complex images are considered. These models are analogous ones used in CNN technology. The results of studies of the possible dynamics of spatio-temporal (autowaves) structures are presented. The obtained solutions were used to interpret the dynamics of a normal perception modes and violations in the transformation of sensor signals in physiological experiments. Examples of the dynamics ofparallel processing modes of a complex images and adaptive modes for making a decision systems are demonstrated.
1. Introduction
One of the most exciting mysteries of Nature is associated with the principles of constructing systems characterized by a wide range of adaptive reactions to various complex signals / images. These systems are made of universal elements (biomembranes, neurons, neuron ensembles, nervous tissues, etc.). The researchers have already obtained a lot of experimental data concerning characteristic reactions of adaptive elements at different levels of brain hierarchy, suggested mathematical models of neuron ensembles (which can be called "classical"), described key basic structures of collective activity of such distributed nonequilibrium media, found algorithms of distinguishing necessary informational features in a parallel regime, elaborated associative data bases, etc. However, when trying to unite the above data the researchers rely mainly on their intuition as there is no adequate "language" to describe excitation dynamics in such distributed media.
The AWP team working with IAP RAS have a long-year experience in this field that helped them to form a set of basic models of hierarchic neuron-like systems and to develop the methods to analyze possible collective activity structures, so called autowave processes (AWP), in distributed nonequilibrium neuron-like media.
2. Basic models for analysis neuron-like systems
We considered the main forms of data transformation in neuron-like systems required for adaptive recognition of complex images. Neuron-like systems are distributed systems or network architectures consisting of active elements with several stable (or "quasistable") states and nonlocal spatial couplings between such nonequilibrium elements (see, e.g., [1-8]. In designing adaptive systems, we proposed three levels for description of imageprocessing dynamics
To the first level we relate the models of homogeneous nonequilibrium neuron-like media with one, two, three or more components. Each component in such models (represented by integro-differential equations) is characterized by its particular scheme of active mechanisms, particular values of relaxational temporal parameters and type of spatial couplings (see, e.g., Fig. 1) [3, 15-17, 23-25]. A similar model for digital network of coupled neuron-like active units, known as the CNN paradigm, was examined in [18-22].
To the second level we relate the models of "elementary"' classifiers or decision-making systems with fixed algorithms and a set of operations required for classification of video images. If parallel modes of processing of given objects or their fragments are required for a complex image, then subsystems of models of the second level can be constructed from distributed models of the first level. The scheme of a second-level model involves the following main paths of data transformation and describes the indispensable adaptive-classification and decisionmaking "elementary" processes (see, Fig. 2) [17, 14, 13-11]:
(a) path of "coding" (arrow A), in which the initial data pattern is transformed to a tree of code values (subsystems 1-3) describing the features of signal flows in expert terms;
(b) path of reconstruction, or "generation" of the input data pattern using code values from the archive (arrow B, subsystems 3 and 4), i.e, presentation of a given classifier in the initial signal by which the tree of code values is created;

0-7803-6344-2/00/$10.00 ©2000 IEEE

33

(c) path of comparison estimates of code values at the respective levels of "coding" and "generation" paths (subsystems 5);
(d) algorithms for the formation of a "decision-making" signal (subsystems 3a) on the basis of the obtained comparison estimates. Choice or control of different versions of data-flow coding and generation algorithms are possible with the help of a designer (subsystems 6).

2) Two components model

du/ -- u /dt T\

1 Tfi (g) •Fi

/■ (s) + I (D, (f- r, g) ■ u{ gr) ■ d } +D, JuCy^

_bL

/dt T-j T-n f(*-)\ -ra

Fig. 1 Versions of (a) one- and (b) two- components a first level neural-like models.

Screen 0

Preprocessing

Precise

Base of

"Rough"coding

coding

empiric data

Input image Ien(x,y)

V

3a | "'low of decisions

Interpreter of
decisions
I/fT "^~

r=

Row of estimations

Models of medium, objects,

prediction of image view

Executive mechanisms
3

Screen 1

Set of algorithms, parameters for

images

Fig. 2. Paths of data-flow transformation and interacting subsystems in a decision-making system with a fixed set of algorithms (a neuron-like system of the second level).

Such a scheme corresponds to almost all the known systems of complex image coding. The main feature of this model is the extraction of most important interactions between sets of coding-decoding algorithms, calculation of accuracy estimates for formal description and decision-making. The formation of most adequate processing and decision-making algorithms for a given type of object on the image in accordance with the system's goal is determined by the variety of possible transitions and data flow transformation modes in each of the four paths (as shown in Fig. 2).
To the third level we relate the models of adaptive, "nontrivial" classifiers which tune their parameters to the specific features of the signal being processed, perform operations for more exact coding, including the formation of associations between flows of signals of different modalities (video, acoustical, tactile, chemical, etc.). A some details about a scheme for adaptive classifiers (a neuron-like system of the third level) were considered in paper [14]. Construction of systems of this level is based on models of distributed nonequilibrium systems of "neuronlike" type of the first and second levels.
The possibility of "self-similar" description of different levels of hierarchic systems, that is, the specific "fractality" of models are shown.

34

3. Possible modes of spatial dynamics a distributed neuron-like system
A dynamic processes in the homogeneous first-level models were investigated analytically and than were studied through computer experiments. The main problem in this studies is to find and consider the potential steady-state distributions (attractors) in a dynamic system (such as equations in Fig. 1), as well as to analyze the dynamic features of the transients. In considering the first-level type models it was convenient to use the concept of the possible autowave processes in homogeneous nonequilibrium systems like these [3, 6-7, 22].

■

X

X

A.

H

If

**s
Di

b) Fig. 3. (a) - A set of examples of an autowave processes in two component system: (a) - 15 typical modes of

autowave dynamics in a one dimensional systems, x - space axes, y - time axes, exited state are shaded,

specific impulses propagation or interactions are defined by parameters of the model; (b) - seven versions of

temporal processes in a two dimensional system, x - one space axes, y - other space axes, exited state are

shaded, in each lines ofpatterns are shown the temporal changes in analyzed patternsfor specific parameters

of the model.

The research system for analysis of pattern formation in the homogeneous neuron-like systems was developed. An analysis has shown that the main features of the characteristic solutions for models shown in Fig. 1 are governed by parameters which can be divided into 3 groups: (a) the characteristics of the active elements in the network, which determine the form of the null-isocline in the point models as well as the characteristic dynamics of the element's response, the time discreteness, etc.; (b) the form of the space coupling between active elements, the space discreteness of the active element layout, and the dependence of the switching front velocity of an excited state, on the slow variable; and (c) the form of the initial conditions defining the transient when space structures are formed. It was demonstrated that a respective variety of possible solutions can exist [3,6-7, 15-17]. The processes of formation of possible stationary structures, propagation of fronts and pulses, appearance of wave sources and other modes of autowave dynamics were determined (see, e.g., Fig. 3) [15-17]. It is seen that the nonlocal space coupling function gives rise to fronts and pulses with additional switchings and new immobile pulses. For the lateral excitation space coupling function type were counted processes as a pulses of blinking
activity modes (Fig. 3a).

35

In a two-dimensional system, the conditions for existence of a number of new regimes were specified by analysis of stability in the propagation of a plane excitation front. The parameter regions corresponding to the different modes of propagation of a stable and unstable fronts are shown in (Fig. 3b).
The goal of a subsequent investigation is to find a more complete tree of possible solutions both in a onedimensional and two-dimensional systems.
The obtained solutions, as a one of application, were used to interpret the dynamics of propagating depression waves in the cerebral cortex, describe the normal perception and violations in the transformation of sensor signals in physiological experiments, estimate the parameters of autowave processes in the cardiac muscle, and compare model calculations of calcium ejection autowaves in muscular cells with experimental observations.
In the other case of application, analysis of the possible solutions in homogeneous models has made it possible to find the conditions under which the initial image can be transformed into sets of simplified images needed for calculation of the video image features. There was an imitation of the following processes of parallel processing of the input signal: the contouring and skeletonization of the video images; the extraction of lines of a definite direction or objects of a definite dimension; the determination of the regions of prescribed textures and boundaries between textures, the localization of the points of intersection of lines; the joining of line segments which are parallel to the similar lines in the immediate vicinity; the "autowave" calculation of characteristic space parameters in a fragment, and some other operations (see, e.g., Fig. 4) [15-17, 22-24].
Fig. 4. Scheme of paths of input image transformations into
ifcy)
a calculated "code" description of a studied imagefragment.
We implemented these algorithms on the base of one - and two- components neuron-like models. All these algorithms are represent a parallel algorithm class of data processing. At present, it is possible to encode an arbitrary image fragment with various assigned objects from the input image. Hardware implementation of neuron-like architecture for such algorithms of features extraction will help drastically reduce the time of complex image processing.
4. Current versions of making a decision system.
Various algorithms of image transformation in the classical pattern recognition theory extract sets of most characteristic "code" features of the object being identified (see, e.g., [9-10]). In the theory of parallel calculations in neuron-like media, such algorithms are represented by the architecture of systems with a "coarsegrain" structure as in the Fig. 2 [8, 15-17]. Each subsystem of such a system performs its assigned operation and is situated in a certain "branch" of the data transformation path (succession of algorithms). In such a scheme, it is important to choose the minimum possible universal architecture for implementation of automatic-tuning algorithms in the identification of any assigned object on an arbitrary complex image.
A research system for analyzing adaptive algorithms was also developed in the AWP team working with 1AP RAS. The found adequate modes of recognition were used for the development of an "Oncomorfologist" system to distinguish between normal and pathological cells during medical diagnostics of oncological diseases, the system of biometry of hand, the system for automated identification of a person by his hand and fingerprint, etc.
In particular, the tuning algorithm connected with the choice of an optimal recognition threshold for each class (user) from all the data registered in the archive database was checked by testing statistical characteristics of accuracy of the "Hand-Identification System" (HIS-1). This allowed the recognition accuracy to be increased by several times. We showed the possibility of description of adaptive image-identification facilities as multilevel neuron-like elements. Variants of the dynamics of the response of such nonlinear systems with many interconnected components were considered.
The formation of "algorithmic language" for adequate description of dynamic processes in hierarchic neurallike systems and the use of the data for constructing such intellectual users-computer interfaces is one of the key elaborations of the AWP team investigation.
Using the model of adaptive image recognition (as shown in Fig. 2), a data structurization scheme for neuronlike systems were developed. This informational data base include a set of models, basic characteristics for qualitative analysis of solutions, a set of solutions corresponding to AWP and similar structures, a set of experimental examples and their interpretation, and variants of technical applications. This scheme permits one to
36

combine from a unified basis the various data on distributed biological systems and find analogues in their dynamics. The scheme is used as a method for presentation of materials in teaching students and in discussions with other specialists in autowave dynamics.
5. Conclusion
Temporal variations of spatial activity structures in distributed biological media are encountered at all hierarchic levels, including molecular, membrane, cellular, population and other levels, and almost everywhere such "nonlinear modes" of active states are connected with the corresponding variants of operating modes of a biological object. It appears that the dynamics of many biological and corresponded them artificial systems is described by a special set of basic mathematical models referred to the class of models of homogeneous neuronlike systems. It can be stated that the main features in the behavior of living systems and their simplest analogues in physical or chemical systems are determined primarily by the laws of interaction dynamics of spatial activity structures in neuron-like systems. Hence, the data on the dynamics of self-organized activity structures (referred to as autowave processes, dynamical structures, etc.) form a "language" to describe operating modes in biological tissues. For this area of nonlinear dynamics study were also formulated the concept, known as the Cellular Neural ANonlinear Network (CNN).
In this communication, the most typical basic models of neuron-like media which describe both homogeneous systems (level 1) and hierarchic levels of recognition of complex activity patterns (neuron-like systems of levels 2 and 3) are considered.
The results of studies of the possible dynamics of spatial structures are presented. Examples of the dynamics of parallel transformation modes of a complex pattern of sensor images are demonstrated.
The obtained solutions were used to interpret the dynamics of propagating autowaves in some biological tissues. The adaptive modes for a decision-making system were considered. Examples of artificial recognition automata for extraction of an initially assigned video image with a minimum possible error were created.
6. References
1. Wilson H.R., Cowan J.D. "A Mathematical Theory of the Functional Dynamics of cortical and Thalamic Neuron Tissue", Kibemetic , Vol. 13, pp.55-80, 1973.
2. Sbitnev V.l. "Spike transfer in the statistical neuron ensembles. II. Neuron-non-linear source of spikes", Biophysics, Vol. 21, pp. 1072-1076, 1983.
3. Kudryashov A.V., Yakhno V.G. "Propagation of domains of rised pulse activity in a neuron assembly". "Dynamics of Biological Systems" (Inter-University collection, Gorky State University), No. 2, pp.45-59, 1978, (in Russian)
4. Frolov A.A., Murav'ev I.P. "Neural models of associative memory", M., "Nauka", 1987, (in Russian) 5. Sokolov E.N., Vaitkyavichus G.G. "Neurointelligence: from neuron to neurocomputors", M., "Nauka", 1989, (in Russian) 6. Masterov A.V., Rabinovich M.I., Tolkov V.N., Yakhno V.G. "Investigation of the autowave-autostructure interaction regimes in neural media", Collection of Institute of applied physics "Collective dynamics of excitations and structure formation in biological tissues" , Gorky, pp.89-104, 1988. 7. Yakhno V.G. "Basic models of hierarchy neuron-like systems and ways to analyse some of their complex reactions", Optical Memory&Neural Network, v.4, No2, ppl41-155, 1995. 8. Arbib M.A. "Schemes and neural networks for sixth generation computing", Journal of Parallel and Distributed Computing, Vol. 6. No 2, pp.185 -216, 1989. 9. Braverman E. M., Muchnik I. B. "Structural methods of empirical data processing", M., "Nauka", GRAML, 1983 (in Russian). 10. Duda R., Khurt P. "Pattern recognition and scene analysis", M., MIR, 1976, (in Russian) 11. Fukushima K. "Neural network model of selective attention in visual pattern recognition and associative recall", Appliede Optics, v.26, N23, pp.4985-4992, 1983; Neural network for visual pattern recognition. Computer, pp. 65-67, 1988. 12. Fukushima K. "Cognitron: a self-organizing maltilayered neural natwork model", NHK Technical Monograph, N30, 1981. NHK Technical Labs.Tokyo. "Neocognitron: a new algorithm for pattern recognition tolerantof deformation and shifts in position", Pattern Recognition,V1.15.P.455-169, 1982. 13. Zverev V.A. "Physical Foundation of image formation by wave fields", IAP RAS, 252p, 1998. 14. Telnykh A.A., Yakhno V.G. "Neuron-like models of the second and third levels - adaptive recognition system", Proceeding of XII International conference on Neurocybernetics "Neurocybernetics Problems", pp. 164168, 1999.
37

15. Belliustin N.S., Kuznetsov S.O., Nuidel I.V., Yakhno V.G. "Neural Networks with Close Nonlocal Coupling for Analysing Composite Images", Neurocomputing, Vol..3, pp. 231-246, 1991.
16. Yakhno V.G., Nuidel I.V. "Modeling of sensory information transformations". " Neurocomputer as the basis of thinking computers", M. Nauka.l993.P.207- 223.
17. Yakhno V.G., Belliustin N.S., Krasilnikova I,G., Kuznetsov S. O., Nuidel I.V., Panfilov A.I., Perminov A.O., Shadrin A.V., Shevyrev A.A. "Research Decision-making System Operating with Composite Image Fragments Using Neuron-like Algorithms ", Radiophysics, Vol.37, N8, pp.961-986, 1994.
18. L.O.Chua and L.Yang, "Cellular Neural Networks: Theory. Applications", IEEE Trans. On Circuit and Systems, (CAS), Vol. 35. Pp.1257-1290,1988.
19. L. 0. Chua, T. Roska, "The CNN Paradigm", IEEE Transactions on Circuits and Systems I. Vol.40, No.3, 1993, pp.147-156.
20. Cs. Rekeczky, T. Roska, and A. Ushida, "CNN-based Difference-controlled Adaptive Nonlinear Image Filters", International Journal of Circuit Theory and Applications, Vol. 26, pp. 375-423, July-August, 1998.
21. Cs. Rekeczky and L. O. Chua, "Computing with Front Propagation: Active Contour and Skeleton Models in Continuous-time CNN", Journal of VLSI Signal Processing Systems, Vol. 23, No. 2/3, pp. 373-402, November-December 1999.
22. Cs. Rekeczky, "Active Contour and Skeleton Models in Continuous-time CNN", to be presented in Special Session of the 14th IEEE European Conference on Circuit Theory and Design ECCTD'99 in Stresa, August 1999.
23. Vasiliev V.A, Romanovskii Y.M, Chernavskii D.C., Yakhno V.G. "Autowave Processes in Kinetic Systems. Spatial and Temporal Self-organization in Physics, Chemistry, Biology, and Medicine". VEB Deutscher Verlag der Wissenschaft, 1987, GDR
24. Nuidel I.V., Kuznetsov S.O. "Using of Neural Networks for Image Processing", Radiophysics, Vol.37, N 8, pp.1053-1061, 1994.
25. Kuznetsov S.O., Nuidel I.V., Panfilov A.I., Yakhno V.G. "Image preprocessing by neuron-like algorithms", The Proc. SPIE "Optical Information Science and Technology" in Optical Memory and Neural Networks, Andrei L.Micaelian, Editor, Proceedings of SPIE Vol.3402, pp. 479-485, 1998.
38

2000 6TH IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Straightforward Design of Robust Cellular Neural Networks for Image Processing
David Monnin1,', Lionel Merlat', Axel Köneke1, Jeanny Herault?
1 French-German Research Institute of Saint-Louis PO Box 34, 68301 Saint-Louis Cedex, France monnin@isl.tm.fr, monnin@ece.fr
2 LIS Laboratory, INPG, 46, avenue Viallet, 38031 Grenoble Cedex, France

ABSTRACT: The analytical design of Cellular Neural Networks (CNNs) templates for image processing often goes through the resolution of pixel level analytical rule-based task descriptions involving ideal CNN models. Due to non-ideal analog implementations of CNNs, recent issues have addressed the template robustness in order to achieve fault-tolerant processing. However, besides their efficiency and usefulness for the definition of coupled operators, rule-based approaches can make CNN templates design appear to be an intricate art reserved for initiated CNNs specialists rather than for image processing scientists. An alternative straightforward analytical design method for uncoupled CNNs, which is until now the only unified approach to the design of both gray and binary output operators, has already been presented, and is now extended to the design of robust binary operators.
1. Introduction
Cellular Neural Networks (CNNs) [1] are lattices of analog locally connected cells conceived for an implementation in VLSI technology and perfectly suitable for analog image processing. The operation of a cell (i, j) is described by the following dimensionless equations:

—i£dt

=

-xi'j+A®yi'j+B®uiJ

+

I

(1)

^■(^(KH-hH)

(2)

where ® denotes a two-dimensional discrete spatial convolution such that A ® ytj = Ejy6j\r(i,j)4fc,i,!'>-t,;-i for k and I in the neighborhood N(i, j) of cell (i, f), which is generally restricted to the 8-connected cells. A and B are the so-called feedback and feedforward weighting matrices, and / is the cell bias. u{j, xitj and yt■ are the input, internal state and output of a cell, respectively. The same set of parameters A, B and J, also called cloning template, is repeated periodically for each cell over the whole network, which implies a reduced set of at most 19 control parameters, but nevertheless a large number of possible processing operations.
Efficient methods for the analytical design of robust CNN binary image processing operators can be found in the literature [2], but none of them allows the design of gray level operators as well. On the other hand, the final results they provide must often be decomposed to achieve fault-tolerant processing on analog hardware [3]. An alternative design method for uncoupled CNNs was formulated from the principle of convolution masks used in a large number of well-known image processing algorithms [4]. This method opens the application field of analytically designed CNNs to numerous traditional operators for binary and gray level image processing, among which all linear convolution filters as well as Boolean and morphological operators can be found. After a short overview of this approach, the issue of binary output operators will be discussed in detail. Finally, thanks to the formalism chosen in the method, the robustness of binary operators will be effortlessly tackled.

2. Analytical Design of Gray Level and Binary Operators
Whether it is called convolution mask or structuring element, depending on whether the processing intended is a convolution filter or a morphological operator, the feedforward matrix B involved in a CNN image processing operator is here custom-defined or modeled on the definition of a traditional digital image processing filter, while parameters o and I are determined from the design method outlined in the next subsections.
As stated in [4], two primary categories of CNN image processing operators can be defined depending on the value of the feedback parameter a: those providing a gray level output when o < 1, and and those providing a binary output when o > 1.

0-7803-6344-2/00/S10.00 ©2000 IEEE

39

2.1 Gray level output image processing operators
A CNN can perform a linear convolution filtering using feedforward matrix B as a convolution mask, and can even simultaneously rescale the original range [m, n] of the input image to a desired range [M, N\. This is possible by determining the parameters a and /as follows:

° = 1-|W-¥^'and/ = iVH~-"

(3a-b)

Furthermore, a "reverse video" effect can be obtained by simply reversing the sign of B and using a new original range which is symmetrical to the old one with respect to the origin and yields a new current constant /' = 7+n-t-m.
2.2 Binary output image processing operators
In the case of binary output image processing operators, the convolution operation mentioned before remains and the role of the feedforward matrix B is maintained, but the result of the processing is now thresholded. Then the determination of parameters a and / has to deal with the value of one or two thresholds, as will be outlined in the following subsections where several variants of the same principle are presented.
Single threshold processing. The purpose of the simplest variant of the method is to threshold the result of a linear convolution filter at a desired threshold Th. Parameters a and / are then such that:

o > 1, and / = (1 - o).x(0) - Th ,

(4a-b)

where the initial state x(0) e [-1, +1] is the same for all cells of the network. In addition, an inversion effect is obtained by reversing the sign of B and Th.
Two thresholds processing. The aim of this second variant of the method is to threshold the result of a linear convolution filter with two different thresholds assigned to particular cells according to their input state. In this case parameters a and / are expressed as:

o = 1. + Th'-Th* , and, /. = — i-(0^)-TA+-x+(Ku—)t -Tft- ,

x*(0)-x-(0)

x+{0)-x-(0)

(/c5a-_bl

K

'

where Th' applies to cells with an initial state z(0) e [-1, +1], and Th+ to cells with an initial state i+(0) e [-1, +1], such that x'(0) < x+(0) and Th' > Th+.
Single threshold processing and Boolean operators. This is an adaptation of the previous method which allows to combine a binary initial state with the result of a thresholded convolution filter.
"OR" Boolean operators are obtained when:

Th' = "threshold value" and T/i*<-llfll,

(6a-b)

"AND" Boolean operators are obtained when:

TK £ IIBII, and Th+ = "threshold value"

(7a-b)

Once again, an inversion effect can be obtained by simply reversing the sign of B and of the threshold value.

3. Straightforward Design of Binary Output Operators
Instead of going through the resolution of pixel level analytical rule-based task descriptions, the design of binary operators can be directly derived from the appropriate convolution masks B and thresholds Th, using the method presented in the previous section. The determination of B and Th for binary operators is clarified here in the light of Boolean algebra and mathematical morphology.

40

3.1 The Boolean approach
A CNN binary output operator can be regarded as a Boolean operator combining, in a Boolean relation, inputs of cells within the local interaction neighborhood. Assuming that CNN cell values 1 and -1 respectively mean TRUE and FALSE, every Boolean function can be implemented using one or several cloning templates. As long as they remain linearly separable, many Boolean expressions can be performed by a single CNN binary output operator. The determination of the feedforward matrix B and the threshold Th for some basic Boolean operations is presented here.
Boolean product. A CNN cell is here intended to implement a Boolean product of variables chosen among its own input «„ „ and the inputs uK, of cells within its neighborhood N(k, I). The cell output y can therefore be expressed as:

W= II"*.'' EX"

^

(i,!)eW*(i,l> (k,l)eN-(k,l)

where N*(k,l) and N~(k,l) are non-overlapping subsets of the cell neighborhood N(k,l).

In other words, the cell output y is considered to be TRUE, i.e. is equal to 1, if and only if all inputs of cells within the local interaction neighborhood match exactly the given logical expression. Since CNNs implement thresholded convolution products, in order to determine if a set of inputs matches a given expression, we define a convolution mask held in feedforward matrix B, for which the convolution product reaches a maximum when the logical expression is satisfied. Consequently, B coefficients
bt | must in a way reflect the logical expression and are chosen such that:

( b, to match ukl

bkl=\ — b, to match 5ti(

(9)

[ 0, for " don't care"

Finally, in order to select only maximum values of the convolution product and given that convolution products take only discrete values with binary inputs, the threshold Th is simply adjusted between this maximum and the closest lower value, which yields:

The X ki-"t,i|-2-6, Xk, •"*,■ .n6]|B||1-2.»,|B|1[

(10)

(t,l)6,v(fc,l)

(M)eiW*,0

Boolean sum. If a CNN cell implements a Boolean sum, its output y is given by the following expression:

V= IX'+ IX"

(11)

(M)eJV*(i,l) (H,l)e«-(*,n

where N*(k,l) and N'(k,l) are non-overlapping subsets of the cell neighborhood N(k,l).

In plain language, the cell output y is considered to be TRUE, or equal to 1, if and only if at least one among the inputs of cells within the local interaction neighborhood matches a variable of the logical expression (11). Following the same approach as previously, B is chosen according to (9), but the values of the convolution product which satisfy the logical expression are now those greater than or equal to the convolution product obtained when only one coefficient of B matches an input value. Hence, the threshold Th is chosen between this value and the closest lower value, which leads to:

The - X ki'ut,i|'- Xki'^'r2'6 .77,e]-||4,-|B||1+2-i,[

(12)

He»(l,l)

(M)eJV(*,l)

Boolean n-matching operation. The Boolean sum of all possible n-variables Boolean products can be described as a kind of Boolean sum for which at least n matching variables are required for the ex-
pression to be regarded as TRUE. For simplicity's sake, the cell output y is then expressed as:

V= XUM + IX"

(13)

(fc,!)eJV*(M) (t,l)eJV-(l:,l)

where N*(k,l) and N'(k,l) are non-overlapping subsets of the cell neighborhood N(k,l).

41

The cell output y is now considered to be TRUE, or equal to 1, if and only if at least n among the inputs of cells within the local interaction neighborhood match a variable of the logical expression (13). B is again chosen according to (9), and the values of the convolution product which satisfy the logical expression are those greater than or equal to the convolution product obtained when at least n coefficients of B match an input value. Once more, the threshold Th is chosen between this value and the closest lower value, which gives:

The

- Sk' ' •UM+2(B-!)•&,

'UM| + 2n b »»E]- 14 + 2(n -1) ■ b- j^ +2nb[

(k,l)eN(k,l)

(M)EJV(*,1)

(14)

Boolean n-matching operation in which a Boolean product is involved. An n-matching op-
eration involving a Boolean product can also be performed in a single CNN operation. The cell output y is then defined as:

y= X"*.'+ Xu*.' +

(15)

Jt,l)e.V'(t,Q (t,l)<;JVf (i, /)

where N*(k,l) and N~(k,l) are non-overlapping subsets of the cell neighborhood N(k,l).
This operation combines a Boolean product and an n-matching operation respectively described by their B, and Bs feedforward matrices, both designed in the way presented previously. The overall feedforward matrix B and the choice of a suitable threshold Th are then given by:

B = lä-^+B,,

(16a)

The -M.Nli+(2n_1).|ßiii_2ii_ML.Nli+(2n_1).iSilli

(16b)

Boolean product of a Boolean product and a Boolean n-matching operation. A Boolean
product involving a Boolean product and a Boolean n-matching operation can as well be performed in a single CNN operation. The cell output y is then given by:

y= nuv Wut,i (t,/)eJVj(t,l) (k,i)eN;(k,ri

(*,!)« W|*(*,l)

(M)EArf(*,l)

(17)

where N+(k,l) and N~(k,l) are non-overlapping subsets of the cell neighborhood N(k,l).

This operation combines an n-matching operation and a Boolean product respectively described by their B, and B, feedforward matrices, both designed in the same way as before. The overall feedforward matrix B and the choice of a suitable threshold Th are then given by:

IN ■ + l-n ■B..+B, b

(18a)

The

b

m !"" ■ lß2 II - lßi II,+2("-1)-''.

•+ l-n

Pi , +2nb

(18b)

Further Boolean operations. Other Boolean operations can also be performed in single CNN operations. This kind of operation, like for example a Boolean product including a Boolean sum, itself including a Boolean product, can be derived from the previous approach. However, complex Boolean functions combined in single CNN operations often lead to poorly robust operators which ought to remain simple in order to achieve fault-tolerant operations [3]. Actually, simple Boolean functions ought to be linked into a CNN processing scheme successively combining, through Boolean operators, the result of an operation with the result of a previous one stored in the CNN initial state [4, 5].

42

3.2 The morphological approach
In the field of mathematical morphology, numerous very interesting binary image processing operators were defined in terms of pixel set operations [6]. CNNs can easily implement all binary morphological operators. In this case, the feedforward matrix B plays the role of a so-called structuring element, where b positive coefficients stand for black pixels, -b for white ones, and 0 for "don't care". The B "structuring element" acts on the input image U, and moreover, the operation result can be coupled with a CNN binary initial state through union or intersection operators.
Although they are based on set operations, whereas Boolean operators are based on algebraic operations, and convolution operators come under arithmetic operations, morphological operators can be easily transposed from the set theory to the Boolean algebra for which the transposition to the arithmetic of thresholds and convolution masks has just been explained before. The two main morphological operators, from which all other operators are composed using union, intersection or complement operations, are erosion and dilation. Those operators as well as their equivalence to Boolean operators are briefly introduced in the following subsections.
Morphological erosion. The erosion of a binary image U by an avcentered structuring element (B)„ is the set of pixels x such that (B)x completely matches the pixels of U. This can be expressed as:

UQB = {X\(B\QU},

(19)

This definition is a kind of translation of the Boolean product definition of equation (8) into the set theory language. Hence, apart from the theoretical point of view, a morphological erosion can be regarded as a Boolean product and implemented in the same way.
Morphological dilation. The dilation of a binary image U by an x-centered structuring element (B)„ is the set of pixels x such that the reflected structuring element has at least one pixel matching a pixel of U. An expression of dilation is given by:

tf©B = fr|[(ß),ni/]*0}

(20)

On thinking it over, this definition also has an equivalent in the Boolean algebra. Actually, beyond theoretical considerations, a morphological dilation can be related to a Boolean sum (11) and designed identically.

4. Robustness Optimization of Binary Output Operators
Due to intrinsic noise, time and temperature drifts of components, as well as fabrication defects, analog VLSI implementations necessarily conduct to non-ideal CNN chips, which CNN software has to deal with. The ability of a CNN image processing operator to still produce the right output even with slightly deteriorated parameters is called robustness.
Actually, robustness considerations especially apply to binary input operators for which the convolution product B ® ui7 describes a discrete set of possible values. As explained in the previous section, binary operators involve a decision border which can be materialized in the form of a threshold. CNN parameters deviations make the convolution products B ® u^ deviate from their theoretical values, but do not cause any faulty operations as long as the decision border is not violated. In order to optimize binary operators for robustness, it is then necessary to move the thresholds away from any theoretical value of B ® ui7-, which implies to choose the thresholds in the middle of the intervals defined in the previous section, i.e. at a confidence distance b of any theoretical value of a convolution product. This confidence distance b must also be respected for operators combining, through a Boolean operation, a binary initial state with the result of a binary operation. This requires thresholds in (6b) and (7b) to be respectively chosen as:

Tti = -IIBII, -6, and TK = IIBII, +b

(21a-b)

Following a similar approach to the one in [2], the relative and absolute measures of robustness can now be expressed as:

>■

b

14+14+IT and p ' = —N,

where Nis the total number of non-zero parameters involved in A, B, and 7.

(22a-b)

43

Scaling up a cloning template by increasing parameter b improves both the relative and absolute robustness. Furthermore, by making assumptions on the upper bounds of a CNN dynamics, it is possible to determine the largest possible value of 6 and thus to derive the optimally robust template with regard to these assumptions [2j.
5. Conclusion
An alternative straightforward analytical design method for uncoupled CNNs, which offers an original unified approach to the design of both gray and binary output operators, has been presented here and extended to the design of robust binary operators. Based on the use of convolution masks, this approach additionally allows the robust implementation of all Boolean and morphological binary operators.
First introduced for uncoupled CNNs, this method is being successfully adapted to some specific coupled tasks, and is expected to be generalized for application to coupled CNNs. In other respects, it is interesting to notice that, as different cloning templates can lead to the same operation, the space described by CNN parameters is wider than that of operators. This suggests that heuristics, suitable for downsizing the CNN parameters space and making it fit that of operators better, would certainly drastically improve stochastic optimization algorithms like genetic algorithms or simulated annealing. Since their respective functional role is not clearly established, it is difficult to make any assumption on the CNN parameters to judiciously reduce the space they describe. On the other hand, convolution masks or thresholds have a specific function which can be used to bring the CNN parameters space closer to that of the operators. For example, the use of normalized convolution masks does not decrease the number of realizable operators, but significantly reduces the functional redundancy of the CNN parameters space. Hence, in addition to the original contribution of the method to the analytical design of CNN operators, the approach tackled here would very likely be profitable for stochastic optimization algorithms.
6. References
[1] L. O. Chua and Yang: "Cellular Neural Networks Theory", IEEE T-CAS, Vol. 35, pp. 1257-1272, 1988.
[2] M. Hänggi and G. S. Moschytz: "An Exact and Direct Analytical Method for the Design of Optimally Robust CNN Templates", IEEE T-CAS I, Vol. 46, pp. 304-311, 1999.
[3] P. Földesy, L. K£k , Ä. Zarändy, T. Roska, and G. Bärtfai: "Fault Tolerant Analogic CNN Templates and Algorithms-Part I: The Binary Output Case", IEEE T-CAS I, Vol. 46, pp. 312-322, 1999.
[4] D. Monnin, L. Merlat, A. Köneke and J. Herault: "Design of Cellular Neural Networks for Binary and Gray Level Image Processing", Proc. of ICANN'98, pp. 743-748, Skövde, Sweden, 1998.
[5] D. Monnin, L. Merlat, A. Köneke and J. Herault: "An Investigation into Cellular Neural Networks Internal Dynamics Applied to Image Processing", Proc. of IWANN'99, Vol. II, pp. 432-441, Alicante, Spain, 1999.
[6] J. Serra: "Image Analysis and Mathematical Morphology", Academic Press, New York, 1982.
44

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Modelling of Extraction of Image Fragments in the Forms of Crosses and Rhombuses in the Simulated Receptive Fields
Nuidell.V., YakhnoV.G.
603600, Nizhny Novgorod, Ul'yanov str, 46, Institute of Applied Physics RAS, e-mail: nuidel@awp.appl.sci-nnov.ru
ABSTRACT: Understanding of possible regimes of animal reactions is based on consideration of possible variants of spatial-temporal dynamic processes of feature extraction from the input stimulus. Detection of crosses and rhombuses, that have been registered in the neurophysiologic experiments, is simulated. The model of one of the functional regimes registered at the experiments ofanimals has been proposed.
1. Introduction
Understanding of possible regimes of animal reactions is based on consideration of possible variants of dynamic processes of feature extraction from the input stimulus [1-5].
At present the study and computer simulation of the possible response of primate to receptor signals have very important applications [6]. New interesting data on the ability of individual visual neurons and ensembles of neurons to process and extract features in complex visual signals have recently been obtained.
In recent decades, there have been intense experimental studies extracting image features of different complexity, including the orientation of line segments [1-4], features of the second order, such as intersection and nets of line branching (crosses, corners, and y-type figures) [2,5]; features of higher orders such as face [4], and spatio-frequent tuning of visual cortex neurons. Thus, there is progress in filling the gap between the orientation detectors described in the primary visual cortex and the detectors of higher orders, for example face, found in the lower-temporal cortex.
2. Neurophysiological data
Experimental studies of the selective and invariant sensitivity of neurons in cat's visual primary cortex to features of the second order, such as line crosses and nodes of line branching were performed [2,3,4]. The receptive field of these neurons were investigated by the method of point by point mapping for the estimation of structures of input couplings of neuron [2,3,5]. The dynamics of tuning of the receptive field of these neurons was also investigated by the method of temporal slicing to discover the role of temporal dispersion and temporal organisation of the input signal in the extraction of the image features by the cell.
The role in the recognition of such features as segment of lines, corners and more complex nodes of counter branches was determined through Psychophysical investigation of man recognition of complete and particularly masked or uncompleted images.
For the first time in the primary visual cortex the scanning detectors were found. Their tuning are changed successfully during forming the response of stimulus. The existing of such neurons proposes the possibility both place and spatio-temporal coding of orientation information at this level of the visual system [2,3]. The sensitivity to line intersection, crosses, corners of 40% neurons was founded and investigated experimentally. At present the gap in the understanding of sequence of the operations of extraction from the image the higher order features are filled.
At present, it is very interesting to examine which properties of the actual neural network provide the detection of geometric figures. The task of this paper is to simulate the possible coupling structure, which ensures these properties, by using neural network model.
3. Overview of models
On the basis of physiological data, models of neuron ensembles of visual cortex as a system of phase-locked coupled oscillators were proposed to extract image features are developed [7]. However, such models extract only a limited set of features from the initial model image in the form of strokes of different orientations, such as contour, boundaries between textures, image segmentation, etc. These models do not give unreasonably high saliences to the short segments of contours smoothly are attached to long smooth contours.

0-7803-6344-2/00/$10.O0 ©2000 IEEE

45

The family of 2D filters was introduced by Daugmen [8] as a model for the structure of simple-cell receptivefield profiles, and they are termed 2D Gabor functions. Experimental work by Jones and Palmer [9] confirmed that this family of functions corresponds well the receptive field profiles of a simple cell in the primary visual cortex of cats.
Linear filtration by Gabor functions is used to extract image features, encode images by expansion coefficients with respect to the nonorthogonal basis of Gabor functions [8].
A model for the formation of spatio-temporal receptive fields of simple cells in the visual cortex is proposed on the basis of the convergence of four types of input of a cortical cell from lagged and non-lagged ON and OFF inputs [10]. One limitation of this model is that the input are described by the product of linear spatial and temporal response functions. Another limitation is that the model does not include intracortical interactions.
We investigate integro-differential equations that are basic models of homogeneous distributed neuron-like media [11-18,22]. They were obtained as a balance equations for spikes in the fibers of exciting and inhibitory neuron networks [11,12,23,24],
4. Model of a homogeneous distributed neuron-like system
Two-dimensional neuron receptive fields are actual examples of biological non-equilibrium media. The model of this medium describes the reaction of a neural network that transforms input images from their receptive fields. The form of the receptive field corresponds to weights of coupling function in the layer. Couples are assigned in the local area inside the layer. The functional mode of coupled neuron-like elements for feature extraction is simulated is simulated during the formation of the response for grey-tone image. A parallel-series transformation of the initial image was implemented. Models (l)-(4) describe a parallel image transformation process for matrices with a programmed structure of couples [14,15,17].

Tuaya = -U+F -T + a Jo„(|-r)-U^,()^ + üex(r-,()

(1),

0,Z<0

F[Z]=Z,Z e[0,255]

(2),

255, Z> 255

<t>(r -n))= N(\ -b(r -?0)2)exp- a(f -?Q)2.

(3),

r =(x,y)

k = M,l=D

- »'U•J1=»"'•■j/O-'u//TuT ) +r-„ F T+a Z %<*,;+/+"a

(4)

k=-M,l=-D

Here, u(r,t) = u(x,y,t) - describes the excitation in the patterns at the two-dimensional distributed neuron-
like system (image byte per point). xu - is the relaxation time for the initial condition, T is the threshold of
active elements on the general external signal from the coupled field. <S>u(f) is coupling function of the lateral
inhibition type with positive centre and negative surround, a - is the norm constant for coupling function. Nonlinear function F[Z] is written in piece-wise linear presentation (2) and characterises the generation and evolution processes. A difference scheme of the distributed model equation (1) in the type (4) was also implemented. Here,
tu is the temporal digitisation, O^ / is a matrix in the convolution procedure [12-18].
A similar model, known as the Cellular Neural/Nonlinear Network (CNN), was examined in [19-22]. It is also possible to use a model that is more complicated than that described by (l)-(4) where two or three layers are used and some possible types of their interactions are introduced [13-15]. First, pattern formation processes in the model were investigated analytically and than were studied through computer experiments. The research system for analysis of pattern formation in the OS Windows, DOS was developed. The processes of formation of possible stationary structures, propagation of fronts and pulses, appearance of wave sources and other modes of pattern formation were determined [13-18]. In a substance, data processing in the homogeneous distributed neuron-like systems is the process by which a set of possible autowave processes is chosen and simplified patterns (preparations) from the input image are formed. These patterns can be interpreted as an extraction of simple preparations from the input image. For

46

example, from the immobile grey-tone image the counter or lines of the determined directions and so on were considered from middle 80-th years in the team of autowave processes (AWP team) working in IAP RAS [1218]. The analogous examination independently were developed on the base of CNN-paradigm in papers [19-22].

5. Simulation

Two coupling functions with orthogonal directions of änisotropy are summed for coupling function forming of extraction of cross and rhombus fragments from the input image.
By the program NET.EXE all computations have been carried out. Sizes of the layer are from 0 to 512

elements pixels. <!>£/ is the element of the coupling function <&(!; - f). Sizes of convolution function is equal or

less than the layer size.

(2M+1)*(2D+1) - the size of the coupling function (matrix in the convolution procedure).

0(-M)(-D) ...

0(M)(-D)

0(-M)(D) ... 0(M)(D)

0kl is changed within the range : -256< 0kl <256, Qy = 255 • <b(x, y)-M <k<M-D<l<D

(2M + l)*(2D + \) 11
0 0 0 0-3-8-30000 0 0 0 0 -8-18 -8 0 0 0 0 0 0 0 0-16-14-16 0 0 0 0 0 0 0 -2-21 23-21 -2000 -3 -8-16-21-34 78-34-21-16 -8 -3 -8-18-14 23 78 80 78 23-14-18 -8 -3 -8 -16 -21 -34 78 -34 -21 -16 -8 -3 0 0 0 -2-21 23-21 -2000 0 0 0 0-16-14-16 0 0 0 0 0 0 0 0 -8-18 -8 0 0 0 0 0 0 0 0-3-8-30000 General sum of coefficients: -30 Parameters of coupling function: L-5.0.
b=0.15, a=0.16, e=3, cp\ = 0,^2 = 90

(2M + l)*(2D + \) 15
000-1-2 00000-2-1000 0 0 0-2-7-8-20 -2 -8-7-2000 0 0 0 0 -8-18-17-10-17-18 -80000 -1-2 0 0 -2-17-24-40-24-17 -2 0 0-2 -1 -2 -7 -8 -2 0-17-25 80-25-17 0 -2 -8 -7 -2 0 -8-18-17-17 6 104-10 104 6-17-17-18 -8 0 0-2-17 -24 -25 104 6 -24 6 104 -25 -24 -17 -2 0 0 0-10-40 80-10-24 0-24-10 80-40-10 0 0 0 -2-17-24-25 104 6-24 6 104-25-24-17 -2 0 0 -8-18-17-17 6104-10 104 6-17-17-18 -8 0 -2 -7 -8 -2 0-17-25 80-25-17 0 -2 -8 -7 -2 -1-2 0 0 -2-17-24-40-24-17 -2 0 0-2-1 0 0 0 0 -8-18-17-10-17-18 -80000 0 0 0-2-7-8-20 -2 -8-7-2000
000-1-2 00000-2-1000
General sum of coefficients: -336
Parameters of coupling function :L=6.0, b=0.1.
a=0.11, e=4, <p\ =45,<p2 = 135

Table 1. Example ofthe couplingfunctionfor extraction ofcrosses and rhombuses.
Images of byte by point are used as initial conditions for the neuron-like system. The meaning u(ij) is changed within the range of integer numbers [0,255].
Forming simple binary patterns from the initial image at the one-layer neuron-like system with close non-local coupling function between elements of lateral inhibition type, are examples of non-linear filtration of the initial image.

6. Results

Successful modelling of spatio-temporal dynamics allowed us to develop algorithms for extraction image features. Only by changing parameters without model changing it is possible to obtain a lot of variants corresponding to the required transformation of input images for feature extraction. Algorithms for the formation of the simplified patterns (preparations) were developed for a one-layer two-dimensional neuron-like medium with close non-local coupling function of the lateral inhibition. A non-linear filtration was also implemented in such system. Using examples of various images, we extracted simple binary patterns, such as a contrast, counters of a certain thickness, ends of the line segments, corners, central axes of figure, objects of certain dimensions, line of certain directions, etc. [13-18]. We implemented algorithms for extraction of the desired fragments such as boundary textures, objects of certain directions or textures by using a set of one- or two-layers systems. All these algorithms belong to a parallel algorithm class of data processing. At present, it is possible to simulate responses of receptive fields on the input image fragment with various configuration such as crosses, rhombus. Some examples are shown in Fig.l, Fig.2.

47

Modelling of the spatio-temporal dynamics allowed us to develop software for extraction of image features. Obtained results were used for designing systems some recognition systems: "Oncomorfologist" for distinguishing between normal and pathological cells during medical diagnostics of oncology diseases; a system for automated identification of a person by his hand and fingerprint.
Figure 1: Extraction of cross fragments (a) and rhombus fragments from the input image of industrial objects; (b) - two types of combined textures are presented.
Figure 2: Extraction of cross fragments (a) and rhombus fragments from the initial image. On the figure 2 crosses and the input image are combined.
7. Conclusion
Extraction of crosses and rhombuses, that have been registered in the neurophysiologic experiments, is simulated. All algorithms belong to a parallel algorithm class of data processing. Now it is possible to simulate responses of modelling receptive fields on the image fragment with various configuration from the initial image.
By developed models and their autowave solutions it is possible to simulate illustrative calculations and to construct various situations of image processing. These results allow us to compare them with experimental data.
8. References
[1] Hubel D. and Wiesel T.: "Receptive fields, binocular integration and functional architecture in cat's visual cortex " J.Physiol. Vol. 160, pp. 106-154, 1962.
[2] Shevelev, I.A.: " Second-order features extraction in the visual cortex: Selective and invariant sensitivity of neurons to the shape and orientation of crosses and corners" BioSystems. Vol. 48, pp. 195-204, 1998.
[3] Shevelev, I.A., Lazareva N.A., Sharaev G.A., Novikova R.V. and Tikhomirov A.S.: "Interrelation of tuning characteristics to bar, cross and corner in striate neurons" Neuroscience, Vol. 88, pp. 17-25, 1999.
[4] Fujita,!., Tanaka, K., Cheng, K.: "Columns for visual features of objects in monkey inferotemporal cortex" Nature, Vol. 360, pp.343-346, 1992.
[5] De Angelis, I. Ohzawa, R.D. Freeman: "Spatiotemporal organization of simple cells: 1. General Characteristics and Development, II. Linearity of temporal and spatial summation" J. Neurophysiology. Vol. 69, pp.1091-1135, 1993.
[6] "Virtual Human serves as platform for range of responses" An interview with Clay E. Easterly, Oak Ridge National Laboratory. OE Reports No 169/January 1998.
48

[7] Zhaoping Li: "Visual segmentation by contextual influences via intra-cortical interactions in the primary visual cortex" Network: Comput. Neural Syst., Vol. 10, pp. 187-212, 1999.
[8] Daugman John J.: "Six Formal Properties of Two-Dimentional Anisotropie Visual Filtres: Stucturel principles and Frequency/Orientation Selectivity" IEEE Transactions on Systems, Man, and Cybematics, Vol. SMC-19, No5, pp.882-887, 1988.
[9] Jones, J.P., and L.A.Palmer: " An evaluation of the 2D Gabor filter modelof the simple receptive fields in cat striate cortex" J.Neurophysiol., Vol. 58, pp. 1233-1258, 1987.
[10] Wimbauers S., O.G.Wenish, K.D.Miller, J.L. van Hemmen :"Deve!opment of spatiotemporal receptive fields of simple cells: I. Model formulation, II. Simulation and analysis" J. Biol.Cybern, Vol. 77, pp.453-461, 1997.
[II] Vasiliev V.A, Romanovskii Y.M, Chernavskii D.C., Yakhno V.G.: "Autowave Processes in Kinetic Systems. Spatial and Temporal Self-organization in Physics, Chemistry, Biology, and Medicine". VEB Deutscher Verlag der Wissenschaft, 1987, GDR
[12] Kudryashov A.V., Yakhno V.G.: "Propagation oj" domains of rised pulse activity in a neuron assembly". "Dynamics of Biological Systems" (Inter-University collection, Gorky State University), No.2, pp.45-59, 1978 (in Russsian).
[13] Belliustin N.S., Kuznetsov S.O., Nuidel I.V., Yakhno V.G.: "Neural Networks with Close Nonlocal Coupling for Analysing Composite Images" Neurocomputing, Vol..3, pp. 231-246, 1991.
[14] Yakhno V.G., Nuidel I.V.: "Modeling of sensory information transformations". Neurocomputer as the basis of thinking computers. M. Nauka.l993.P.207- 223. (in Russian)
[15] Yakhno V.G., Belliustin N.S., Krasilnikova I,G., Kuznetsov S. O., Nuidel I.V., Panfilov A.I., Perminov A.O., Shadrin A.V., Shevyrev A.A.: "Research Decision-making System Operating with Composite Image Fragments Using Neuron-like Algorithms " Radiophysics, Vol.37, N8, pp.961-986, 1994.
[16] Nuidel I.V., Kuznetsov S.O.: "Using of Neural Networks for Image Processing" Radiophysics, Vol.37, N 8, pp.1053-1061, 1994.
[17] Robert Hecht-Nielsen, I. V. Nuidel, V. G. Yakhno: "Sparse Random Binary Coding of Gray-Scale Images via Rapid First-to-Fire Competition Among Feature Detectors Arranged in Self-Organizing Maps" Manuscript submitted for publication to the INC technical report (Institute for NeuralComputation University of California, San-Diego, USA).
[18] Kuznetsov S.O., Nuidel I.V., Panfilov A.I., Yakhno V.G.: "Image preprocessing by neuron-like algorithms" The Proc. SP1E "Optical Information Science and Technology" in Optical Memory and Neural Networks, Andrei L.Micaelian, Editor, Proceedings of SPIE Vol.3402, pp. 479-485, 1998.
[19] L.O. Chua and T. Roska: "The CNN paradigm" IEEE Trans, on Circuits and Systems-I, 40(3), pp.148-156. March 1993.
[20] Cs. Rekeczky and L. O. Chua: "Computing with Front Propagation: Active Contour and Skeleton Models in Continuous-time CNN" Journal of VLSI Signal Processing Systems, Vol. 23, No. 2/3, pp. 373-402, November-December 1999.
[21] Cs. Rekeczky, T. Roska, and A. Ushida: "CNN-based Difference-controlled Adaptive Nonlinear Image Filters" International Journal of Circuit Theory and Applications, Vol. 26, pp. 375-423, July-August, 1998.
[22] Cs. Rekeczky: "Active Contour and Skeleton Models in Continuous-time CNN", to be presented in Special Session of the 14th IEEE European Conference on Circuit Theory and Design ECCTD'99 in Stresa, August 1999.
[23] Wilson H.R., Cowan J.D.: "A Mathematical Theory of the Functional Dynamics of cortical and Thalamic Neuron Tissue" Kibernetic , Vol. 13, pp.55-80, 1973.
[24] Sbitnev V.l.: "Spike transfer in the statistical neuron ensembles. II. Neuron-non-linear source of spikes" Biophysics, Vol. 21, pp. 1072-1076, 1983 (in Russian).
49

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Motion Segmentation and Tracking Optimization with Edge Relaxation in the Cellular Nonlinear Network Architecture

Läszlö Czüni czuni@silicon.terra.vein.hu University of Veszprem, Department of Image Processing and Neurocomputing, H-8200 Veszprem,Egyetemu. 10,Hungary

Tamäs Sziränyi sziranyi@sztaki.hu Analogical and Neural Computing Laboratory, Comp. & Aut. Inst., Hungarian Academy of Sei. H-llll Budapest,Kendeu. 13-17,Hungary

ABSTRACT: We have developed a high-level set of CNN-applicable functions for finding the segment-borders of moving objects through a spatio-temporal relaxation optimization process. These CNNfunctions are analogic algorithms based on simple CNN instructions considering their implementability in analogic VLSI chips. Extraction of motion information from video series is very power consuming. Most of the computing effort is devoted to the estimation of motion vector fields, defining objects and determining the exact boundaries. Finding the interrelations among the different small segments, obtained by oversegmentation, needs an optimization process through the steps of merging or separating them. In our proposed algorithm the process starts from an oversegmented image, then the segments are merged by applying the information comingfrom the spatial and temporal auxiliary data: motion fields and motion history, calculated from consecutive image frames. This grouping process is based on the similarity between the neighboring segments in color, speed and the time-depth ofmotion-history. There is also a feedback when checking the merging process to accept or refuse the cancellation of a segment-border. Our parallel approach is independent of the number of segments or objects, since instead of graph representation of the image content we apply our algorithms to the image frame as a whole. We use simple VLSI functions like arithmetic and logic functions, local memory transfers and convolution operators. On the basis of these elementary instructions, earlier we have developed basic routines such as motion displacementfield detection, disocclusion removal, anisotropic diffusion. Now we continue this research with grouping by stochastic optimization. This relaxation-based motion segmentation can be a basic step of the effective coding of image-series and other automatic motion tracking systems. The proposed system is planned to implement in a Cellular Nonlinear Network chip-set architecture.

1. Introduction
In this paper we demonstrate a fully parallel methodology to solve motion segmentation problems with low-level algorithms based on limited local neighborhood connectivity. Generally, this class of tasks requires both lowlevel and high-level optimization procedures with a huge amount of computing power. Our efforts are in the direction of finding such solutions to these problems that need almost low-level, simple functions that can be implemented on special parallel VLSI architectures with a superior speed. Then the output of these low-level operations can be forwarded to a high-level processor responsible for controlling the whole operation and for final interpretation. Since most of the work would be done on a parallel processor array, significant speed up could be achieved compared to other processor architectures as shown in later sections.
2. Main Building Blocks and Cell Functions of the Method
This section lists those image processing functions that are used as the building blocks of the whole processing cycle. These sub-tasks, such as finding edges, filtering noise, estimating motion parameters, etc. can be considered as subroutines that are executed in fully parallel cell-arrays. The following main components are used in our model: • Nonlinear [10] (or anisotropic [8]) diffusion to get better segmentation of the intensity image, or to run
external-edge controlled smoothing inside a region. • Estimation of optical flow can be done by using fully parallel methods [11]. • Motion history: It is a map containing a value of motion-duration for each motion-compensated point. The

0-7803-6344-2/00/S10.00 ©2000 IEEE

51

longer is the time since the pixel has been moving from its preceding places, the greater is its historical value, which is saturated. This history-map gives a time-support for the motion estimation. • Morphology operators in parallel [14]. • Disocclusion removal in parallel [11]. An important limit of physical realization is the radius of local connectivity. We use only first (4 neighbors are connected) or second order (8 neighbors are connected) neighborhood relations, higher order would make hardware realization very difficult.
Cellfunctions and components: • Comparison of neighboring pixels. • Convolution: A basic function already realized in VLSI chips [3]. • Arithmetic and logical functions, relations. • Cell memories: analog or logical (storing only binary values). The number of memory per pixel is also
limited by hardware considerations. • Non-linearities: absolute value, gradient, etc.
2.1 A Fast Parallel Correlation Technique If motion estimation itself is reliable then it is not always necessary to combine the estimation and segmentation into one process like in [5]. Its main advantage and disadvantage originates from the same fact: we do not reevaluate motion information during segmentation. Obviously, this is computationally more effective but no sophisticated algorithm ensures the confidence of results. Since with this method we can still achieve good segmentation, results can be satisfactory for many motion based applications. In this approach the most time consuming task is the computation of the displaced frame difference, or the socalled sum-of-squared-differences (SSD):
£(W0,f + l,r(W0,/ + l))= [l((x,y,t + l))-I(x-Vx(x0,y0,t + lly-Vy(x0,y0,t + l),t)f

frame #n+1
_--] -
fä "

m
Frame #r>+1

Frame #n
Figure 1: .The spiral movement of the image frame over the precedingframe. Position after the series ofsteps: up, right, down, down, left, left, up, up, up,
right, right, right.

(c)

(d)

Figure 2: Motion estimation of the frame #76-77 of

the "Mother and Daughter" sequence,

(a) x component, (b) y component of velocity

vectors, (c) x component and (d) y component

filtered with statistical change detection.

That is the SSD at point x,hyt, at time t+1 is calculated by shifting a small neighborhood of the previous frame with the supposed motion vector V(xi,,ylht+!) (by Vx and Vy components accordingly). To fasten this search, to find the most appropriate vector with the least SSD value, there arc two basic approaches: The first is to reduce the number of patches used in the matching (by critical features), the second is to use sophisticated search methods to avoid full search. Instead of these techniques we propose a five-step algorithm, where each step can be easily implemented in cell array architectures:
1. Spiral movement of the whole current frame. In each step the current frame is shifted with one pixel position. The order of the direction of shift is in spiral form, e.g. up, right, down, down, left, left, up, up.

52

up, right, right, right, etc.) See Fig. 1 for an example; 2. Subtraction from the next frame to get the difference image; 3. Multiplication to get the square; 4. Smoothing in a local neighborhood with a heat diffusion or convolution. 5. If the resulted correlation value is smaller than the previously stored reference value, store it as a new
reference and store the recent parameters of the spiral-offset too, as the motion vector. The order of the spiral displacement of the position offset of the current image enables the parallel operation of the correlation technique. This way not only one patch but all pixel's neighborhood is correlated with the succeeding frame in one computation step of the processor array. To run the search for all image pixels in a 5 by 5 window, 24 steps of one-pixel shifts (in spiral order) of the image frame is necessary.
One possible answer for noise filtering is to apply statistical change detection [1]. The differences (changes) of succeeding image frames are smoothed and thresholded. This threshold can be based on a general noise model or on the specific noise parameter of the camera. Where no change is detected by statistical change detection between two subsequent frames, the displacement can be neglected either. Fig. 2 illustrates motion of the "Mother and Daughter" (see Fig. 5g) sequence in the x (2a) and y (2b) directions. The corresponding filtered motion fields (2c and 2d) were obtained with statistical change detection.
Optimization of the motion field is not possible during motion estimation in the correlation approach, as long as the iterative revaluation of the SSD does not match the spiral-translation model. Instead, segmentation can be carried out after the estimation process by an MRF based method. It is detailed in [11,13].

(c)

(d)

Figure 3: Motion and motion history of the

sequence "Mother and Daughter",

(a) Motion history #81 (b) motion history #82 (c)

speed #81 (d) speed #82.

(c)

(d)

Figure 4: Spatio-temporal segmentation of the

sequence "Table Tennis", (a) magnitude of

velocity, (b) motion history after the l(f iteration; (c) final contours after the I0fh iteration, (d) final

contours projected onto the input image.

2.2 Pixel Level Tracking: Motion History
As we will see, motion information of the recent frames is an important part of our model. In many cases the current motion field itself cannot well describe the motion of larger regions within object borders. For example it can be hard to match the homogeneous inner regions of objects that has no motion detected because of color invariance, with other parts of the same object where the estimated optical field is reliable (e.g. near edges where there is no color homogeneity). To reduce this ambiguity we track the motion of each point and register if it has stopped or was in motion within a given period of time:

IMH{x-Vx(x,y,t),y-Vy(x,y,t),t)+\ if V(x,y,t)*0 and IUH(x,y,t+V)<M} /MH(^>''' + 1) = IMH(x-Vx(x,y,t),y-V(x,y,t),t)-l if V(x,y,t) = 0 and IMH(x,y,t+l)>-M>
This way we get a motion history field denoted IUH, where ^is the corresponding motion field (with components Vx and Vy) and the magnitude of M determines the memory-length of the process. In this motion history, areas with greater value mean regions that have been moving longer in the last M frames. Greater M means that the algorithm has longer memory and thus motion transparency is weaker. Fig. 3 shows two succeeding motion maps and the corresponding motion history maps of the sequence "Mother and Daughter".

53

3. Edge Optimization for Spatio-Temporal Segmentation
Our algorithm is mainly based on three inputs: the oversegmented image (based on gray-scale information), the estimated/segmented optical flow and the motion history information. We found that in many cases the joint utilization of intensity values and the current motion information (motion estimated between two consecutive frames) was not enough to satisfactorily define the objects' contours. On the other hand, the probability that two neighboring image blobs belong to the same object is the higher the more the following requirements are satisfied:
• The two blobs have similar color (or gray-scale intensity value). (In case of textured areas, texture filters [9] can be applied to colorize these regions.)
• The two blobs have similar velocity. • The two blobs had similar activities in the recent past. In our spatio-temporal segmentation process we apply a split & merge algorithm to find coherent image areas based on these three features of neighboring regions.
To reduce the dimensionality of the problem it is possible to replace motion vectors with scalars by a clustering method. In our experiments we simply dropped one component, the segmentation algorithm seemed to be quite robust and gave satisfactory results when we considered only the magnitude of velocity vectors.

The Segmentation Process
We introduce an implicit optimization algorithm where contours are responsible to get an optimal spatiotemporal segmentation of video sequences. Three edge maps are generated during the algorithm: edges separating areas of different intensity values (£rt), edges separating different motion fields (£„) and edges separating fields of different motion history values (£„»)■ Edge-fragments of these three maps are different subsets of the spatio-temporal binary edge map E,^„, which is a subset of the edge map of the oversegmented image (E„). The three edge maps (£/„, Em Emh) are weighted and then added to form a unified edge map (£„) that is thresholded and used to modify the actual £,w„ . Then the intensity, motion and motion history fields are updated by diffusion inside the contours of the new £„,„ . If the difference between the new state of the three feature fields and their previous state is too large, some edges may be restored. Then at the next iteration the three different edge maps are measured again and a new unified map is formed, etc.

The optimization is based on the following implicit model:

When the three edge maps are added to form a new unified edge map, the applied threshold criterion is analogous to evaluating a Dam-potential between the neighboring segments S, and S/.

expressed for each St(St cSM) by the difference of the old and the new levels:
Q(SM,S,)= 2 \Lk(SM)-Lk(S,)\. (3)

D(S„SJ)= ' w^SJ-L^sA

(1) where L, = intensity, L2 = motion (magnitude of the
segmented motion field), L3 = motion history, while

wk is a weighting coefficient. If D(S,, Sj) is above

a threshold, then the edge is kept, otherwise deleted at that location. The reconstruction of edges is a necessary part of the algorithm, because the merging of similar neighboring regions in one step can result in the merging of distant areas that have very different values (see Fig. 6). Hence we use the following expressions to measure the effects of edge removal. First, we define the new average feature values over a segment:

h(su) = AAV,)

(2)

s,zsu Au

is the A"1 feature value of the unified region Su

obtained by merging regions Si, corresponding

segment-areas are denoted by AM and At. The

change due to the formation of a new region SM is

If Qßu,Si) is above a predefined value, then the previously eliminated but stored edge-fragments around S, are reconstructed again. Notice, that no intensity is considered in the edge reconstruction process. It means that regions with different intensity can be merged more easily than with different motion information. In eq. (2) averaging over an area means the running of diffusion inside the edge-defined borders. The individual steps of the proposed algorithm are the following. (Illustrating the results, Figs. 4 & 5 show some examples.)
1. Segment the input image, based on intensity observations, possibly to a large number of segments of characteristic closed regions. The resulted segmented image is called oversegmentation, and it gives the finest partitioning that could be achieved in the whole spatio-temporal segmentation process.
2. Produce the edge map of the oversegmented intensity field (E0!) by an edge-detector [14]. E„, is a binary map showing the more-or-less closed segment-borders of the oversegmented

54

image parts. In the segmentation process the state variable is the actual edge map, the binary
Escgm •
• Starting condition: t,ttfm = E„.

(a)

(b)

Dt'

(c)

(d)

t «

Figure 5: Edge optimization for the spatiotemporal segmentation of "Mother and Daughter". Oversegmented input frame, (b) motion of the currentframe, edges ofthe (c) ]", (d) 3rd, (e) 5", (f) 9*, iterations, (g) final edge map (W1 iteration) projected onto the input image.
3. Diffuse intensity, motion and motion history fields inside the regions defined by Eleg„ with the help of external edge controlled diffusion. We finish this smoothing procedure with a morphological equalizing to get the same value for all the pixels inside the region which is defined by the contours. It ensures that the Dam-potential is equal along a given edgefragment. Then make the gray-scale edge maps of these fields, namely Ete , Em and Emh respectively. These non-binary (gray-scale) maps contain the edge-strength values between the different diffused areas in the same points

where the oversegmented binary edgesegments are in Esegm. Weight and add together the three maps £/„, E„ and Emh to form a unified map Eu. In our experiments we applied about the next weights (w): H<E,„) : w(E„): w{EmH) = 0.2 :1.2 : 1.2. Threshold the superimposed edge-map E„ and reduce the edges in Estgm:
£.— IT \ 17 (threshotdal) segm --"stgrn 1*1
Edges ofEstgm below a threshold in E„ are neglected.
Approximate the average motion and motion history feature fields by external edge
controlled diffusion inside the contours of the
modified E,egm. This diffusion is just similar to step 3.

1 1

1 2

1st step 3 initial region values
edge contrast = 1

2nd step

1.6

average alter

merging

0.6 1.25

0.4 -r^-
-^V-
3

2nd step difference to 1 st step, right block is over threshold
3rd step edge reconstructed edge contrasts! .75

Figure 6: Edge reconstruction in the edge based optimization model. In the first step all five regions are merged but then at the next step the one on the right is separated. The difference between its value and the average of the five blocks was over a threshold of 1.0.
7. Correct Elegm with reconstruction (Era). Naturally, an optimal segmentation algorithm would need some feedback [7]. Although, in the cell array framework no graph based optimization or higher-level understanding is available, feedback is still possible. In every cycle, the change between the current motion fields and previously segmented motion fields is measured. Over those areas, where the difference (given by eq. (3)) is greater than a predefined value, a mask is generated (EreJ. Then with the help of this mask we can reconstruct edges from the stored edge map of the previous iteration cycle: E^m := Estgm U E„c. Fig. 6 illustrates a typical situation.
8. Cycle controlling • Decrease edge weights. In our experiments we decreased edge weights by 0-20%. If this relaxation-factor is small, then edge destruction is slow; otherwise

55

the different regions merge into each other faster. • Go to step 3. According to our test results, approximately 10-15 iterations were sufficient to get stable edge

contours. Morphology operators may then be used to get thin lines as a final result. Figs. 4 &5 show some examples where the moving objects (and their shadow) are detected together.

An important issue is the execution-time of the above algorithm. Considering parameters of a VLSI 64x64 cellarray processor chip [6] (save/load of 64x64 image: 90nsec, arithmetic operation 0.5|xsec, logical operation: O.lilsec, convolution: 2\lsec) we can achieve 12msec total processing time, including several preprocessing steps of [10,11]. The cited experimental processor's technology (0.5|xm, 10MHz clock) is far from the available technological limits - but it still achieves high algorithmic speed at low power consumption of 1,2W.
4. Conclusion
In our paper we outlined a fully-parallel spatio-temporal segmentation scheme based on small-neighborhood local computations and optimizations. The approach consists of two main modules: 1. Algorithms for motion estimation, segmentation and generating motion history map. 2. Contour-based split-and-merge spatio-temporal segmentation to utilize the information obtained in the first
module. Both parts can be realized with the same set of simple operations, the need for high-level control is minimized. Basic local instructions arc dynamic convolution operators, simple arithmetic steps, logical relations and the simplest nonlinear functions (sigmoid and gradient in a neighborhood). As we have found in the current and previous tests [12,13], these optimization algorithms are fast and give stable results in a reasonable number of steps. Our aims were to design optimal algorithms for fast implementation on parallel processor arrays. As time complexity estimations show our approach can result in real-time operation, if implemented in VLSI. The parameters of the latest CNN chip have been applied to estimate the possible implementation of our complex system. This work proves that global (semi-global) optimization of very complex image analysis problems is possible through simple parallel functions interpreted in local neighborhood.
Acknowledgement: Special thanks are due to the Signal Processing Laboratory (LTS) of EPFL (in Lausanne). This work was supported by the Hungarian Research Fund (OTKA) and by the Swiss Research Fund.

References
[I] T. Aach, A. Kaup, R. Mestcr: "Statistical model-based change detection in moving video", Signal Processing, Vol. 3i, pp. 165-180, 1993.
[2] P. Bouthemy and E. Francois: "Motion Segmentation and Qualitative Dynamic Scene Analysis from an Image Sequence", Int. J. Comp. Vision, V. 10:2, pp. 157-182, 1993.
[3] R. Dominguez-Castro et al.: "A 0.8um CMOS Two-Dimensional Programmable Mixed-Signal Focal-Plane Array Processor with On-Chip Binary Imaging and Instructions Storage" IEEE Journal of Solid-State Circuits, Vol. 32, No. 7, pp. 1013-1026, 1997.
[4] M. Gelgon, P. Bouthemy: "A Region-Level Graph Labeling Approach to Motion-Based Segmentation", Technical Report, INRIA, 1996.
[5] K. Illgner and F. Müller: "Image segmentation using motion estimation", In V. Cappellini, editor, Time-Varying Image Processing and Moving Object Recognition, Vol. 4, pp. 238-243. Elsevier Science B.V., Amsterdam, 1997.
[6] G. Linan, S. Espejo, R. Dominguez-Castro, E. Roca: "A. Rodriguez-Vazquez: A Mixed Signal 64x64 CNN Universal Machine Chip", Proc. ofMicroNeuro'99, IEEE, Granada, Spain, pp. 61-68, 1999.
[7] F. Moscheni, S. Bhattacharjcc, M. Kunt: "Spatiotcmporal Segmentation Based on Region Merging", IEEE Transactions on PAMI, Vol. 20, No. 9, pp. 897-915, 1998.
[8] P. Perona, T. Shiota, J. Malik: "Anisotropie Diffusion, Geometry Driven Diffusion In Computer Vision", Kluwer Academic Publishers, pp. 73-92, 1992.
[9] T. Sziränyi, M. Csapodi: "Texture Classification and Segmentation by Cellular Neural Network using Genetic Learning", Computer Vision and Image Understanding, Vol. 71, No. 3, pp. 255-270, September, 1998.
[10] T. Sziränyi, I. Kopilovic, B. P. Töth: "Anisotropie Diffusion as a Preprocessing Step for Efficient Image Compression", Proc. of the I4"1 ICPR, Brisbane, IAPROVEEE, Australia, pp. 1565-1567, August 16-20, 1998.
[II] T. Sziränyi, K. Läszlö, L. Czuni, F. Ziliani: "Object oriented motion-segmentation for video-compression in the CNNUM", Journal of VLSI Signal Processing. V.23, No.2-3, pp.479-496, 1999.
[12] T. Sziränyi, J. Zerubia: "Markov Random Field Image Segmentation using Cellular Neural Network", IEEE CASI, Vol. 44, pp. 86-89, January, 1997.
[13] T. Sziränyi, J. Zerubia, L. Czuni, D. Geldreich, Z. Kato: "Image Segmentation Using Markov Random Field Model in Fully Parallel Cellular Network Architectures", Real-Time Imaging (Acad. Press), in press, 2000.
[14] Ä. Zarändy, et al.: "Implementation of Binary and Gray-Scale Mathematical Morphology", IEEE CAS I, Vol. 45. No.2. pp. 163-168, 1998.

56

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Lossless Image Compression and Reconstruction by Cellular Neural Networks
Mamoru Tanaka, Yuichi Tanji,Miho Onishi and Toshiya Nakaguchi Dept. of Electrical and Electronics Eng.,, Sophia University, 7-1, Kioi-cho, Chiyoda-ku, Tokyo 102-8554 Japan Phone: +81-3-3238-3878, FAX: +81-3-3238-3321 email: tanaka@mamoru.ee.sophia.ac.jp

ABSTRACT: It is clear that the characteristic of cellular neural networks (CNNs) is the use of A-templates by which many kind of dynamical iterpolative nonlinear effects can be generated without dependency of image scanning. This paper describes nonlinear quantization methods in a discrete-time cellular neural network(DT-CNN) . which generates a high quality lossy or lossless reconstructed image. It is very important that the DT-CNN state variable image which is determined dynamically based on the minimization of the DT-CNN Lyapunov energy function to generate an optimized interpolative predict function is a lossless interpolative DPCM image between the original input and the interpolation predict functions. The small compression ratio for the reconstructed lossless image can be changed by the multi-value quantization and the A-Template. By the DT-CNN non-dependency of image scanning, the lossless image points can be extracted even in an lossy image by checking the existence of local errors.
1. Introduction
Traditionally sequential explicit linear predictive coding has been used for lossless (reversible) compression in such a standard JPEG DPCM method [1]. It is shown that in S(sequential Wavelet)+P(prediction)transformation method [2] the S+P entropy(bits/pixel) whose mean is given by 4.65 is smaller than the JPEG entropy whose mean is given by 5.03 for many kinds of original images with 8 bits/pixels. The DPCM coding and decoding in the JPEG are done by using ordinary scanning. In the inverse 1-D wavelet transform of the S+P method, the lossless pixel value can be reconstructed by adding its prediction as a reverse scanning order for each of horizontal or vertical direction. These traditional methods for lossless image compression have advantage of reducing the number of scanning and computation time to solve the inverse orthogonal transformation in a sequential machine.
However, the explicit prediction methods have disadvantages that lossless pixels in low frequency local area can not be extracted for a lossy reconstructed image since the reconstruction depends on the scanning order. Also, since the prediction does not have optimal control to minimize the difference between original and prediction images in the coding system, there is possibility that the prediction is not efficient to reduce the lossless compression ratio.
The cellular neural networks(CNN's)[4] are used efficiently without the orthogonality to a lossy image compression and regeneration [3]. This paper describes nonlinear quantization methods in a discrete-time
cellular neural network(DT-CNN) which generates a high quality lossy or lossless reconstructed image which has smaller compression ratio than the traditional methods.
The DT-CNN are described in matrix form as:

x(£ + 1) = Af (x(0) + Bu + T

(1)

where x is a state variable vector, u is an input variable vector, f(x) is an output variable vector,
A = [aij] and B = [bij] are feedback and feed-forward weight matrices which are able to represent
by A- and B-templates respectively. The features of the DT-CNN are spatio-temporal dynamics by local connection, existence of high accuracy state variable and Lyapunov energy function, and use of programmable templates. Since linear and nonlinear filtering transformations by B-templates have been done traditionally by a conventional digital image processing, it is very important that the A-templates should be efficiently used by spatial combination of many cells to behave spatio-temporal halftoning. That is, the spatio-temporal dynamics by DT-CNN must generate nonlinear interpolative effects which have not been generated by a conventional image processing by a sequential machine.
The most important thing for DT-CNN image processing is in that the state variable x which is determined based on minimization of its Liapnov energy function to give an optimized interpolative predict function is a lossless interpolative DPCM image between the original input Bu and the interpolative
predict value —Af(x). Therefore, the high quality lossy and lossless images can be reconstructed from simple decoding operation of B-1(—Af(x) + x). The compression ratio depends on the multi-value quan-
tization and which region of the state variable x should be transmitted. The total lossless image can be obtained completely by the complete DPCM transmission for all regions of the state variable x which is quantized by using a quantizing function q(x) with same as slope as that of the input u.

0-7803-6344-2/00/$10.00 ©2000 IEEE

57

2. Hierarchical DT-CNN dynamics

The mapping from the state variable x to the multi-level quantizing function f(x) should not be done by conventional table memory because the accuracy of state valuable x is very high in CNN dynamical processing. The pixel quantization in a hierarchical DT-CNN can be constructed by a set of 1-bit cells(neurons), each of which has a nonlinear function of sign(x). That is, each pixel is constructed of
sub-pixels according to an area intensity method. Each of sub-pixels is controlled by the corresponding 1-bit cell. The architecture by a set of 1-bit cells will be very efficient to make a base layer of chip and to change resolution and intensity of an image.
Let Cij be a local cell(LC) in a sub-pixel(t, j) with sub-area S(i,j), then a global cell(GC) C(I,J) in a pixel (/, J) with area S(I, J) is defined by

C(/,J) = {C0|i = l,2,.--,p;j = l,2,---,9}

(2)

The global dynamics of each GC is described as follows:

xu(t+l) =

J2 A{I,J;K,L)y±(K,L)(t)+

£ B(I,J;K,L)uKL + T

C(K,t)ewr(;,j)

c(K,L)eNr(i,J)

where the input UKL and the output y±(I,J)(t) are in the normalized interval [-1,1]. The output V±{I,J){t) is given by

where S±{I, J)(t) is a sighed pixel area which is defined as the area difference between the sum of ON sub-areas and the sum of OFF sub-areas in each pixel (/, J) by

S±(I,J) = Son(I,J)-S0„(I,J)

(4)

J2 S{k,l)sign{xk,{t))

(5)

ct,€C<;,j)

And the state valuable xu{t) is in the normalized interval [-xmax,xmaI] for T = 0 because

\xu\<xmax =

J2 (\A(I,J;K,L)\ + \B{I,J;K,L)\

(6)

The local dynamics of each LC is described as follows:

Zy(t-t-l) = £ w(i,j;k,l)g(xki{i))+x,j(t+l)

(7)

Cj,;€P(/,J)

where the nonlinear function g{xki(£)) is given by

g(ikl(i)) = j^jrsign{xki{t))

(8)

for the weights

w(i,j,k,l)-y _s + s for{kl) = {iJ)
(9)
where the parameter 6 > 0 which defines the quantizing region of x is a parameter to be determined such that x = ±S for f(x) = ±1.
Though the local dynamics is not a Lyapunov stable, it converges almostly to a local equilibrium point by controlling the value of 6. Also, it is very important that the local dynamics converges absolutely to the optimal quantized value for 6 = 0 in the case that all weights w{i,j;k,l) are different, for example, •"('iJi^i') = 2',p = 0,1,2, • ■ • ,n- 1 like a sequential AD converter and that the number of iterations to converge can be reduced to at most n by adopting sequential order off-to-on transitions of the LC's. The convergent time of the local dynamics is sufficient enough to be done within each period of the global dynamics because they are performed in form of pipelining in the hierarchical DT-CNN.

58

fix)

fix)

i

; -8

0

S

X

Figure 1: Quantizing functions f(x)

The local dynamics for the weights w(i,j;k,l) = 2f,p = 0,1,2,• • • ,n- 1 and S = 0 generates a multi-level quantizing function defined by

f 1

(xx>6i )

(10)

I -1 (z < -■S)

flW

f A([f + §]) (i is odd) I A([f]]++|') (/is even)

(11)

25 A =

(12)

l-l

where A and ( are quantizing step and the number of quantized levels respectively and [ ] is a Gauss
symbol. For example, the functions for / = 2, ( = 4 are shown in figures 1. The Lyapunov energy function of the DT-CNN is defined by

Ei(t) = -^yT(A - D)y - yTBu - TTy.

(13)

where D = diag[(5]. Theorem 1 If A(J, J; K, L) = A(K, L; I, J) and

A{I, J; I,J)>0

(14)

then the energy function is a monotone decreasing function and the state variable x converges to a local
stable equilibrium point. Proof
The energy function is written by

U,J) (*,|)

(/,J)

Y, ]C B(I,J;K,L)y„(t)uKL - £ Ty,j(t)

(15)

(I,J) (K,L)

(/.•>)

and is finite because of \yu{t)\ < 1 zju/jl < 1. In time t, Assume that the output of C(I, J) changes from yu{t - 1) to yu(t), Then the difference is given by Ay;j = y/j(t) - yu(t - 1). Let be

P = A[i Yl A(I,J;K,L)yij(t)yKL(t)+\ £ MK,L;I,J)yKL(t)yij(t)],

(f,i)

(K,L)

59

Ay <0

fix)

yii-i) yit-D

{yfi-D + j-Ay} yti).

iy)

Figure 2: OUtput transition in the multi-quantizing function

then, since A(I, J; K, L) = A(K, L; I, J) for (K, L) ± (I, J), it is derived that

P = l-A(I, J; I, J)Ayu(t)2 + i Y, AV< J> K' L)&yu(t)yKL(t) iK.L)
+ \ £ MK,L;I,J)yKL(t)Ayu(t)
(K,L)
= A(I, J; I, J){y,j(t - 1) + -Ayu + -Ayu - -Ayu}Ayu
+ Y,A(I,J\K,L)Ay,j{t)yKL(t) (K,L)
A(I, J; I, J){y,j(t) - -Ay,j}Ayu + £ A(I, J; K, L)Ayu(t)yKL(t) (K,L)
and

A^Syu(tf = 6{yu(t - 1) + -Ay,j}}Ayu.

(16)

Including the case of (7, J; K, L) = (I, J; I, J) to the summation £, AE is given by

AE(t) = -[ J2 A{I,J;K,L)yKL+ . £ ... _B(7, J; K, L)uKL + T

C(K,L)£Nr(I,J)

C(K,L)eNr(r,J)

+->!(/, J; I, J)Ay,j - 6{y,j(t - 1) + ^Ayu}}Ayu

= -\xu - 6{yu{t - 1) + -Ayu} + 1.4(7, J; I, J)Ayij}Ay,j.
(17)
As shown in the figure 2, {yjj{t - 1) + \Ayu} in equation (17) is a center of the difference of the output y,j and its mapping to the x-axis is 8{yu(t - 1) + \Ayu}- By the definition of the function f{x), this mapped point is absolutely in the interval between xu(t - 1) and xu(t). When Ayu < 0, xu(t) is absolutely smaller than 6{yu(t - 1) + jAy/j}.
That is, since

xu < S{yu{t-1) + -Ayu}

(18)

AE(t) < 0 is satisfied for A(I, J; 7, J) > 0.
The case of Ayu > 0 is the same. Proof End

3. Design for interporative DPCM by DT-CNN
Let G be a Gaussian filter, the high quality image can be reconstructed base on the distortion which i defined by

dist(y,u) = \\-yT{Gy-u)\\.

(19)

60

x/
"''/' /

■U '1.0
vj

IB 1.1

—V

Figure 3: slopes of quantizing functions

This distortion means that not only output value||y|| but also difference ||Gy — u)|| between the interpolative predict value and the reconstructed input image should be small. The interpolative predict Gy is corresponding to a lossy image. By the comparison between (13) and (19), the templates can be determined as

A = -G + diag{G}

(20)

(21)

T = 0

(22)

Next, we propose a new quantization method to transmit the state variable in form of lossy and lossless image compression based on an interpolative DPCM.
In the equilibrium point of the coding DT-CNN, the quantized state variable image is represented by

-Gf±\xt1Ji) + 6ff(xt™) + \ntl

(23)

where the subscript and superscript in a variable v*b mean the slope and saturation value of the quantization function respectively. It is very important that the state variable x* ' (I, J) G xf1'5 which is determined based on minimization of DT-CNN Liapnov energy function to give an optimized interpolative predict functions is a lossless interpolative DPCM image between the original input ^uf1^, J) S ju*1 and the interpolation predict value of'(/, J) £ Gff a(x). As shown in the figure ??, the slope j of the
quantizing function fi{xf '5) is larger than that of the quantizing function of the input ufl and than
that of the transmitted state valuable xf1,s. The lossy image is generated by simple multiplication as

u* = Gff^xfx'5)

(24)

through the transmission of the quantized state variable image x* for \\xjf || < 6 and x* = 1 for llxf 1-51I ^ $• The lossless image is generated by the operation

u'f1 = 2[Gf±I(x±1'5) +xf15 - ff^tx*1-5)]

(25)

through the transmission of the complete quantized state variable image xf1'5. As a simulation, lossy and lossless images are obtained as shown in the figures 4(left) and 4(right)
respectively, in which a 5 x 5 Gaussian Template with 6 — 0.16 is used in the design. The mean of entropy (bits/pixel) in the lossless reconstruction is given by 4.61, though the optimized A-template is not designed yet statistically. It is very important here that almost state variables ^ are in the narrow region of [—6, S] as shown in the figure 3. and that the state value are divided to low frequency LL(-<5 < x{I, J) < 6), LH {5 < x{I, J) < l)and high frequency HH (1 < x{It J) < 1.5) images without dependency of sequential scanning. By its non-dependency of the scanning, the lossless image points can be extracted by checking the error 5ft 1(xf 15(K,L)) - x^15(K,L) = 0 in the neighborhood Nr(I,J)
even if we uses the lossy LL-image of Gf ikl(xf1,s) which has high quality except for shaping points like
character local images.

61

lossy image

Figure I,: Reconstructed images

lossless image

0

20000 40000 60000

Phels

Figure 5: Size of State variables

4. Conclusions
It has been clear in this paper that, since the state variable is optimally determined based on the minimization of the distortion, the high quality lossy and lossless images can be reconstructed by simple operations in the proposed hierarchical DT-CNN. That is, what only CNN can do in the image processing is the nonlinear interpolative predictions by spatio-temporal dynamis without orthogonal transformations and without dependency of image scanning.
References
[1] M. Rabbani and P.W.Jones/'Digital Image Compression Techniques. Bellingham, WA:SPIE,1991.
[2] A.Said and W.A.Pearlman,"An Image Multiresolution Representation for Lossless and Lossy Compression", IEEE Tans, on Image Processing, Vol.5,No.9,Sep. 1996.
[3] M. Tanaka, K. R. Crounse and T. Roska, "Parallel Analog Image Coding and Decoding By Using Cellular Neural Networks", IEICE Trans. Fundamentals, VOL.E77-A, No.8 pp.!387-1395,August
[4] L. O. Chua and Lin Yang,"Cellular Neural Network:Theory" IEEE Transaction on Circuits and Systems, October 1988.
[5] M. Tanaka, K. Jin'no, J. Miyata, Masaaki Imaizumi, Toshiaki Shingu and Hiroshi Inoue, "Resolutionable Cellular Neural Networks", International Conference on Neural Networks(ICNN'97), Westin Galleria Hotel, Houston, Texas, USA, June 9-12, 1997.

62

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings
Feature Extraction for Character Recognition Using Gabor-type Filters Implemented by Cellular Neural Networks
Vedat Tavsanoglu and Ertugrul Saatci
School of Electrical, Electronic and Information Engineering South Bank University Borough Road London SEI OAA UK
Phone: +44 20 7815 7526 Fax: +44 20 7815 7599 tavsanav@sbu.ac.uk
ABSTRACT: This paper proposes an approach for feature extraction using a CNN Gabor filter and an orientation map. We use a set of hand-written characters for testing the complete system. The frequency response of the CNN Gabor-type filter and the filter output are studied for different values of the filter parameters.
1. Introduction
2-D Gabor filters have been used as preprocessors for various tasks in computer vision applications. Their orientation selectivity property enabled their use in the modelling of receptive fields of orientation selective neurons in the visual cortex [1], [2]. Another application of Gabor filters has been in character recognition [3], [4]. Recently Shi [5] has extended the definition to cover filters described by an impulse response having a modulating function other than the Gaussian and called them Gabor-type filters. This class includes also those filters which are implemented by CNN's as the modulating function in this case is of an exponential form. In this paper, we will refer to these filters as CNN Gabor filters and use them with an orientation map to extract features from hand-written characters. As Gabor-type filters can be implemented using CNN VLSI chips [6], this method is expected to lead the way to a very fast feature extraction system.
2. Gabor Filters
A 2-D Gabor filter is described by the impulse response: h(x,y) = g{x,y)e*»**+»*rt
where g(x,y) is the Gaussian function given by:
V27TCT
(u)x,wv) is the spatial frequency and <r2 is the standard deviation of the Gaussian. The output v(x,y) of the filter h(x,y) to an image u(x,y) is obtained through the convolution sum:
.(*,»,«.,«,) = -J=- £ u(x1,yi)-e-^-'&">-"feJ^*-*^y->^.

0-7803-6344-2/00/S10.00 ©2000 IEEE

63

3. CNN Gabor Alters

For the filtering of an M x A' pixel 2-D image. u(m,n) € R where m 6 {0,1,.... M — 1} and

n € {0,1,..., A' - 1}, we use a 2-D CNN array of M x N cells where the state at the (m,n)th cell

v(m,n) € C satisfies [5]:

p

v(m,n) = 2_. Ok,iv(m +k,n + l) + bu(m,n)

(1)

where dot denotes differentiation with respect to time. The A = [ak,i\pk (__„ and b are complex coefficients called the feedback and feedforward cloning templates and p is defined to be the connection radius.The feedback cloning template is represented by a (2p + 1) x (2p + 1) matrix where the center element equals a0,0. For p = l, the cloning template matrix is:

A =

0-1,1 0-1,0 0-1,-1

«0,1 OO.O Oo,-1

Ol,l Ol,0 Ol,_l

In the case of 2-D low-pass CNN Gabor filter, feedback cloning template A is given by Shi as:

0

1

0

A-- 1 -(4 +A2) 1

0

1

0

For any 2-D low-pass CNN Gabor filter there corresponds a 2-D band-pass CNN Gabor filter tuned to the centre frequency {wxo, wv0) obtained by replacing the feedback cloning template with

A = [at,,e" J(te,„+lu-,«)

0

e~lu''0

0

A = e>«.-.o _(4 + A2) e-'u"

(2)

0

e'u'"°

0

Its frequency response is obtained by shifting that of the low-pass filter to the spatial frequency (to,,, wyo).

In order to obtain the frequency response of the cells we use eqn.l. If the filter is stable, it does not oscillate and eventually settles to a stable equilibrium point for which eqn.l takes the form [7]:

7] ai,,iv(m + k,n + l) + bu(m,n) = 0 *,(=-i

Under this condition we write v(m,n) as

-1 , v{m,n) = [o_i ov(m — l,n) + ao ii)(m,n + 1) + Oi o"("i + l,n) + oo -\v(m,n — 1) + bu(m,n)]
Go,o

Using the feedback template in (2) and choosing the feedforward cloning template as b = A2, we obtain

v(m,n) —

4

1 +A2

[e'WMv(m-\,n)+e~>w'°v(m,n+\)+e~'w-Him+\,n)+e'w'°v(m,n-\)+bu{m,n)}

(3)

The two-sided 2-D Z transform of both sides of (3) yields

V(zm,zn)[(A + A2) - e>*'°z-1 - e-'w"zn - e->'"-°zm - e^z"1] = A2C/(zm, z„)

(4)

Evaluating (4) at zm = e'w' and zn = e'u", we obtain the frequency response of the CNN filter:

H(c's

„ . _ V(ei"',e'm') U(e'Wi,e>w>)

A2 4 + A2 — 2cos(wx — wxo) — 2cos(wy — Wyo)

(5)

64

For a circuit implementation of this network, the complex-valued state v(m,n) is represented by the voltage across two capacitors representing its real and imaginary parts vr(m,n) and Vi(m,n). Substituting (2) into (1) and separating real and imaginary parts, we can express the time evolution of the complex-valued state in (1) as an equivalent system where the complex state variable has been replaced by two real-valued
state variables:

l>r | _ | COSW„zO„ -sinu/so 1 f vr(ro-l,n) 1 [ cosio„o sintu„o 1 [ vr(m,n + l)

Vi

sinwx0 COSTOI0 J [ v4(m-l,n) j [ -sinu>„0 costu„o j [ Vi(m,n + 1)

coswx0 sintol0 1 [ vr(m + l,n) 1 [ cosw„o -sintu^o 1 [ vr(m,n-\) -sinwzo cosw„o J L Vi(m + l,n) J [ sint«„o cosw„o J L Vi(m,n-l)

(4 +A2)

0 1 [ vr(m,n) } \ A2u(ra,n)

0

(4 + A2) J [ Vi(m,n) j + [

0

4. Orientation Map

Gabor niters are orientation selective and respond maximally to edges which are oriented at an angle 9 = atan(wvo/wxt)) where 6 is defined to be the angle between the horizontal axis and the line perpendicular to the edge. In order to detect the angle 9 of a particular orientation in an image, we use a filter bank of np Gabor filters whose spatial frequencies are:

{(wkx0 = TCOs9k,wkv0 = Tsin9k) | 9* = — ,fc = 0,---,(np - 1)}

(6)

where r is the radius of spatial frequency. The angle 9k associated with the filter of the maximum output is taken as the orientation of the particular edge in the image.

In order to make use of the Gabor filter output we convert it to an orientation map [8] where the vertical and horizontal axes represent the total orientation and the angle of orientation, respectively. Here the total orientation at an angle of orientation is obtained as the sum of pixel orientations taken over all the pixels in the image with the same angle of orientation.
The Dominant Orientation Matrix for each pixel is found by comparing the orientations of the same pixels of the filter outputs. The comparator finds for each pixel the maximum orientation, i.e.
max{vk(m,n,9k)} over all k
A pixel at the output of the comparator is then assigned the value of k for which it received the greatest value. The matrix associated with the m x n output of the comparator is called the dominant orientation matrix. The total orientation is calculated to be the number of pixels in the image with the same angle of orientation. The number of pixels with same dominant orientation in the dominant orientation matrix is counted and assigned as orientation value for that particular orientation angle. The orientation map is defined as the graph of sum of dominant orientations versus orientation angles.

5. Selection of r and A
Considering (5) and (6) reveals that r is the radius of spatial frequency controls the location of Gabor filter centre frequency (wxo,Wyo)- On the other hand, the parameter A determines the spread of the CNN Gabor filter frequency response along both 9 and 9 + 90 directions, which are the same due to the circular symmetry of the filter. Small selection of A makes the filter narrow and selective which yields better results. Hence the appropriate choice for the parameters r and A is crucial in CNN Gabor filtering. The values for these parameters should be chosen such that most of the energy is captured by the filter. Only in this case steering the filter by changing 9 results in significant variations of the filter output. The FFT's of selected four handwritten characters are shown in Fig.5. It is easily seen that most of the energy is

65

localised at lower frequencies. Therefore values of r should be chosen small enough to capture most of the energy on the frequency plane. When the spectrum of the Gabor filter matches mast of the frequency spectrum of the character maximum response from the filter will occur.
6. Example
In this paper we use a filter bank of np = 18 filters to detect the dominant orientation. The first task is to assign values to the parameters A and r of this system. To this end, we prepare the circle pattern shown in Fig.4. As the circle consists of edges with all orientations distributed equally, we should expect to obtain an almost flat orientation map when input pattern is a circle. Therefore such an input sets a good example of a test pattern for finding appropriate values for r and A. The orientation map for the circle (or letter "0") in Fig. 4a is shown in Fig.4b-4c. In this case after a few trials, we have reached the values r = 1.1 and A = 0.1. The letters "A","L","I","0" and their orientation maps are depicted in Fig.l - 4, where A = 0.1, for r = 0.1 and r = 1.1 respectively. Also Fig. 6 shows the frequency response of these filters for 6 = 2TT/9. Fig. 7 (a) and (b) show the orientation map of letter "A" for A = 0.1, r - 2.5 and the frequency response of CNN Gabor filter for A = 0.1, r = 2.5 and 0 = 2^/9. In this case as one of the filter parameters has not been given a suitable value, namely r, the orientation map obtained as a result of the filtering does not represent the actual character.
7. Conclusion
In this study feature extraction from handwritten characters has been carried out using Gabor-type filters implemented by CNN's. An orientation map is used which converts the filter output to a suitable form of extracted features. Filtering is investigated using different parameter values and optimum parameter values have been discussed. The result of this study is will be used in handwritten character recognition using CNN Gabor filters.
8. References
[1] Marcelja S. "Mathematical Description of the Responses of Simple Cortical Cells", Journal of the Optical Society of America, vol.AO, no.ll, pp.1297-1300, 1980.
[2] Daughman J.G. "Two-dimensional spectral analysis of cortical receptive field profiles", Vis. Res.. vol.20, pp.847-856, 1980.
[3] Hamamoto Y., Uchimura S., Watanabe M., Yasuda T. and Tomita S. "Recognition of Handwritten Numerals Using Gabor Features", IEEE Proceedings of ICPR'96, pp.250-253, 1996.
[4] Deng D., Chan K.P., Yu Y. "Handwritten Chinese character recognition using spatial Gabor filters and self-organizing feature maps", IEEE Interrnational Conference, Proceedings ICIP-94. vol.3, pp.940-944 1994.
[5] Shi B.E. "Gabor-Type Filtering in Space and Time with Cellular Neural Networs", IEEE Trans, on CAS-I,vol45, 2, pp.121-132, February 1998.
[6] Shi B.E., "2D Focal Plane Steerable and Scalable Cotical Filters", Proceedings of the Seventh International Conference on Microelectronics for Neural Fuzzy and Bio-Inspired Systems. MicroNeuro'99, pp.232-239, 1999.
[7] Shi B.E. and Chua L.O., "Resistive grid image filtering: input/output analysis via the CNN framework", IEEE Trans. Circuits Syst. I, Vol.39, pp.531-548, July 1992.
[8] Tufan E., Tavsanoglu V., Cekli E. and Ozmen A., "Characterisation of Handwritten Characters using Streeble Filters" (in Turkish), Turkish National Symposium on Signal Processing and Application SIU'98, Ankara, Turkey, 1998.
66

(a)

"(b)

(c)

Fig. 1. (a) Letter "A", (b) Orientation map of letter "A" for r = 0.1, (c) Orientation map of letter "A" for r = 1.1

(a)

(b)

(c)

Fig. 2. (a) Letter "L", (b) Orientation map of letter "L" for r = 0.1, (c) Orientation map of letter "L" for r = 1.1

»—

1"
!■

ttltll LLLLU

lll.tl llhllll
■ " " " -—

(a)

(b)

(c)

Fig. 3. (a) Letter "L", (b) Orientation map of letter "L" for r = 0.1, (c) Orientation map of letter "L" for r = 1.1

(a)

(b)

(c)

Fig. 1. (a) Letter "O", (b) Orientation map of letter "O" for r = 0.1, (c) Orientation map of letter "O" for r = 1.1

67

(a)

(c)

(d)

Fig. 5. (a) FFT of letter "A", (b) FFT of letter "L", (c) FFT of letter "O", (d)FFT of letter "I"

Fig. 6. (a) Frequency Response of the CNN Gabor Filter for r = 0.1, A = 0.1 and $ = 2u/9, (b) Frequency Response of the CNN Gabor Filter for r = 1.1, A = 0.1 and $ = 2n/9.

Fig. 7. (a) Orientation map of letter "A" for r = 2.5, (b) Frequency Response of the CNN Gabor Filter for r = 2.5, A = 0.1 and 6 = 2JI/9.
68

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Subthreshold Implementation of a 2D CNN Gabor-type Focal Plane Filter
Bertram E. SHI
Department of Electrical and Electronic Engineering, Hong Kong University of Science and Technology, Clear Water Bay, Kowloon, Hong Kong, tel: +852 2358 7079, fax: +852 2358 1475,
email: eebert@ee.usthk
ABSTRACTS We describe the implementation of a focal plane CNN array for computing the outputs oforientation selectivefilters similar to Gaborfilters using weak inversion transistor circuits. Both the scale and the orientation selectivity of the filter can be tuned electronically. We exploit the concept of the transistor as a pseudo-conductance or diffuser and use current, rather than voltage to represent signals of interest. This design enables energy efficient computation of the filter responses. Test results from a 12 x 14 pixel array fabricated in 1.2\lm technology are presented.

1. Introduction
We have reported implementations of ID and 2D focal plane implementations of cellular neural network (CNN) Gabor-type filters based on strong inversion transistor circuits[l][2]. The filters have complex valued impulse responses which are complex exponentials modulated by a low pass function. In the 2D case, these filters are orientation selective, where the tuned orientation is determined by the direction in which the complex exponential is oscillating. The scale or width of the filter is determined by the magnitude of the spatial frequency and the bandwidth of the filter. Both the orientation and scale can be tuned electronically by adjusting external bias voltages. Processing circuits are analog, operate in continuous time and pixel parallel.
Here we describe the implementation of these filters using weak inversion transistor circuits. Andreou et. al. note that the energy efficiency is maximized when transistor operate in weak inversion. We exploit the concept of the transistor as a pseudo-conductance or diffuser and use current, rather than voltage to represent signals of interest

2. Pixel Architecture

For clarity, we assume ID images at first The extension to 2D is given at the end of this section. Given a real valued input image w(n), the complex valued filter output i(n) minimizes the cost function

E(i) = IZl'M-^uM^+^^ZliM-e'^iim+nl2

m

m

where Ha, Si and Afl are constants. This cost function is the sum of two terms: a data fidelity term which penalizes the difference between the filter output and the input scaled by Ha and a regularization term which is minimized if the output is a complex exponential waveform with spatial frequency Si. The amount each term

contributes to the cost function is controlled by Ali.

By differentiating the cost function above with respect to the real and imaginary parts of i(n) (ir(n) and i,<n)) and setting the results equal to zero, we find at each pixel,

0 = ajjfa -1) - (Ho1 + 2o.{)ir(n) + a^'/n + 1) - a2i,<n -1) + a2i,(n + 1) + u(n)

0 = ajf/i - 1) - (Hsl + 2al)iI{n) + ajfa + 1) + a2ir(n - 1) - a2ir(n + 1)

where

_ cosn

_ sinfl

_

Hq

"' " (&.SiYHa

Ul ~ (Aß)2fffl

H° ~ 2-2cosa

(l)

+ (AQ)2

Assuming an infinite array and applying the discrete Fourier transform, we can show that i(n) is the result of applying a filter with transfer function

Ho H(0)) = 1. + 2- -2c(oAsf(i)w2 -ft)

0-7803-6344-2/00/$ 10.00 ©2000 IEEE

69

This filter is bandpass with center frequency A and 6dB half bandwidth approximately equal to Afl. The gain at the center frequency is Ha, The gain at DC is H0. The impulse response of this filter is approximately
h(n) = Hn^e-AimMe;a-
A circuit implementation of the filter can be obtained by using KCL to implement the summations in (1). Each pixel has two nodes corresponding to the two summations. Previous voltage mode designs represented w(n) as current, i£ri) and i,{ri) as voltages and used linear transconductance amplifiers and resistors to implement the coefficients. This design represents both u(n) and i(n) as currents and uses current amplifiers and MOS transistors operating as "pseudo-conductances" or "diffusers"[3][4].
If HB = 1, then the first line of each summation can be implemented by the circuit shown in Fig. 1(a) where we assume that the transistors operate in weak inversion. The difference between Vh and Vv controls the value of «i =
VT denotes the thermal voltage, K denotes a constant less than 1. The second line of the sums are implemented using current amplifiers which sense the currents leaving the
drains of the transistors M„. Fig. 1(b) shows the circuits associated with two interior pixels in the array and a pixel at the left edge. The bias currents /bi„ enable the response to u(n), which is actually the difference between the drain currents of Mv and /bi„, to assume both positive and negative values. Fig. 1(c) shows the transistor level schematic of the current amplifier. The diode connected transistors are also mirrored to enable read-out of the currents ir(n) and i,(n). The gain Oj depends exponentially on the difference between source voltages Vsl andVs2.
The currents u(n) are supplied by a photodetector stage consisting of a vertical PNP phototransistor formed by the diffusion/well/substrate junctions and a PMOS mirror.

© © ©

v■'t-H[S XrIi?L"' TirfC

!>-!)■

I»'

i>+D

(a)

plC* vT pl[V VT pj[V VT

<•,<<>)

i,(D

i,<2)

[%"• vT f»^ vT rt*- vT

ir(0)

<V(D

i/2)

(c)

(b)

Fig. 1: (a) A weak inversion transistor network where the relationship between the currents is linear, (b) The circuits associated with two pixels of the array in the interior (pixels 1 and 2) and one pixel at the left edge of the array (pixel 0). (c) The transistor implementation of the current amplifiers.

70

21. 2D Network

The cost function for the 2D network is given by

£<>) = jEEi*». n> - H^m- ">12+scA^pEE'*"'n) ~ *J^°"+L n)'2

m n

x mn

2(Aiy ;£ll'("«>n)-e-^.(m,n+l)l2

The transfer function is

//(CD,, CO,) =

Ha 2~2cas(<ax-£lx) 2-2cos(co),-fl),)

1+

(Ä7£j*

+

(Afly)2

The impulse response is approximately

where

A(m,«)=/tm>n)e''(0,'m + 'V0

f lAft

lAß

Hc

0,0

fl.m,n)--

1 + :

Ha(Afl^J(-A^/nfvo) C^,Aß^)2 + (Afl,y)2)

otherwise

and Af0 denotes the zerofh order Bessel function of the second kind. The circuit architecture is similar to the one dimensional case, with the inter-pixel connections extended both
horizontally and vertically. The expressions for the coefficients ou, aly, a^, and a.2y are similar to (2) with the gain Ha determined by the constraint H0 = 1.
In order to tune the array to all possible orientations, the gains of the current amplifiers must be allowed to be both positive and negative. This can be done by providing two current amplifiers, one with positive gain and the
other with negative gain. At any time, at most one of the amplifiers is active. Because aL is implemented using MOS transistors as diffusere, aL > 0. Although this limits both ilx and Ciy to be less than Jt/2, it is not a significant restriction since those frequencies correspond to periods shorter than four pixels.

3. Experimental Results
This section reports results from a 14 by 12 pixel 2D array, which was fabricated using the 1.2u. m process from AMI available through MOSIS. Each cell contains 52 transistors. Most of the area is taken up by the current amplifiers. Total project size including pads was 2.2mm by 2.2mm. Results from a 32 pixel ID version of this architecture were reported in [5]. Pixel spacing is 132u,m vertically and 108um horizontally with a fill factor of 20%.
The array requires a power supply of 5V. Static power dissipation of the processing circuits increases with lower spatial frequency tuning due to the larger gain a^ and a2y of the current amplifiers, but was less than 200jiW for the results reported below with IVm = SOnA. The power dissipation per pixel is 1.2 u,W, in comparison with 51 p-W for previous above threshold designs.
The impulse response of the filter was measured by focusing a light spot onto pixel (8,7) of the array using an 8mm lens. By adjusting the bias voltages controlling the a parameters, we can tune the filter to any orientation between -7C and TC (Fig. 2). Due to transistor mismatch, there was fixed pattern noise (FPN) in the odd and even outputs. The FPN was measured with no light incident on the chip and subtracted in a digital post-processing step. For the bias settings used in these experiments, its standard deviation ranged between 13nA and 19nA.

4. Conclusion
We have described a circuit architecture for focal plane Gabor-type filtering exploiting transistors operating in weak inversion. Measured results of a 14 by 12 pixel 2D prototype verify the expected operation. Power dissipation is decreased by nearly two orders of magnitude in comparison with previous above threshold designs.

71

(a)
■

Ufa

ÜKB

(c)

(d)

(c)

(0

(g)

(h)

(>)

(j)

Fig. 2: Measured responses from test array due to spatial impulse located at pixel (8,7) for different orientation tunings, (a) 8 = 0. (b) 8 = it/8 . (c) 8 = tt/4. (d) 8 = 3TC/8 . (e) 8 = 7C/2. (f) 8 = 37C/4. (g) 8 = Jt. (h) 8 = 57t/4. (i) 8 = 371/2. (j) 8 = 77T./4. The top image shows the real part of the impulse response. The bottom shows the imaginary part. Tunings which differ by 7C (i.e., (a)/(g), (c)/(h), (e)/(i) and (f)/(j)) are similar except for a change of sign in the imaginary part.

Acknowledgements
The author would like to thank T. Choi for his help in making the measurements reported here. This work was supported by the Hong Kong Research Grants Council under grant number HKUST6216/98E.
References
[1] B. E. Shi, "A ID CMOS focal plane array for Gabor-type image filtering," IEEE Trans. Circuits and Systems-I: Fundamental Theory and Applications, Special Issue on Bio-inspired processors and Cellular Neural Networks, vol. 46, no. 2, pp. 323-327, Feb. 1999.
[2] B. E. Shi, "2D Steerable and Scalable Cortical Filters," Proc. 7th. Int. Conf. on Microelectronics for Neural, Fuzzy and Bio-inspired Systems, Granada, Spain, pp. 232-239, April 1999.
[3] A. G. Andreou and K. A. Boahen, "Neural Information Processing II," in M. Ismail and T. Fiez, eds., Analog VLSI: Signal and Information Processing, New York: McGraw-Hill, 1994.
[4] E. A. Vittoz, "Pseudo-resistive networks and their applications to analog collective computation," Proc. 7th Int. Conf. Artificial Neural Networks, Lausanne, Switzerland, pp. 1133-1150, Oct. 1997.
[5] B. E. Shi, "Subthreshold current mode design of Gabor-type CNN image filters," Proc. European Conference on Circuit Theory and Design, Stresa, Italy, vol. 2, pp. 1163-1166, Aug. 1999.

72

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Analogic Computing: System aspects of Analogic CNN Sensor Computers
Tamäs Roska
Analogical and Neural Computing Laboratory of the Computer and Automation Research Institute of the Hungarian Academy of Science, Budapest and the
Department of Information Technology, Pazmäny P. Catholic University, Budapest address: Kende u. 13, Budapest, Hungary H-l 111
phone: (+361) 2095263, fax: (+361) 2095264, email: roska@sztaki.hu
ABSTRACT: A new principle of computing and computers is emerging: the analogic cellular computer. Its architecture, the CNN Universal Machine, is now implemented in several different physical forms and the first practical experiments exhibit breathtakingframe rate and computing power. Several "Kilo real-time video" frame rate (more than 10,000frames per second) and TeraOPS computing power on a 1 cm CMOS (0.5 micron) chip were measured. In this review article, the systems aspects and the new directions in this field are considered. A new world ofsoftware and a new notion ofcomputing are taking ground. The possibility ofsoftware in optical computing becomesfeasible. Likewise, programming on atomic and molecular scale implementations may be possible. Hence, photons and molecules may be usedfor signal representation in these analogic computers.
1. Scenario
Recent history of the electronic and computer industry can be viewed as three waves of revolutionary processes [1]. The first revolution, making cheap computing power available via microprocessors in the 70s, led to the PC industry of the 80s. The cheap laser and fiber optics which resulted in cheap bandwidth at the end of the 80s led to the Internet industry of the 90s. The third wave, the sensor revolution at the end of the 90s, will also provide for a new industry. Sensor revolution means that cheap sensor and MEMS (micro electro mechanical system) arrays are proliferating in almost all conceivable forms. Artificial eye, nose, ears, taste, and somatosensory devices as well as sensing all physical, chemical and biological parameters, together with microactuators, etc. are becoming commodities. Thousands and millions of generically analog signals are produced waiting for processing. A new computing paradigm is needed. The cited technology assessment [1] reads: "The long-term consequence of the coming sensor revolution may be the emergence of a newer analog computing industry in which digital technology plays a mere supporting role, or in some instances plays no role at all". I do think that for processing analog array signals, the Analogic Cellular (CNN) Computer paradigm, based on the CNN Universal Machine architecture and its various physical implementations, is a major candidate to play this role. At the same time, Analogic Cellular Computers mimic the anatomy and physiology of many sensory and processing organs, even with stored programmability. Recent studies on optical and nano scale implementations open up new horizons on the atomic and molecular levels. Stored programmability, invented by John von Neumann, was the key for endowing digital computers with an almost limitless capability within the digital universe of signals, opening the door to human invention via digital algorithms and software. Indeed, according to the Turing-Church Thesis, any algorithms on integers conceived by humans can be represented by Recursive functions/Turing Machines/Grammars. The CNN Universal Machine is universal not only in a Turing sense but also on analog array signals. Due to stored programmability, it is also open to human intelligence with a practically limitless capability within the universe of analog array signals, via analogic spatiotemporal algorithms and software.
Optical implementation is already emerging using molecular level analog optical memory (Bacteriorhodopsine or polimer materials) [8,9]. Atomic and molecular level implementation of the CNN array as well as the CNN-Universal Machine may become feasible. The Analogic Cellular Computer represents a new platform for computing, however, this notion of computing contains brand new elements and techniques as well, partially reflecting some forms of nature-made information processing.
Nature-made information processing has several different manifestations. On the Molecular level this means the protein structures or interacting molecules on a two or three dimensional grid; on the Neuronal level it may mean the many sensory organs and subsequent neural processing. On the Functional neuronal level it may mean the information representation in spatiotemporal memory, the functional laterality of the brain, as well as the parallel processing places and functional units

0-7803-6344-2/00/S10.00 ©2000 IEEE

73

learned via PET, NMR, fNMR, etc. On the Mathematical-Physical level, it may mean several dynamic spatio-temporal processes and phenomena represented by different nonlinear Partial Differential Equations (PDEs). The striking intellectual and scientific challenge is: how to combine these diverse phenomena in useful algorithms running on a standard spatio-temporal computer, based on the CNN Universal Machine. The surprising fact is that it can be done, based at least on some examples and experiments.

1
stored program on
integers (e.g. digital
numbers and symbols)

stored program on fbws (e.g. image sequences and symbols)

Figure 1. The Digital and the Analogic Universe in Stored Programmable Computing.
2. Kilo real-time and Tera OPS on an Analogic Visual Microprocessor
The computational power of this new technology is breathtaking. There are two classes of problems where no other technology can compete.

74

Class K: Kilo real-time [K r/t] Same rate class. The frame rate of the process in this class is in the order of about thousand times faster than the real-time video frame rate (30 frame per second). A typical experiment is reported in [14] where a pattern classification with more than 10,000 frames per second was tested (more than 0.33 K r/t). Using current CMOS Technology, 1.5 K r/t, that is about 50,000 frame per second is feasible. In this Class K, the high frame rate is the key in the computation. Clearly, the sensing and computing tasks are to be physically integrated. In standard digital technology, there is no time for A to D conversion and to complete the calculation, all within the few microsecs.
Class T: TeraOPS equivalent computing power class. Even if the frame rate is small, like real/time video (30 frame per second), the required computing power (per chip) is enormous. Indeed, Trillion operations per second is to be, and can be, achieved [6, 12]. These TeraOPS chips are capable to solve a nonlinear PDE on a grid in a few microsec. The detection of a moving inner boundary of the left ventricle in an echocardiogram, via an analogic CNN algorithm [13] combining several waves, local logic, and morphology operators, took only 250 microsec on the ACE4K analogic Visual Microprocessor Chip made in Seville, These chips hosted 4096 cell processors on a chip. This means about 3 TeraOPS equivalent computing power which is about thousand times faster than the computing power of an advanced Pentium processor.
3. The world of analogic algorithms using Spatial-temporal Instruction Set Computers (StISC)
The signals to be processed are two-dimensional (2D) signal arrays or image flows. The 2D array may represent pictures or any other 2D sensory output signals of continuous value in continuous time. 3D arrays of signals can be defined similarly. Without loss of generality we will discuss 2D image flows, or video flows, the only discretization is in space. The formal framework of analogic computing is as follows [26]. A finite time image flow <S> (t) is defined as:

*(t):{<fcj(t). t€T=[0,td]}
lSi<m l<j <n
where m and n are positive integers, td > 0 (time duration), <j% (t) e C' (continuously differentiable). For example, <p,j may represent an input, state, or output of a cell (representing a pixel) in an m x n cell array, and % (t) is bounded.

At t = t*, * (t*) is an m x n Picture (a snapshot),
P: {pij e R1} , I Pij I < pm„ e R' < ~, where pi; is the pixel intensity .
Without loss of generality we may assume that in a gray scale image black and white are represented by +1 and -1 (or +1 and 0). In this paper we will use the +1 and -1 convention. A color picture is represented by a combination of several color layers of mxn cell arrays, each layer is representing the intensity of the appropriate color component (e.g. R,G,B).
A binary picture can be called a mask M,

{1,-1} M: niij e or
{1. 0}
A sequence of snapshots at t=to, to + At, to + 2At to + kAt is called image sequence or video stream, denoted by <D (k). A spatial-temporal instruction set computer (StISC computer) operates on image flows, or image sequences, the elementary instruction is defined as

*.u«pu. (t):= * (*i„pu.(t), t € T = [0, td]

(1)

or

Oou,pu,(k):= ¥(*lnpu,(k), t=l,2,... 4* being a function on image flows or image sequences.

As an example, a video clip is transformed into another video clip.

75

A functional F on an image flow is defined as

P: = F(<J>,„p,„(t))

(2)

As an example, an image flow or a video clip is transformed into a picture showing the maximum intensity values in each pixel. The output image could be a mask, M, as well. For example, the mask pixel would be black if a change occurred in O (t).
If after t = td the output is not settled, i.e. there exists at least one ij -> <p,j (t) * 0
then the spatial-temporal dynamics or the equivalent spatial-temporal instruction is of non-equilibrium type.

The next question is how to build a computer with non-equilibrium type elementary instructions, i.e. the StISC computer (also called analogic cellular computer).

The StISC Computer shouldperform • non-equilibrium type spatial-temporal elementary instructions, • spatial logic instructions on spatial masks, acting pixel-wise (e.g. a cellular automaton), • spatial-temporal combination of image flows and/or pictures pixel-wise, and • algorithms (recursive functions) using the above three types of instructions. The algorithms defined in this way are called
non-equilibrium spatial-temporal (NEST) algorithms.

Remark 1: Spatial-temporal instructions with settled output are special cases. Remark 2: Loosely speaking, the usual analogic CNN algorithms belong to this class. Remark 3: The Cellular Neural/nonlinear Network (CNN) is a minimal and powerful representation of a non-equilibrium type spatial-temporal (NEST) elementary instruction. Once the cell is selected the parameters are: • the cloning template
• input, initial state, output (bias map, fixed state) • time duration (td) • boundary condition Remark 4: The CNN Universal Machine (CNN-UM) architecture is a minimal and in a sense universal model of a StISC Computer. Remark 5: The CNN-UM has several physical implementations. So far the following ones are of practical importance: • mixed-signal or analogic CMOS, • emulated digital CMOS, and • optical. Remark 6: Adaptation, plasticity, and learning are inherent capabilities of the CNN-UM, as it will be shown in detail shortly. Remark 7: Several neuromorphic models of different parts of the brain, especially the retinotopic visual pathway, proved to be in one-to-one correspondence with CNN-UM. Remark 8: The new mathematical techniques in advanced image processing, like mathematical morphology and especially the PDE related techniques, are almost native on the analogic cellular computers (CNN-UM), while they are extremely time consuming in standard digital computers.

Algorithms of digital computers are defined mathematically via the n-recursive functions. The analogic spatiotemporal algorithms are defined via the a-recursive functions. These are defined by the initial settings of flows, pictures and masks as well as the recursions of functions and functionals defined above.

Computational complexity has thoroughly been well and is directly related to standard digital computers. Recently,
computational complexity studies on reals (due to Blum, Shub, and Smale [27]) challenged this framework by showing its limits when numerical algorithms on reals are considered. The Universal Machine on Integers (UMZ) is replaced by a Universal Machine on Reals (UMR) using the so called Newton Machine, which (by nature) remains iterative. The CNNUM is, however, a continuous time and continuous value machine operating on flows (UMF). The start-up studies show the relation between UMZ, UMR, and UMF [24].

76

4. Computational infrastructure Analogic Software
The new computer chips need a new computational infrastructure, which is transparent to the programmer being familiar with existing digital computer software. This system has been developed and is available [5]. The high level language for coding the analogic spatiotemporal algorithms, the BASIC of this new computing paradigm, is called Alpha. The code written in the Alpha language is compiled by an Alpha compiler, and then an analogic macro code (AMC) is generated which is the standard interface for many directions, including towards the CNN Operating System (COS) and down to the physical level. Once the machine code is downloaded the Visual Microprocessor is ready to go and compute the incoming image flow, either via the focal plane optical sensors or via the electrical, row by row downloading. The ALADDIN development system takes care of the programmer during the whole development and prototyping phase.
One key condition of the success of a widespread use in industry of this new computing paradigm is the stability of the generic architecture and the compatibility of the high level software.
5. Using photons and molecules for signals
After the first pioneering attempts to use optical CNN implementation [19], and emphasizing the usefulness of this technology [20], there were no major efforts to prove that the flexibility of programming can be introduced into the optical implementation. Very recently, it has been shown that this is feasible [8,9].
The use of Quantum dot devices and arrays in Cellular structures has been introduced recently in the CNN context [21,22], and their modeling and local activity conditions have also been shown [10].
Very recently, a new way of placing rotating molecules on Silicon in a grid has been discovered [23] and its possible use for a CNN Universal Machine has been discussed [7]. Promising work in this direction has been started.
6. Acknowledgement
The support of the Hungarian Academy of Sciences via the Computer and Automation Research Institute (MTA SZTAKI), the Hungarian Research Found (OTKA Grant No. T026555), as well as the Office of Naval Research (ONR Grant No. N68171-97-C-9038), and the European Office of Aerospace Research and Development (EOARD Grant No. SPC 994083) is gratefully acknowledged.
7. References
[1] P.Saffo, "Sensors: the next wave of Infotech revolution", Institute for the Future, Menlo Park, 1999 [2] L.O. Chua and L. Yang, "Cellular Neural Networks: Theory and Applications", IEEE Transactions on Circuits and
Systems, vol. 35, pp. 1257-1290,1988 [3] T. Roska and L.O. Chua, 'The CNN Universal Machine: An Analogic Array Computer", IEEE Transactions on
Circuits and Systems, Ser. II, vol. 40, pp. 163-173,1993 [4] S. Espejo, A.Rodriguez-Väzquez, R. A. Carmona, P. Földesy, Ä. Zarändy, P. Szolgay, T. Sziränyi, and T. Roska,
"0.8um CMOS Two Dimensional Programmable Mixed-Signal Focal-Plane Array Processor with On-Chip Binary Imaging and Instruction Storage", IEEE Journal on Solid State Circuits, vol. 32. pp.1013-1026.1997. [5] T. Roska, Ä. Zarändy, S. Zöld, P. Földesy and P. Szolgay, "The Computational Infrastructure of Analogic CNN Computing - Part I: The CNN-UM Chip Prototyping System", IEEE Trans, on Circuits and Systems, Ser. I, Special Issue on Bio-Inspired Processors and Cellular Neural Networks for Vision, (CAS-I Special Issue), vol. 46, pp. 261268,1999 [6] S. Espejo, R. Dominguez-Castro, G. Liflan, and Ä. Rodriguez-Vazquez, "A 64x64 CNN universal chip with analog and digital I/O" Proc. j" Int. Conf. on Electroonics, Circuits and Systems (ICECS-98), Lisbon, Portugal, pp. 203206 1998. [7] T. Roska, "Native Analogic Cellular Computer Architecture for Biomolecular Computers", internal memo, Budapest, March 2000 [8] Sz. fök£s, L. Orzö, Gy. Var6, and T.Roska, ,3acteriorhodopsin as an Analog Holographic Memory for Joint Fourier Implementation of CNN Computers" , Technical Report, DNS-3-2000, Analogical and Neural Computing Research Laboratory, Computer and Automation Institute, Budapest, April 2000
77

[9] Sz. Tökis, L. Orzö, Cs.Rekeczky, T.Roska and Ä. Zarandy, „An Optical CNN Implementation with Stored Programmability", Proc. IEEE International Symposium on Circuits and Systems, ISCAS 2000, Geneva, 2000
[10] A. Csurgay, W. Porod, and C.Lent, „ Signal Processing with Near-neighbor-coupled Time-varying Quantum Dot arrays", IEEE Transactions on Circuits and Systems, Ser. I., vol.47, 2000 (in print)
[11] L.O.Chua, „Molecular devices, systems and computers", Proc. IEEE International Symposium on Circuits and Systems, ISCAS 2000, Geneva, 2000
[12] T. Roska and Ä. Rodriguez-Vazquez, "Review of CMOS implementations of CNN Universal Machine -type Visual Microprocessors", Proc. IEEE International Symposium on Circuits and Systems, ISCAS 2000, Geneva, 2000
[13] Cs. Rekeczky, Ä. Tahy, Z.Vegh, and T. Roska, „CNN-based Spatio-temporal Nonlinear Filtering and Endocardial Boundary Detection in Echocardiography", Int. J. Circuit Theory and Applications, vol. 27, pp.171-207,1999
[14] Ä. Zarändy, M. Csapodi, and T. Roska, „20 microsec Focal plane Image Processing", Proc. (lh IEEE International Workshop on Cellular Neural Networks and their Applications, CNNA-2000, Catania, 2000
[15] Cs. Rekeczky, T. Serrano-Gotarredona, T. Roska, and A. Rodriguez-Vazquez, „A stored Program, 2nd order/3-Layer Complex Cell CNN-UM, Proc. 6" IEEE International Workshop on Cellular Neural NeHvorks and their Applications, CNNA-2000, Catania, 2000
[16] I. Szatmari, Cs. Rekeczky, and T. Roska, „A Nonlinear Wave Metric and its CNN implementation for Object Classification", J. VLSI Signal Processing Systems, vol. 23, pp.437-448, 1999
[17] B.Roska, E.Nemeth, L.Orzö, and F. Werblin, „Three Levels of Lateral Inhibition: A Space-time Study of the Retina of the Tiger Salamander", The Journal ofNeuroscience, vol. 20, pp. 1941-1951, 2000
[18] D. Bälya, B.Roska, E. Nemeth, T.Roska, and F. Werblin, „A Qualitative Model-framework for Spatiotltemporal Effects in Vertebrate Retinas", Proc. 6'h IEEE International Workshop on Cellular Neural Networks and their Applications, CNNA-2000, Catania, 2000
[19] N. Fruehauf, E. Lueder, and G. Bader, "Fourier Optical Realization of Cellular Neural Networks", IEEE Trans, on Circuits and Systems, Ser. II, vol.40. No.3. pp.156-162,1993
[20] S.I. Andersson, "Recent Progress on Logic and Algorithms for Optical Neural Networks", Proceedings of IEEE Int. Workshop on Cellular Neural Networks and Their Applications, (CNNA'98), pp. 50-51, London, 1998
[21] W. Porod, "Quantum-Dot Devices and Quantum-Dot Cellular Automata", Int Journal of Bifurcation and Chaos, vol.7, pp. 2199-2218, 1998
[22] W. Porod, "Towards Nanoelectronics: Possible CNN Implementations using Nanoelectronic Devices", Proceedings oflEEEInt. Workshop on Cellular Neural Networks and Their Applications, (CNNA'98), pp. 20-25, London, 1998
[23] M.C.Hersam, G.C.Abeln, and J.W.Lyding, „ An Approach to Efficiently Locating and Electrically Contacting Nanostructures Fabricated via UHV-STM Lithography on Si (100)" , Microelectronic Engineering, vol. 47, pp.235, 1999
[24] Roska, and Chua, „ On a Framework of Complexity of Computations on Flows Implemented on the CNN Universal Machine", Technical Report, DNS-15-1995, Analogical and Neural Computing Laboratory, Computer and Automation Research Institute, Budapest, 1995
[25] H.R. Lewis and C.H. Papadimitriou, Elements of the theory of computations, Prentice Hall, Englewood Cliffs, 1981 [26] T. Roska, and L.O.Chua, „Computer-Sensors: Spatial-Temporal Computers for Analog Array Signals, Dynamically
Integrated with Sensors",/ VLSI Signal Processing Systems, vol. 23, pp.221-238, 1999 [27] L.Blum, F.Cucker, M.Shub, and S.Smale, Complexity and real computation, Springer, New York, 1998
78

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings
CNN Technology in Action
Demo Session
Äkos Zarandy*, Servando Espejo*, Piter FBldesy**, Läszlö Kik*, Gusztavo Linan*, Csaba Rekeczky», Angel Rodriguez-Vazquez*, Tamas Roska*, Istvan Szatmari*, Tamas Sziranyi*, Piter Szolgay*
'Analogical and Neural Computing Laboratory of the Computer and Automation Research Institute of the Hungarian Academy of Science
email: zarandy@sztaki.hu * Institute of Microelectronics of Seville of the Spanish National Microelectronics Center
email: espejo@cnm.us.es
ABSTRACT: Two CNN-UM prototypes are demonstrated in action. The first one is the latest 4096 cell-processor, analog I/O, analogic CNN Visual Microprocessor, on which on-line video image processing will be performed. The second one, the 20x22 binary input-binary output CNN-UM chip is introduced as an ultra high-speed focal plane array processor. In the live demonstration it captures and classifies 10,000frames in a second.
1. Introduction
In the last few years the analog VLSI CNN chips [1,2,3,4] and their embedding softwarehardware environment [5] reached a high sophistication level, which makes the CNN technology ready to be applied in industry or in commercial products. This session is devoted to demonstrate the advanced features of the new CNN chip based systems.
The demonstrated analogic CNN visual microprocessors were designed in the Institute of Microelectronics of Seville of the Spanish National Microelectronics Center. Using the CNN-UM chips, the first prototypes of a visual computer (called Aladdin) was designed and built in the Analogical and Neural Computation Laboratory of the Computer and Automation Research Institute of the Hungarian Academy ofScience.
The first demonstration (Section 2) introduces the 64x64 CNN-UM chip [3] as an on-line video flow processor, while the second one (Section 3) applies the 20x22 chip [4] as an ultra high-speed focal plane array.
2. On-line video flow processing
Motivations: In the last few years particle detection and classification in fluid-flows have received considerable interest among the applications requiring image processing at ultra high frame rates. For instance, a sensory module capable of identifying the density of debris particles in the oilflow of various engines would enable a cost-effective on-line monitoring of these systems (e.g. condition based monitoring ofjet engines).

Figure 1. The experimental setup of the marble-bubble detection system.
Cellular neural/nonlinear network (CNN) technology offers a parallel and analogic (combined analog and logic) approach to these problems. The CNN chip can be used either as a focal-plane array processor or a video-flow processing visual microprocessor. In the latter case recent feasibility studies

0-7803-6344-2/00/$10.00 ©2000 IEEE

79

and experiments indicate that in a demo prototyping system detection and classification of the particles can be performed on-line on a 64x64 CNN chip [3].
ras* specification and the demo system: Figure 1 shows the experimental setup of the on-line video-flow demonstration. In a water tank containing bubbles and marbles, a fast turbulent flow is generated. The task is to detect and separate the marbles from air-bubbles in each acquired image. The demonstration aims to prove that a morphology based complex algorithm can be executed during an on-line vide-flow processing in a CNN system.

ADAPTIVE THRESHOLDING

- 40 fisec

MORPHOLOGICAL PRE-F1LTBRING
OBJECT CLASSIFICATION

-75 Lisec -35 |j.sec

~ 150 Jisec / on the 64x64
CNN chip /

Figure 2. The flow-chart of the marble-bubble detection algorithm. The time requirement of each steps is also indicated.
General idea of the solution: (i) adaptive thresholding: all objects are detected in the image field through a spatially adaptive thresholding, (ii) morphological pre-filtering: objects are compared to prototype objects to filter out single bubbles and bubble-groups, furthermore to classify the remaining objects into different particle groups, (iii) object classification: in the last stage objects are classified based on their size and morphology (and a simple statistics is calculated for different object groups). The on-chip time performance of major subroutines of the algorithm is summarized in Figure 2 (no transfer and display time included):
3. Ultra high frame-rate image capturing and processing
Motivations: Ultra high frame-rate (exceeding 10 000 frame/sec) image processing is an unsolved problem with current digital systems of affordable price and size. Both the limited computational power and the I/O bottleneck (when the image is transferred from the sensor to the processor) represent major obstacles in digital systems.
Cellular neural/nonlinear network (CNN) technology offers a parallel and analogic (combined analog and logic) approach to these problems. If a CNN chip is used as a focal-plane array, the zero computational load requirement is satisfied immediately. This chip [4] acts as a focal-plane visual microprocessor: acquires image frames parallel through the optical input, transfers them to the processor elements and performs the analysis also in parallel. In 20 psec, approximately 5 analog operations (CNN templates) and 10 local logic operations can be completed. This makes it possible that even a complex morphological decision can be performed within two subsequent frames at a 50 000 frames/sec operational speed.

Figure 3. The experimental setup of the ultra high speed, focal plane array processor system. 80

Task specification and the demo system: The experimental setup is shown in Figure 3. The CNN platform which carries the chip is mounted on the back panel of a camera (only the optics is used, no shutter is required). On a rotating disk different images are posted and during the experiment these images are projected to the chip through the lens system of the camera. The demonstration proves that the system is able to classify six different flying objects (hot-air balloons and airplanes) based on their silhouettes' low resolution projections on the chip's optical sensors at a speed of approximately 10 000 frames/sec. In Figure 4 the major subroutines of the algorithm are shown along with their measured onchip time performance (no transfer and display time included). Detailed description of this experiment can be found in [6].

+ *f \ + *? \ Objects as captured by the
chip's optical input.

Each captured object is analyzed by a set of CNN operations (shape, size, orientation).

\
| SUBROUTINE A

L^H
SB
r-C TEMPLATE B
H®

SUBROUTINE B

TEMPLATE C

Finally, each object is correctly classified into one of the 6 classes.

?=&E

Figure 4. The flow-chart of the image classification algorithm.
4. Conclusion
Analogic visual computers, based on CNN technology are demonstrated in action. It is proved that the CNN technology is ready to be applied in industrial vision application or in commercial products.
References [1] L.O. Chua and L. Yang, "Cellular Neural Networks: Theory and Applications", IEEE
Transactions on Circuits and Systems, vol. 35, no. 10, October 1988, pp. 1257-1290 [2] T. Roska and L.O. Chua, "The CNN Universal Machine: An Analogic Array Computer", IEEE
Transactions on Circuits and Systems - II, vol. 40, March 1993, pp. 163-173, 1993 [3] S. Espejo, R. Dominguez-Castro, G. Linan, and A. Rodriguez-Vazquez, "A 64x64 CNN
universal chip with analog and digital I/O" Proc. 5* Int. Conf. on Electroonics, Circuits and Systems (ICECS-98), Lisbon, Portugal, pp. 203-206 1998. [4] S. Espejo, A.Rodriguez-Vazquez, R. A. Carmona, P. Földesy, Ä. Zarändy, P. Szolgay, T. Sziränyi, and T. Roska, "0.8um CMOS Two Dimensional Programmable Mixed-Signal FocalPlane Array Processor with On-Chip Binary Imaging and Instruction Storage", IEEE Journal on Solid State Circuits, Vol. 32. No. 7. pp.1013-1026. July, 1997. [5] T. Roska, Ä. Zarändy, S. Zöld, P. Földesy and P. Szolgay, "The Computational Infrastructure of Analogic CNN Computing - Part I: The CNN-UM Chip Prototyping System", IEEE Trans, on Circuits and Systems I: Special Issue on Bio-Inspired Processors and Cellular Neural Networks for Vision, (CAS-I Special Issue), Vol. 46, No.2, pp. 261-268, 1999 P.
[6] Ä. Zarändy, M. Csapodi, T. Roska, "20 |xsec focal plane image processing", in this proceedings.

81

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings
CNN Image Compression and Reconstruction Based on Non-orthogonal Wavelet Transform
Masashi MORI, Makoto MATSUYAMA, Yuichi TANJI and Mamoru TANAKA Dept. of EEE, Sophia University,
7-1, Kioi-cho, Chiyoda-ku, Tokyo 102-8554 Japan Phone: +81-3-3238-3878, FAX: +81-3-3238-3321
E-mail: masa@mamoru.ee.sophia.ac.jp
ABSTRACT: In a practical image processing such Wavelet Transform (WT), the function orthogonality is required for reconstruction of the original image. The orthogonality has disadvantage that the selected filter is not necessarily optimal from a viewpoint from human retinal realization. It is not necessary to select an orthogonal templates in Cellular Neural Network (CNN) image processing, because the CNN is non-linear analog circuit to obtain equilibrium points automatically and simultaneously. This paper describes CNN image compression and reconstruction based on a non-orthogonal WT. This system have an advantage of non-dependency of image scanning by spatio-temporal CNN dynamics. It is very important that the reconstruction of transmitted compression image is done simultaneously by parallel neurons based on the "regularization" of ill-posed problem which is caused in a retinal system of a human brain.
1. Introduction
In a retinal system of human brain, many information are integrated (structural compression) and transmitted to visual area. For the reconstruction of images and recognition of depth or motion, the received information is reconstructed by solving ill-posed problem based on the regularization [1]. Thus, it is very important that the reconstruction from transmitted compression image is done simultaneously, in order to imitate retinal system of human brain.
Since analog Cellular Neural Network (CNN) proposed by Chua and Yang [2] has the characteristic of local connection and real number of state variable, the CNN is suitable for direct and parallel connection to a CCD sensor. So, many researchers had paid attention to achieve the some retinal process by using CNN.
In this paper, we propose a method of CNN image compression and reconstruction based on the nonorthogonal Wavelet Transform (WT). The compression and reconstruction of image is identical procedure with WT, but it is done on non-linear analog circuit expressed by nodal differential equations to obtain equilibrium points simultaneously. The reconstruction process is a kind of solving an ill-posed problem for resolution extension from a lowest frequency part LL-image obtained by the WT.
Some simulations are done for the lossy compression and reconstruction.
2. Image Compression and Reconstruction
At first, a new image compression and reconstruction method should be explained by using conventional WT.
For example, using an orthogonal Haar WT, an original image is divided 4 parts shown in the Fig. 1 by using low and high frequencies bands, where low pass FQ(Z) and high pass Fi(z) filters are respectively

0-7803-6344-2/00/$10.00 ©2000 IEEE

"83

Figure 1: Images by wavelet transform.

given by

Fo(z)

1 + 2-

(1) The relationship between coding filters (1) and decoding filters Co(z) and Gi(z) are obtained as follows:

Go(z) = F,(-z)

G,W = -Fo(-;

(2)

In the lossless image compression and reconstruction, if the lowest frequency | part LL is used as a compression image in the coding system, then the lossy image which has same dimension as the original image can be reconstructed in the coder and decoder systems according to the inverse WT process. And it is very important that the original image which are corresponding to the higher frequencies parts LH, HL and HH can be reconstructed from the reconstruction of the LL part and the difference image between the LL reconstruction image and the original image. That is, the reconstructed image from the LL part can be used as a prediction value. The WT requires a function orthogonality to reconstruct the original image without inverse matrix processing. The traditional image scanning and the orthogonality have advantages to reduce the number of iterations in a sequential machine. However, there is no possibility that a human retinal system is realized by such orthogonal and scanning methods which have been used in the traditional digital image processing.
The process based on the WT can be performed by using a CNN. Based on the uncertainty principle of image compression by the WT, a low spatial frequency image (LL-image s), the image of the LL part, can be generated from a structural compression corresponding to low resolution compression of the WT. It is not necessary for us to use such a function orthogonality on approach of CNN as non-linear analog circuit to obtain equilibrium points simultaneously.
Fig. 2(a) shows a structural compression whose ratio is ~. Let, u[ j be the pixel value on position (i,j) of a picture P, then a vector u' = [u[ ] ([uj A € 3?w) represents the picture P. In order to perform the structural compression, an each input u\^ is applied as a node voltage of a graph shown in Fig. 2(a). At first, it is necessary to product Gaussian filter B and the input u' as

:Bu',

(3)

where u represent blurred original image. The current values on the links connected to a black node are summed to produce the X/L-image as node currents. Let A and An be the incident matrix and its

84

Figure 2: (a) Graph for structural compression: (b) Graph for structural reconstruction.

sub-matrix, then it is derived that

Vj = A u

(4)

i; = Gv,

(5)

s = Atiii = AitGAru

(6)

where v/ and i/ are link voltage and current respectively. G is a diagonal conductance matrix which is selected usually as an unit matrix.
Let S = Ai/,GAT be P x N rectangular connection matrix of the oriented links to the black nodes in the figure, then P is number of black nodes and N is number of all nodes corresponding to the pixel of the original image. That is, the compression LL-image s G Kp (P < N) can be represented by the linear transformation as

s = Su.

(7)

So, only the absolute values of the node current s are sent to a receiver. The node current s received at the receiver is given by

s = Su.

(8)

Therefore, in order to reconstruct the blurred original image u, a regularization problem for its appropriate solution must be solved.
We use such a Wiener filter W+ as the inversion for reconstructing the structural compressed image ü. Since the connection matrix S corresponds to the blurring matrix, the pseudo inverse matrix W+ can
be written by replacing An to A as:

W+ = (AG/AT + (T2I)-1T

(9)

And the almost blurred original image ü is reconstructed in a form of nodal equation by

Ü = (AG<AT + <T2I)-1S

(10)

s = Ts

(11)

where s = [sij] ([SJ.J] G 3?w) is constructed from s = Sij ([sij] G W) such that zero row elements corresponding to zero node currents inserted in white nodes in Fig. 2(b) are inserted to the vector s. That is, T is interpolative expanding matrix which is constructed from diagonal l's for black nodes and diagonal interpolative values for white nodes in Fig. 2(b). G/ is a diagonal link conductance matrix

85

(a)

(b)

Figure 3: (a) Original image, (b) Lossy image.

which is selected usually as an unit matrix. And the noise vector w(= a2\) is supposed to be a white noise with zero mean value and variance u2.
The CNN dynamic process corresponding to the equation (10) is given as a regularization solver by

du = -(AG,A' +<72I)Ü + T5.

(12)

dt

It is very important to use the CNN dynamics without orthogonal transformation. Here, the lossy image u is reconstructed by using the CNN equation as

~ = -(AG,AT + a2I)f(Ü) + Tl

(13)

at

where the quantizing function f(u) is a multi-value quantizing function quantized by the piece-wise linear function as

/(ü) = -(I« + II-Iü-I|).

(14)

The multi-value quantization in the analog processing will be realized base on the hysteresis multi-level function in the [3] to guarantee the convergence.
The original image and reconstructed image ü which is considered as a lossy prediction image are shown by the Fig. 3(a) and Fig. 3(b), respectively.

3. Conclusions
The CNN image compression and reconstruction based on the WT have been proposed. The reconstruction of compression image was done simultaneously in analog CNN by parallel neurons, based on the "regularization" of ill-posed problem cased in a retinal system of human brain.

References
[1] D. Marr, "Vision," W. H. FREEMAN AND COMPANY., 1982.
[2] L. O. Chua and L. Yang, "Cellular neural networks:thcory," IEEE Trans. Circuits and Systems., vol. 35, no. 10, Oct. 11)88.
[3] K. Yokosawa, Y. Tanji and M. Tanaka, "CNN with Multi-Level Hysteresis Quantization Output," CNNA2000, (accepted).

86

2000 6™ IEEE International Workshop on Cellular Neural Networks and Their Applications Proceedings

Time-Varying Cellular Neural Network Based Morphological Image Processing

Nasser Kamiss Al-Ani and Tomasz Kacprzak Technical University oftödi Poland
Institute of Electronics, Stefanowskiego Street 18/22, 90-537 L6dz, Poland e-mails: Nasserkhm@hotmail.com, kacp45@sg-ck.p.lodz.pl

ABSTRACT: Time-varying cellular neural network is proposedfor the morphological image processing and analysis. It has the ability to extract features, describe shapes and recognize patterns. The skeletonization of images, in additional to the four basic binary mathematical morphology operators: dilation, erosion, opening and closing are tested The tasks template design and computer simulation results are given.

1. Introduction
The term morphology is encountered in a number of scientific applications including biology and geography. Some of these applications to image processing include: nonlinear filtering, noise removal, media axis transformation, shape recognition and smoothing, texture analysis, biomedical image processing, industrial inspection and contour detection [1]. In the context of image processing it is the name of a specific methodology designed for the analysts of the geometrical structure in an image. Mathematical morphology examines the geometrical structure of an image by probing it with small patterns called "structuring elements", of varying size and shape. This procedure results in nonlinear image operators which are well-suited to exploring geometrical and topological structure. The most disadvantage of mathematical morphology is the high complexity when the image are of large sizes. One approach to overcome this disadvantage is to map the morphological operations into some parallel computational arrays. CNN is a technology very well fitted for implementation the mathematical morphological operations because of the local connections of cells [2].
In this contribution we introduce the implementation of binary morphological operators using time-varying CNN. Firstly we briefly define the time-varying CNN (Section-2), as well as the skeletonization (Section-3) and morphological operators: dilation, erosion, opening and closing (Section-4). Simulation of suggested methods for different tasks are given in Section-5, while a brief conclusion in Section-^.

2. Architectures of Time-Varying CNN [3,4,5]
Consider an mxn CNN arranged in m rows and n columns. We denote the cell in the i-th row and the j-th column as cell Cy. We use the following set of equations to define a cell.
State equation: N-dimensional time function differential equations describe the output dynamic space Dr; N=mxn

c- d~ir = ~ T- v«< + £ Mi.jXD v,„ + b

(i)

"'

Ä«

c(V),H,(l,j)

Output equation: network nonlinearity (PWL) in terms of the cell gain g(t)

+ 1

g(0-v,„(f)2l

g(.t).vzii(t)

-1< g(t).v,uU) <1

(2)

-1

S(0.v„,(0 5 1

Input equation

vu9=Ey

\<>i<m,\<.j<n

(3)

Enemi equation: Lypunov energy function of a CNN with (PWL), in vector-matrix form

0-7803-6344-2/00/$10.00 ©2000 IEEE

87

E =-LvI(A-j^I)Vy-V?b = -\vjMgVy V lb

(4)

Voltages v„,y , vslj , and vylj denote the input, state and output

voltages of cell Cy respectively. A and B are feedback and

aa

feedforward system matrices respectively, {b=B u +Ii,w}

c "

and {Mg= A-g(t)"' T„ I}, w is a unit vector, {T„ = R"'} and

J

{/}denotes mxn unit matrix. When the applied gain g(t) is constant 1, the diagonal elements of Mg are positive which occurs if the centre part of A template satisfies the inequality a^T,. All

Oi

/

:

eigenvalues are nonnegative defined which guarantee the system to evolve to one of local minima that are located in vertex of the output space Dy.

"o X « Tsoim«n WD tB Fig. 1: Time varying cell gain [5].

When the cell gain g is varied with time, Fig.l, the diagonal elements of the system matrix Mg will be time varying results in time-varying CNN. If the initial cell gain g(t) for t(0) is very small positive value, then for any

initial state Vx(0) the resulting output vector VY is close to the origin and the system has only one stable equilibrium point belonging to the centre region of D,. At this point the energy function (4) has a maximum zero

value and all eigenvalues are negative. Since the energy has been increased to its maximum, this state can be

interpreted as possessing in this condition a highest possible "temperature". As time elapses during the transient

response of the CNN system the energy (4) decreases, thus lowering also the equivalent "temperature" [6]. If this

process is slow enough then its results resamble the well-known annealing process in metallurgical technology,

and this is why the name "hardware annealing" was adopted for the time varying behaviour of CNN system.

During the process of increasing the gain of the cell g(t), the initial equilibrium point becomes unstable because

the eigenvalues change and start to take positive values. The N-dimensional energy surface modifies its landscape

enabling the CNN system trajectory to go to another equilibrium point, possibly of lower value in the Dy space. In this way the system can end up its transient process in a global minimum of the energy function (4).

3. Skeletonization with TVCNN

A succession of such operator is applied to an image to distinguish meaningful information by reducing it to

a sort of caricature. For example, in optical character recognition one may transform the digital image of a symbol

by reducing each connected component to a one-pixel-thick skeleton. Such a skeleton suffices for recognition and

can be handled much more economically than the full symbol. The definition of the skeleton of an object is "a

stick figure with each picture cell connected to two neighbours, except for the ones at the end of the stick and the

branch points where sticks are connected together" [7], The problem of skeletonization using CNN had been

attacked in several papers [ 8,9,10]. In this section we will present the algorithm of 8-connectivity for black-white

skeletonization using TVCNN. The algorithm consists of 8-steps of deleting pixels circularly from north-western

comers, clockwise up to south-western one. Such a step deletes black pixels having three white and two black

neighbours in a proper position.

Each step has its specific template parameters according to the neighbours state with respect to the actual one.

This task belongs to the binary input-binary output uncoupled CNN templates, in which the template A has zero

off-centre elements and the template B and bias /» have any real value. The template design method is a direct

derivation based on the determined desired function of given image processing task. The design method was used

in [6] and defined as unconditional method. This method of design takes the initial state is zero, i.e. Vt(0) = 0.

Hence V/0) = 0, the final output depends on the sign of b, precisely: yx = sign(6). Therefore in this way the

template B and bias /j are taken into account only.

The using of TVCNN with the proposed design method,

results in this that the path VY[g(t)] is the only one trajectory going to the equilibrium point from each initial state, and the

final system state VY[g(l)] is the result of the required task.

Since VY[g(l)] is the minimum of (5), the network converges to this point from each initial state. For the first step of

peeling of north-western pixel, the feedback template A has

zero off centre elements (a00>l), the feedforward template and bias are given as:

F'S 2 ,nPut imaSe ofskeletonization task.

c c 0

cb d

& /. = ?

(5)

0d 0

According to unconditional design method, and with respect to the assumption of the first step skeletonization, the black pixel (b) will be switched to white for three white (pixels-c) and two black (pixels-d) neighbours. To achieve this, the following inequality must be satisfied:
-3c + b + 2d+q<0 else for any mismatching of neighbours, the actual pixel (b) will be as it is (no change). Solution of these inequalities result the following template parameters: {c =.25,6=1.1, d=-25 and q =-.25}. The others step template can be calculated in the same manner resulting in the following equations:

*1,2.,8 .[1.2] i*l,2„8 = -0.25

.2 5 .25

.2 5 1.1

.2 5

0 -.25

■ .25 0 .25

-.25 1.1 .25

0

0 .2 5

0 -.25 0

Si = .25 1.1 -.25

.2 5 .2 5

0

.2 5 .2 5 .25

B, = 0

1.1 0

-.25 -.25 0

0 - .25 0

ß, = -.2 5 1.1 .2 5

0

.2 5 .2 5

.2 5 0 0 .25 1.1 -.25 .2 5 0 - .25

0

.2 5 .2 5

-.25 1.1 .2 5

0 -.25 0

0 B6 = 0
.2 5

-.2 5 1.1 .2 5

-.2 5 0 .2 5

(6)

To peel one layer of pixels from the object, the eight-steps are executed, which means that this procedure should be executed several times to reach the one pixel wide lines. For this algorithm the input image (black-white) has to be applied to the input of the first step. The output of each step will be the input of the next step. The initial condition for all steps are don't care "X". The algorithm is terminated if there is no change between previous
cycle (the cycle is the execution of all steps) and current one. The image in Fig.2 is applied as input image of the first network step. Fig.3a-h shows the simulated result of the 8-steps respectively. Fig.3i shows the required image skeletonization within three cycles.

■■■■»■■ ,

(t>)
11 UM :=Ä!"ü:i7 t

■■fit"

1 ,

h1 i

i1 'i

i !

1

1 <i

(h)

Fig.3 Steps ofskeletonization ofobjects in blackpixels. Subfigures correspond to the implementation of templates (6) respectively in thefirst cycle..

III.

Fig.4:Thefinal result ofthe skeletonization after three cycles

4. Implementation of Morphological operators using TVCNN

The two most fundamental morphological operations are erosion and dilation. The erosion operation uniformly reduces the size of objects in relation to their background. The dilation operation -inverse of erosion- uniformly expands the size of objects. Various forms of these operations provide the basis for many additional operations like closing and opening [11]. Dilation: The dilation operator drives all those white pixels, which have at least one direct black neighbour to black [12]. The template elements used for this task:

Fig. 5 Input image of dilation and erosion task.

'o c o"

[floo]

c b c

(7)

0 c 0

Erosion: The erosion operator drives all those black pixels, which have at least one direct white neighbours. The template parameters used for this task is the same one as used for dilation (7). The method of calculation for these two task is the unconditional method as in Section-3. Solution of (7) according to unconditional method and with respect to the binary dilation definition gives:

r[.r■rIIiImII~IiIiIiIiIi i■iiuiimiiiiiiiiiiiim iii

0 5 0
A=[\2\ B= 5 5 5 4=2 0 5 0^

Fig.6 The results of dilation. (8)

while solution of (7) according to erosion definition

0 .5 0"

A=[l2] B= 5 5 5 h = "2

(9)

0 5 0

I I

It is clear that the erosion and dilation have the same

Fig.7 The results of erosion

template. This mean that we can design a TVCNN-based

morphology chip which can perform both erosion and

dilation by only switching the bias Ib.

The image in Fig.5 is applied as the input for both dilation and erosion. A TVCNN with template parameters in

(8), results in image dilation as shown in Fig.6. For erosion task, a network with template parameters in (9) results

in image erosion in Fig.7.

Opening and Closing: Erosion and dilation operations are considered the primary morphological operations, while opening and closing are secondary and are implemented using erosion and dilation [11]. The opening operation is simply an erosion operation followed by a dilation operation. Opening is used to remove single-pixel objects such as small spurs and single-pixel noise spikes(high frequencies) with maintaining the

90

original shapes and size of objects in the image. The closing operation is a dilation followed by erosion operation. Closing fills in single-pixel objects, such as small holes and gaps with maintaining of shapes and sizes of objects. Fig.8 shows a binary images of size 64X64 for the tasks of opening and closing. Opening and closing should be implemented using 2-layer structure of TVCNN. Opening can be implemented by using the first layer to implement erosion and the second layer to implement the dilation, while for closing the first layer of the structure to implement the dilation and the second for erosion. Fig.9 and Fig. 10 show the output of TVCNN layers for opening and closing respectively. Fig. 11 shows that, if the input image with high level of noise, the opening can not maintain the original objects, so it is better to do closing first and next opening. The most application of opening and closing is in removing of the high frequencies in image
10 30 50 60
(b) Fig.8 Input imagesfor opening and closing tasks ofthe same objects with different level ofnoise
Fig.9 Implementation ofopening when the input image is in Fig. 7(left). The output of thefirst layer (erosion) is shown in left-hand side andfor the second layer (dilation) is shown in right-hand side.
Fig. 10 Implementation ofclosing when the input is image infig. /'(right). The output ofthefirst layer (dilation) is shown in left-hand side andfor the second layer (erosion) is shown in right-hand side.
91

10
20
40
50
60
Fig. 11 Implementation ofopening when the input is image infig. 7(right). The output ofthefirst layer (erosion) is shown in left-hand side and for the second layer (dilation) is shown in right-hand side.
5. Conclusion
In this paper a different advanced image processing tasks are presented. These tasks had been implemented using CNN with time-varying cell gain. Using this technique, with the proposed template design method, lead us to the conclusion that time-varying CNN architecture can be a useful approach for optimal image processing tasks especially when a VLSI implementations are considered. These tasks of morphological image processing can be achieved by both time-invariant and time-varying CNN. The benefit of using the TVCNN for such a tasks is that the network does not need to be initialized, which results in a simplification of the analogue realization. The network can also avoid the problems of initialization circuit like noise and fault, as well as the network will terminate with lower level of energy. This helps the network in the steady state to keep the CNN output (the image processing task) out of any additional noise or fault in the cell state.
7. References
[I] Petros. A. Maragos and Poland W. Schäfer: Morphological Skeleton Representation and Coding of Binary Images", IEEE Tran, on Acoustics, Speech, and Signal Processing Assp-34, No.5 1986.
[2] Akos Zarandy, Ander Stoffels, Tomas Roska and Leon O. Chua: Implementation of Binary and Grey-scale Mathematical Morphology on CNNUM', Report UCB/ERL M95/96,1996.
P] BJ Sheu and J Choi: Neural Information Processing and VLSI, Kulwer Acad. Publishers, Boston 1995. [4] S. H. Bang, B.J. Sheu, and T.H.-Y Wu: Optimal Solution for Cellular Neural Networks by Paralleled
Hardware Annealing", IEEE Trans, on Neural Network, Vol. 7, pp. 440-454, March 1996 [5] N.N Kamiss Al-Ani and T. Kacprzak: Computer Simulation of Time-Varying Cellular Neural Networks"
Third Conference Neural Networks and their Application, Kule, Poland, 14 October 1997, pp. 576-582. [6] N.N Kamiss Al-Ani and T. Kacprzak: Image Processing Using Time-Varying Cellular Neural Networks"
Proc. Fifth IEEE International Workshop on Cellular Neural Networks and their Applications, London, England, 14-17 April 1998, pp. 319-324. [7] B. K. P. Horn, Robot Vision. New York: McGraw-Hill, 1986. [8] D. Yu, C. Ho, X. Yu and S. Mori: On the Application of Cellular Automata to Image Thinning with CNN, in Proc. Int. Workshop Cellular neural Networks and Their Applications, IEEE, 1992. [9] Peter L. Venetianer, Frank Werblin, Tamas Roska, and Leon O. Chua "Analogic CNN Algorithms for Some Image Processing and Restoration Tasks ", IEEE Tran, on Circuits and Syst.-I: May 1995, pp. 278-284. [10] Nasser N. Kamiss Al-Ani and T. Kacprzak: Application of Time-Varying CNNs for Morphological Operation in Image Processing, Colloquia in Artificial Inteligence, CAI'98, Lodz, Poland, September 28-30, 1998, pp. 95-106. [II] Gregory A. Baxes: Digital Image Processing Principles and Applications, John Wiley and Sons Inc. 1994. [12] Akos Zarandy, Andre Sttoffels, Tomas Roska, and Leon O. Chua " Morphological Operators on the CNN Universal Machine ", IEEE International Workshop on CNN and their Applications, Seville, Spain June 2426 1996, pp.
92

