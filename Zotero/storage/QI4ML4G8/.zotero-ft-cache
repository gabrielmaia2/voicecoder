arXiv:1708.00853v1 [cs.SD] 2 Aug 2017

Workshop track - ICLR 2017
AUDIO SUPER-RESOLUTION USING NEURAL NETS
Volodymyr Kuleshov, S. Zayd Enam, and Stefano Ermon Department of Computer Science, Stanford University {kuleshov,ermon}@cs.stanford.edu zayd@stanford.edu
ABSTRACT
We introduce a new audio processing technique that increases the sampling rate of signals such as speech or music using deep convolutional neural networks. Our model is trained on pairs of low and high-quality audio examples; at test-time, it predicts missing samples within a low-resolution signal in an interpolation process similar to image super-resolution. Our method is simple and does not involve specialized audio processing techniques; in our experiments, it outperforms baselines on standard speech and music benchmarks at upscaling ratios of 2×, 4×, and 6×. The method has practical applications in telephony, compression, and text-tospeech generation; it demonstrates the effectiveness of convolutional architectures on an audio generation task.
1 INTRODUCTION
The generative modeling of audio signals is a fundamental problem at the intersection of signal processing and machine learning; recent learning-based algorithms have enabled advances in speech recognition (Hinton et al., 2012), audio synthesis (van den Oord et al., 2016; Mehri et al., 2016), music recommendation systems (Coviello et al., 2012; Wang & Wang, 2014; Liang et al., 2015), and in many other areas (Acevedo et al., 2009). Audio processing also raises basic research questions pertaining to time series and generative modeling (Haykin & Chen, 2005; Bilmes, 2004).
One of the most signiﬁcant recent advances in machine learning-based audio processing has been the ability to directly model raw signals in the time domain using neural networks (van den Oord et al., 2016; Mehri et al., 2016). Although this affords us the maximum modeling ﬂexibility, it is also computationally expensive, requiring us to handle > 10, 000 audio samples at every second.
In this paper, we explore new lightweight modeling algorithms for audio. In particular, we focus on a speciﬁc audio generation problem called bandwidth extension, in which the task is to reconstruct high-quality audio from a low-quality, down-sampled input containing only a small fraction (1550%) of the original samples. We introduce a new neural network-based technique for this problem that is inspired image super-resolution algorithms (Dong et al., 2016), which use machine learning techniques to interpolate a low-resolution image into a higher-resolution one. Learning-based methods often perform better in this context than general-purpose interpolation schemes such as splines because they leverage sophisticated domain-speciﬁc models of the appearance of natural signals.
As in image super-resolution, our model is trained on pairs of low and high-quality samples; at testtime, it predicts the missing samples of a low-resolution input signal. Unlike recent neural networks for generating raw audio, our model is fully feedforward and can be run in real-time. In addition to having multiple practical applications, our method also suggests new ways to improve existing generative models of audio.
1.1 CONTRIBUTIONS
From a practical perspective, our technique has applications in telephony, compression, text-tospeech generation, forensic analysis, and in other domains. It outperforms baselines at 2×, 4×, and 6× upscaling ratios, while also being signiﬁcantly simpler than previous methods. Whereas most existing audio enhancement methods make substantial use of signal processing theory, our
1

Workshop track - ICLR 2017

Figure 1: Deep residual network used for audio super-resolution. We extract features via B residual blocks; upscaling is done via stacked SubPixel layers.

approach is conceptually very simple and requires no specialized knowledge to implement. Our neural networks are simply trained to map one audio time series into another. Our approach is also among the ﬁrst to use convolutional architectures for bandwidth extension; as a result, it scales better with dataset size and computational resources relative to current alternatives.
From a generative modeling perspective, our work demonstrates that purely feedforward architectures operating in a non-discretized output space can achieve good performance on an important audio generation task. This hints at the possibility of designing improved generative models for audio that combine both feedforward and recurrent components.

2 SETUP AND BACKGROUND

Audio processing. We represent an audio signal as a function s(t) : [0, T ] → R, where T is the

duration of the signal (in seconds) and s(t) is the amplitude at t. Taking a digital measurement of s

requires

us

to

discretize

the

continuous

function

s(t)

into

a

vector

x(t)

:

{

1 R

,

2 R

,

...,

RT R

}

→

R.

We

refer to R as the sampling rate of x (in Hz). Sampling rates may range from 4 KHz (low-quality

telephone speech) to 44 Khz (high-ﬁdelity music).

In this work, we interpret R as the resolution of x; our goal is to increase the resolution of audio

samples

by

predicting

x

from

a

fraction

of

its

samples

taken

at

{

1 R

,

2 R

,

...,

RT R

}.

Note

that

by

basic

signal processing theory, this is equivalent to predicting the higher frequencies of x.

Bandwidth extension. Audio upsampling has been studied in the audio processing community under the name bandwidth extension (Ekstrand, 2002; Larsen & Aarts, 2005). Several learningbased approaches have been proposed, including Gaussian mixture models (Cheng et al., 1994; Park & Kim, 2000) and neural networks (Li et al., 2015). These methods typically involve handcrafted features and use relatively simple models (e.g., neural networks with at most 2-3 densely connected layers) that are often part of a larger, more complex systems. In comparison, our method is conceptually simple (operating directly on the raw audio signal), scalable (our neural networks are fully convolutional and fully feed-forward), more accurate, and is also among the few to have been tested on non-speech audio.

3 METHOD
3.1 SETUP
Given a low resolution signal x = {x1/R1 , ...xR1T1/R1 } sampled at a rate R1, our goal is to reconstruct a high-resolution version y = {y1/R2 , ...yR2T2/R2 } of x that has a sampling rate R2 > R1. For example, x may be a voice signal transmitted via a standard telephone connection at 4 KHz; y may be a high-resolution 16 KHz reconstruction of the orignal. We use r = R2/R1 to denote

2

Workshop track - ICLR 2017

Frequency Frequency Frequency Frequency

700 High-Res Audio Signal y
600 500 400 300 200 100
045 50 55 60 65 70 75 80 85 Frame

700 Low-Res Audio x (r = 4)
600 500 400 300 200 100
045 50 55 60 65 70 75 80 85 Frame

700 Baseline reconstruction
600 500 400 300 200 100
045 50 55 60 65 70 75 80 85 Frame

700 Our reconstruction of y
600 500 400 300 200 100
045 50 55 60 65 70 75 80 85 Frame

Figure 2: Audio super-resolution visualized using spectrograms. A high-quality speech signal (leftmost) is subsampled at r = 4, resulting in the loss of high frequencies (2nd from left). We recover the missing signal using a trained neural network (rightmost), greatly outperforming the cubic baseline (second from right).

the upsampling ratio of the two signals, which in our work equals r = 2, 4, 6. We thus expect that yrt/R2 ≈ xt/R1 for t = 1, 2, ..., T1R1.
To recover the under-deﬁned signal, we learn a model p(y|x) of the higher-resolution y, conditioned on its low-resolution instantiation x. We assume that the relationship between the time series x, y follows the equation y = fθ(x) + , where ∼ N (0, 1) is Gaussian noise and fθ is a model parametrized by θ. Our framework also extends to more complex noise models which the user may provide as a prior or that may be themselves parametrized by the model (similarly to how one parametrizes the normal distribution in a variational autoencoder).
The above formulation naturally leads to a mean squared error (MSE) objective

1 (D) =
n

n
||yi − fθ(xi)||22

(1)

i=1

for determining the parameters θ based on a dataset D = {xi, yi}ni=1 of source/target time series pairs. Since our model is fully convolutional, we may take the xi, yi to be small patches sampled
from the full time series.

3.2 MODEL ARCHITECTURE
We parametrize the function f with a deep convolutional neural network with residual connections; our neural network architecture is based on ideas from Shi et al. (2016), Dong et al. (2016), and Isola et al. (2016), and is shown in Figure 1. We highlight its main features below.

Bottleneck architecture. Our model contains B successive downsampling and upsampling blocks: each performs a convolution, batch normalization, and applies a ReLU non-linearity. Downsampling block b = 1, 2, ..., B contains max(26+b, 512) convolutional ﬁlters of length min(27−b + 1, 9) and a stride of 2. Upsampling block b has max(27+(B−b+1), 512) ﬁlters of length min(27−(B−b+1) + 1, 9).
Thus, at a downsampling step, we halve the spatial dimension and double the ﬁlter size; during upsampling, this is reversed. This bottleneck architecture is inspired by auto-encoders, and is known to encourage the model to learn a hierarchy of features. For example, on an audio task, bottom layers may extract wavelet-style features, while higher ones may correspond to phonemes Aytar et al. (2016). Note that the model is fully convolutional, and may run on input sequences of arbitrary length.

Skip connections. When the source series x is similar to the target y, downsampling features will be also be useful for upsampling (Isola et al., 2016). We thus add additional skip connections which

3

Workshop track - ICLR 2017

stack the tensor of b-th downsampling features with the (B −b+1)-th tensor of upsampling features. We also add an additive residual connection from the input to the ﬁnal output: the model thus only needs to learn y − x, which in practice speeds up training.
Subpixel shufﬂing layer. In order to increase the time dimension during upscaling, we have implemented a one-dimensional version of the Subpixel layer of Shi et al. (2016), which has been shown to be less prone to produce artifacts (Odena et al., 2016).
An upscaling block’s convolution maps an input tensor of dimension F × d into one of size F/2 × d. The subpixel layer reshufﬂes this F/2×d tensor into another one of size F/4×2d (while preserving the tensor entries intact); these are concatenated with F/4 features from the downsampling stage, for a ﬁnal output of size F/2 × 2d. Thus, we have halved the number of ﬁlters and doubled the spatial dimension.

4 EXPERIMENTS

Datasets. We use the VCTK dataset (Yamagishi) — which contains 44 hours of data from 108 different speakers — and the Piano dataset of Mehri et al. (2016) (10 hours of Beethoven sonatas). We generate low-resolution audio signal from the 16 KHz originals by applying an order 8 Chebyshev type I low-pass ﬁlter before subsampling the signal by the desired scaling ratio.
We evaluate our method in three regimes. The SINGLESPEAKER task trains the model on the ﬁrst 223 recordings of VCTK Speaker 1 (about 30 mins) and tests on the last 8 recordings. The MULTISPEAKER task assesses our ability to generalize to new speakers. We train on the ﬁrst 99 VCTK speakers and test on the 8 remaining ones; our recordings feature different voices and accents (Scottish, Indian, etc.) Lastly, the PIANO task extends audio-super resolution to non-vocal data; we use the standard 88%-6%-6% data split.

Methods. We compare our method relative to two baselines: a cubic B-spline — which corresponds to the bicubic upsampling baseline used in image super-resolution — and the recent neural network-based technique of Li et al. (2015),
The latter approach takes as input the short-time Fourier transform (STFT) of the input and predicts directly the phase and the magnitudes of the high frequency components using a dense neural network with three hidden layers of size 2048 and ReLU nonlinearities. Li et al. (2015) have shown that this method is preferred over Gaussian Mixture Models in 84% of cases in a user study. This model requires that the scaling ratio be a power of 2, hence it is not applicable when r = 6.
We instantiate our model with B = 4 blocks and train it for 400 epochs on patches of length 6000 (in the high-resolution space) using the ADAM optimizer with a learning rate of 10−4. To ensure source/target series are of the same length, the source input is pre-processed with cubic upscaling. We do not compare against previously-proposed matrix factorization techniques (Bansal et al., 2005; Liang et al., 2013), as they are typically trained on < 10 input examples (Sun & Mazumder, 2013) (due to the cost of jointly factorizing a large number of matrices), and do not scale to the size of our datasets.

Metrics Given a reference signal y and an approximation x, the Signal to Noise Ratio (SNR) is

deﬁned as

SNR(x,

y)

=

10

log

||y||22 ||x − y||22

.

(2)

The SNR is a standard metric used in the signal processing literature. The Log-spectral distance

(LSD) (Gray & Markel, 1976) measures the reconstruction quality of individual frequencies as fol-

lows:

1L LSD(x, y) =

1K

2
X( , k) − Xˆ ( , k) ,

(3)

L

K

=1

k=1

where X and Xˆ are the log-spectral power magnitudes of y and x, respectively. These are deﬁned as X = log |S|2, where S is the short-time Fourier transform (STFT) of the signal. We use and k

index frames and frequencies, respectively; in our experiments, we used frames of length 2048.

4

Workshop track - ICLR 2017

SingleSpeaker

MultiSpeaker

Piano

Ratio Obj. Spline DNN Ours Spline DNN Ours Spline DNN Ours

r = 2 SNR 20.3 20.1 21.1 19.7 19.9 20.7 29.4 29.3 30.1

LSD 4.5 3,7 3.2 4.4 3.6 3.1 3.5 3.4 3.4

r = 4 SNR 14.8 15.9 17.1 13.0 14.9 16.1 22.2 23.0 23.5

LSD 8.2 4.9 3.6 8.0 5.8 3.5 5.8 5.2 3.6

r = 6 SNR 10.4 n/a 14.4 9.1 n/a 10.0 15.4 n/a 16.1

LSD 10.3 n/a 3.4 10.1 n/a 3.7 7.3 n/a 4.4

Table 2: Accuracy evaluation of audio-super resolution methods (in dB) on each of the three superresolution tasks at upscaling ratios r = 2, 4, 6.

Evaluation The results of our experiments are summarized in Table 2. Our objective metrics show an improvement of 1-5 dB over the baselines, with the strongest improvements at higher upscaling factors. Although, the spline

Ours DNN Spline

MultiSpeaker Sample 123 4 69 75 64 37 51 55 66 53 31 25 38 47

Average 61.3 56.3 35.3

baseline achieves a high SNR, its signal often lacks higher frequencies; the LSD metric is better at identifying this problem. Our technique also improves over the DNN baseline; our con-

Table 1: MUSHRA user study scores. We show scores for each sample, averaged individual users. Average across all samples is also displayed

volutional architecture appears to use our mod-

eling capacity more efﬁciently than a dense neural network, and we expect such architectures will

soon be more widely used in audio generation tasks.

Next, we conﬁrmed our objective experiments with a study in which human raters were asked to assess the quality of super-resolution using a MUSHRA (MUltiple Stimuli with Hidden Reference and Anchor) test. For each trial an audio sample was upscaled using different techniques1. We collected four VCTK speaker recordings audio samples from the MULTISPEAKER testing set. For each recording, we collected the original utterance, a downsampled version at r = 4, as well as signals super-resolved using Splines, DNNs, and our model (six versions in total). We recruited 10 subjects and used an online survey to ask each of them to rate each sample on a scale of 0 (extremely bad) to 100 (excellent) reconstruction. The results from the experiment are summarized in Table 1. Our method ranked as being the best out of the three upscaling techniques.

Domain adaptation. We tested the sensitivity of our method to out-of-distribution input via an audio super-resolution experiment in which the training set did not use a low-pass ﬁlter, while the test set did, and vice-versa. We focused on the PIANO task and

LPF (Train) No LPF (Train)

LPF (Test) SNR LSD 30.1 3.4 0.43 4.4

No LPF (Test) SNR LSD 0.42 4.5 33.2 3.3

r = 2. The output from the model was noisier than Table 3: Sensitivity of the model to whether

expected, indicating that generalization is an impor- low-resolution audio was subject to a low-

tant practical concern. We suspect this behavior may pass ﬁlter (LPF) in dB.

be common in super-resolution algorithms, but has

not been widely documented. A potential solution would be to train on data that has been generated

using multiple techniques.

In addition, we examined the ability of our model to generalize from speech to music and vice versa. We found that switching domains produced noisy output, again highlighting the specialization of the model.

Architectural analysis. We examined the importance of our various architectural design choices via an ablation analysis on the MULTISPEAKER audio super-resolution task using an upscaling ratio of r = 4. The adjacent ﬁgure displays the result: the green-ish line display the validation set 2 loss of the original model over time; the yellow curve removes the additive residual connection; the green curve further removes the additive skip connection (while preserving the same total number
1We have posted a our set of samples to: https://kuleshov.github.io/audio-super-res/.

5

Workshop track - ICLR 2017

of ﬁlters). This shows that symmetric skip connections are crucial for attaining good performance; additive connections add an additional small, but perceptible, improvement.

Computational performance. Our model is computationally efﬁcient and can be run in real time. On the PIANO task (where all input signals are 12s in length), our method processed a single second of audio in 0.11s on average on a Titan X GPU. Training our models, however, required about 2 days for the MULTISPEAKER task. Unlike sequence-to-sequence architectures our model does not require the complete input sequence in order to begin generating an output sequence.

Validation L2 loss

0.05 0.04 0.03 0.02 0.01 0.000

Model Ablation Analysis
No additive or stacking connections No additive connection Full model
1000 2000 3000 4000 5000 Step

Figure 3: Model ablation analysis on the MultiSpeaker audio super-resolution task with r = 4.

4.1 LIMITATIONS
Finally, to explore the limits of our approach, we evaluated our method on the MagnaTagATune dataset, which consists of about 200 hours of music from 188 different genres. This dataset is larger and much more diverse that the ones we considered so far. We found that our model underﬁt the dataset, with very little reduction in the training error, and no improvement over the spline baseline. Other learning-based baselines fared similarly. However, we expect improved results with a larger model and more computational resources.

5 PREVIOUS WORK AND DISCUSSION
Time series modeling. In the machine learning literature, time series signals have most often been modeled with auto-regressive models, of which variants of recurrent networks are a special case (Gers et al., 2001; Maas et al., 2012; Mehri et al., 2016). Our approach instead generalizes conditional modeling ideas used in computer vision for tasks such as image super-resolution (Dong et al., 2016; Ledig et al., 2016) or colorization (Zhang et al., 2016).
We identify a broad class of conditional time series modeling problems that arise in signal processing, biomedicine, and other ﬁelds and that are characterized by a natural alignment among source/target series pairs and differences that are well-represented by local transformations. We propose a general architecture for such problems and show that it works well in different domains.
Bandwidth extension. Existing learning-based approaches include Gaussian mixture models (Cheng et al., 1994; Park & Kim, 2000; Pulakka et al., 2011), linear predictive coding (Bradbury, 2000), and neural networks (Li et al., 2015). Our work proposes the ﬁrst convolutional architecture, which we ﬁnd to scale better with dataset size and outperform recent, specialized methods. Moreover, while existing techniques involve many hand-crafted features (see e.g., Pulakka et al. (2011)); our approach is fully domain-agnostic.
Audio applications. In telephony, commercial efforts are underway to transmit voice at higher rates (typically 16 Khz) in speciﬁc handsets; audio-super resolution is a step towards recreating this experience in software. Similar applications could be found in compression, text-to-speech generation, and forensic analysis. More generally, our work demonstrates the effectiveness of feedforward convolutional architectures on an audio generation task.

6 CONCLUSION
Machine learning techniques based on deep neural networks have been successful at solving underdeﬁned problems in signal processing such as image super-resolution, colorization, in-painting, and many others. Learning-based methods often perform better in this context than general-purpose algorithms because they leverage sophisticated domain-speciﬁc models of the appearance of natural signals.

6

Workshop track - ICLR 2017
In this work, we proposed new techniques that use this insight to upsample audio signals. Our technique extends previous work on image super-resolution to the audio domain; it outperforms previous bandwidth extension approaches on both speech and non-vocal music. Our approach is fast and simple to implement, and has applications in telephony, compression, and text-to-speech generation. It also demonstrates the effectiveness of feedforward architectures on an important audio generation task, suggesting new directions for generative audio modeling.
REFERENCES
Miguel A Acevedo, Carlos J Corrada-Bravo, He´ctor Corrada-Bravo, Luis J Villanueva-Rivera, and T Mitchell Aide. Automated classiﬁcation of bird and amphibian calls using machine learning: A comparison of methods. Ecological Informatics, 4(4):206–214, 2009.
Yusuf Aytar, Carl Vondrick, and Antonio Torralba. Soundnet: Learning sound representations from unlabeled video. In Advances in Neural Information Processing Systems 29: Annual Conference on Neural Information Processing Systems 2016, December 5-10, 2016, Barcelona, Spain, pp. 892–900, 2016. URL http://papers.nips.cc/paper/ 6146-soundnet-learning-sound-representations-from-unlabeled-video.
Dhananjay Bansal, Bhiksha Raj, and Paris Smaragdis. Bandwidth expansion of narrowband speech using non-negative matrix factorization. In in Proc. Interspeech, 2005.
Jeffrey A Bilmes. Graphical models and automatic speech recognition. In Mathematical foundations of speech and language processing, pp. 191–245. Springer, 2004.
Jeremy Bradbury. Linear predictive coding. Mc G. Hill, 2000.
Yan Ming Cheng, Douglas O’Shaughnessy, and Paul Mermelstein. Statistical recovery of wideband speech from narrowband speech. IEEE Transactions on Speech and Audio Processing, 2(4):544– 548, 1994.
Emanuele Coviello, Yonatan Vaizman, Antoni B Chan, and Gert RG Lanckriet. Multivariate autoregressive mixture models for music auto-tagging. In ISMIR, pp. 547–552, 2012.
Chao Dong, Chen Change Loy, Kaiming He, and Xiaoou Tang. Image super-resolution using deep convolutional networks. IEEE Trans. Pattern Anal. Mach. Intell., 38(2):295–307, February 2016. ISSN 0162-8828. doi: 10.1109/TPAMI.2015.2439281. URL http://dx.doi.org/10. 1109/TPAMI.2015.2439281.
Per Ekstrand. Bandwidth extension of audio signals by spectral band replication. In in Proceedings of the 1st IEEE Benelux Workshop on Model Based Processing and Coding of Audio (MPCA02. Citeseer, 2002.
Felix A Gers, Douglas Eck, and Ju¨rgen Schmidhuber. Applying lstm to time series predictable through time-window approaches. In International Conference on Artiﬁcial Neural Networks, pp. 669–676. Springer, 2001.
Augustine Gray and John Markel. Distance measures for speech processing. IEEE Transactions on Acoustics, Speech, and Signal Processing, 24(5):380–391, 1976.
Simon Haykin and Zhe Chen. The cocktail party problem. Neural computation, 17(9):1875–1902, 2005.
Geoffrey Hinton, Li Deng, Dong Yu, George E Dahl, Abdel-rahman Mohamed, Navdeep Jaitly, Andrew Senior, Vincent Vanhoucke, Patrick Nguyen, Tara N Sainath, et al. Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups. IEEE Signal Processing Magazine, 29(6):82–97, 2012.
Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, and Alexei A Efros. Image-to-image translation with conditional adversarial networks. arxiv, 2016.
Erik Larsen and Ronald M Aarts. Audio bandwidth extension: application of psychoacoustics, signal processing and loudspeaker design. John Wiley & Sons, 2005.
7

Workshop track - ICLR 2017
Christian Ledig, Lucas Theis, Ferenc Huszar, Jose Caballero, Andrew P. Aitken, Alykhan Tejani, Johannes Totz, Zehan Wang, and Wenzhe Shi. Photo-realistic single image super-resolution using a generative adversarial network. CoRR, abs/1609.04802, 2016. URL http://arxiv.org/ abs/1609.04802.
Kehuang Li, Zhen Huang, Yong Xu, and Chin-Hui Lee. Dnn-based speech bandwidth expansion and its application to adding high-frequency missing features for automatic speech recognition of narrowband speech. In Sixteenth Annual Conference of the International Speech Communication Association, 2015.
Dawen Liang, Matthew D. Hoffman, and Daniel P. W. Ellis. Beta process sparse nonnegative matrix factorization for music. In Alceu de Souza Britto Jr., Fabien Gouyon, and Simon Dixon (eds.), Proceedings of the 14th International Society for Music Information Retrieval Conference, ISMIR 2013, Curitiba, Brazil, November 4-8, 2013, pp. 375–380, 2013. ISBN 978-0-615-90065-0. URL http://www.ppgia.pucpr.br/ismir2013/ wp-content/uploads/2013/09/229_Paper.pdf.
Dawen Liang, Minshu Zhan, and Daniel PW Ellis. Content-aware collaborative music recommendation using pre-trained neural networks. In ISMIR, pp. 295–301, 2015.
Andrew Maas, Quoc V. Le, Tyler M. ONeil, Oriol Vinyals, Patrick Nguyen, and Andrew Y. Ng. Recurrent neural networks for noise reduction in robust asr. In INTERSPEECH, 2012.
Soroush Mehri, Kundan Kumar, Ishaan Gulrajani, Rithesh Kumar, Shubham Jain, Jose Sotelo, Aaron Courville, and Yoshua Bengio. Samplernn: An unconditional end-to-end neural audio generation model, 2016. URL http://arxiv.org/abs/1612.07837. cite arxiv:1612.07837.
Augustus Odena, Vincent Dumoulin, and Chris Olah. Deconvolution and checkerboard artifacts. Distill, 2016. doi: 10.23915/distill.00003. URL http://distill.pub/2016/ deconv-checkerboard.
Kun-Youl Park and Hyung Soon Kim. Narrowband to wideband conversion of speech using gmm based transformation. In Acoustics, Speech, and Signal Processing, 2000. ICASSP’00. Proceedings. 2000 IEEE International Conference on, volume 3, pp. 1843–1846. IEEE, 2000.
Hannu Pulakka, Ulpu Remes, Kalle Paloma¨ki, Mikko Kurimo, and Paavo Alku. Speech bandwidth extension using gaussian mixture model-based estimation of the highband mel spectrum. In Acoustics, Speech and Signal Processing (ICASSP), 2011 IEEE International Conference on, pp. 5100–5103. IEEE, 2011.
Wenzhe Shi, Jose Caballero, Ferenc Huszar, Johannes Totz, Andrew P. Aitken, Rob Bishop, Daniel Rueckert, and Zehan Wang. Real-time single image and video super-resolution using an efﬁcient sub-pixel convolutional neural network. pp. 1874–1883, 2016. doi: 10.1109/CVPR.2016.207. URL http://dx.doi.org/10.1109/CVPR.2016.207.
Dennis L. Sun and Rahul Mazumder. Non-negative matrix completion for bandwidth extension: A convex optimization approach. In IEEE International Workshop on Machine Learning for Signal Processing, MLSP 2013, Southampton, United Kingdom, September 22-25, 2013, pp. 1–6. IEEE, 2013. doi: 10.1109/MLSP.2013.6661924. URL http://dx.doi.org/10.1109/MLSP. 2013.6661924.
Aa¨ron van den Oord, Sander Dieleman, Heiga Zen, Karen Simonyan, Oriol Vinyals, Alex Graves, Nal Kalchbrenner, Andrew W. Senior, and Koray Kavukcuoglu. Wavenet: A generative model for raw audio. CoRR, abs/1609.03499, 2016. URL http://arxiv.org/abs/1609.03499.
Xinxi Wang and Ye Wang. Improving content-based and hybrid music recommendation using deep learning. In Proceedings of the 22nd ACM international conference on Multimedia, pp. 627–636. ACM, 2014.
Junichi Yamagishi. English multi-speaker corpus for cstr voice cloning toolkit, 2012. URL http://homepages. inf. ed. ac. uk/jyamagis/page3/page58/page58. html.
Richard Zhang, Phillip Isola, and Alexei A Efros. Colorful image colorization. ECCV, 2016.
8

